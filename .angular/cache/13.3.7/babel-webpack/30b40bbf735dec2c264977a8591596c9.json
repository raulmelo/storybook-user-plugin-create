{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { c as commonjsGlobal, a as __rest } from './index-3ae04fda.js';\nimport React__default, { useRef, useEffect } from 'react';\nimport '@storybook/theming';\nimport '@storybook/csf';\nimport 'qs';\nimport '@storybook/client-logger';\nvar OverlayScrollbars$1 = {\n  exports: {}\n};\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n\n(function (module) {\n  (function (global, factory) {\n    module.exports = factory(global, global.document, undefined);\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\n    var PLUGINNAME = 'OverlayScrollbars';\n    var TYPES = {\n      o: 'object',\n      f: 'function',\n      a: 'array',\n      s: 'string',\n      b: 'boolean',\n      n: 'number',\n      u: 'undefined',\n      z: 'null' //d : 'date',\n      //e : 'error',\n      //r : 'regexp',\n      //y : 'symbol'\n\n    };\n    var LEXICON = {\n      c: 'class',\n      s: 'style',\n      i: 'id',\n      l: 'length',\n      p: 'prototype',\n      ti: 'tabindex',\n      oH: 'offsetHeight',\n      cH: 'clientHeight',\n      sH: 'scrollHeight',\n      oW: 'offsetWidth',\n      cW: 'clientWidth',\n      sW: 'scrollWidth',\n      hOP: 'hasOwnProperty',\n      bCR: 'getBoundingClientRect'\n    };\n\n    var VENDORS = function () {\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n      var jsCache = {};\n      var cssCache = {};\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n      function firstLetterToUpper(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n\n      return {\n        _cssPrefixes: cssPrefixes,\n        _jsPrefixes: jsPrefixes,\n        _cssProperty: function _cssProperty(name) {\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var uppercasedName = firstLetterToUpper(name);\n          var elmStyle = document.createElement('div')[LEXICON.s];\n          var resultPossibilities;\n          var i = 0;\n          var v;\n          var currVendorWithoutDashes;\n\n          for (; i < cssPrefixes.length; i++) {\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n            resultPossibilities = [name, //transition\n            cssPrefixes[i] + name, //-webkit-transition\n            currVendorWithoutDashes + uppercasedName, //webkitTransition\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n            ];\n\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\n                result = resultPossibilities[v];\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n          var name = property + ' ' + values;\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var dummyStyle = document.createElement('div')[LEXICON.s];\n          var possbleValues = values.split(' ');\n          var preparedSuffix = suffix || '';\n          var i = 0;\n          var v = -1;\n          var prop;\n\n          for (; i < possbleValues[LEXICON.l]; i++) {\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n              if (dummyStyle[LEXICON.l]) {\n                result = prop;\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\n          var i = 0;\n          var result = jsCache[name];\n\n          if (!jsCache[LEXICON.hOP](name)) {\n            result = window[name];\n\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n            }\n\n            jsCache[name] = result;\n          }\n\n          return result || fallback;\n        }\n      };\n    }();\n\n    var COMPATIBILITY = function () {\n      function windowSize(x) {\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n      }\n\n      function bind(func, thisObj) {\n        if (_typeof(func) != TYPES.f) {\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var proto = LEXICON.p;\n        var aArgs = Array[proto].slice.call(arguments, 2);\n\n        var fNOP = function fNOP() {};\n\n        var fBound = function fBound() {\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n        };\n\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n        fBound[proto] = new fNOP();\n        return fBound;\n      }\n\n      return {\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\n        wW: bind(windowSize, 0, true),\n\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\n        wH: bind(windowSize, 0),\n\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n          return window.setTimeout(func, 1000 / 60);\n        }),\n\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n          return window.clearTimeout(id);\n        }),\n\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\n        now: function now() {\n          return Date.now && Date.now() || new Date().getTime();\n        },\n\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\n        stpP: function stpP(event) {\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n        },\n\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\n        prvD: function prvD(event) {\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n        },\n\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\n        page: function page(event) {\n          event = event.originalEvent || event;\n          var strPage = 'page';\n          var strClient = 'client';\n          var strX = 'X';\n          var strY = 'Y';\n          var target = event.target || event.srcElement || document;\n          var eventDoc = target.ownerDocument || document;\n          var doc = eventDoc.documentElement;\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n          if (event.touches !== undefined$1) {\n            var touch = event.touches[0];\n            return {\n              x: touch[strPage + strX],\n              y: touch[strPage + strY]\n            };\n          } // Calculate pageX/Y if not native supported\n\n\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n            return {\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n            };\n          }\n\n          return {\n            x: event[strPage + strX],\n            y: event[strPage + strY]\n          };\n        },\n\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\n        mBtn: function mBtn(event) {\n          var button = event.button;\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n        },\n\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\n        inA: function inA(item, arr) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n            try {\n              if (arr[i] === item) return i;\n            } catch (e) {}\n          }\n\n          return -1;\n        },\n\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\n        isA: function isA(arr) {\n          var def = Array.isArray;\n          return def ? def(arr) : this.type(arr) == TYPES.a;\n        },\n\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\n        type: function type(obj) {\n          if (obj === undefined$1) return obj + '';\n          if (obj === null) return obj + '';\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n        },\n        bind: bind\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\n\n      };\n    }();\n\n    var MATH = Math;\n    var JQUERY = window.jQuery;\n\n    var EASING = function () {\n      var _easingsMath = {\n        p: MATH.PI,\n        c: MATH.cos,\n        s: MATH.sin,\n        w: MATH.pow,\n        t: MATH.sqrt,\n        n: MATH.asin,\n        a: MATH.abs,\n        o: 1.70158\n      };\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\n\n      return {\n        swing: function swing(x, t, b, c, d) {\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n        },\n        linear: function linear(x, t, b, c, d) {\n          return x;\n        },\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\n          return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n          return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\n          return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t + b;\n        },\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t * t + b;\n        },\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        easeInSine: function easeInSine(x, t, b, c, d) {\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n        },\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n        },\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n        },\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n        },\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n        },\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n        },\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n        },\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n        },\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n        },\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        },\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n        },\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d / 2) == 2) return b + c;\n          if (!p) p = d * (.3 * 1.5);\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n        },\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n        },\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n        },\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n          var o = 7.5625;\n\n          if ((t /= d) < 1 / 2.75) {\n            return c * (o * t * t) + b;\n          } else if (t < 2 / 2.75) {\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n          } else if (t < 2.5 / 2.75) {\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n          } else {\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n          }\n        },\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n      };\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright Â© 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\n    }();\n\n    var FRAMEWORK = function () {\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n      var _strSpace = ' ';\n      var _strEmpty = '';\n      var _strScrollLeft = 'scrollLeft';\n      var _strScrollTop = 'scrollTop';\n      var _animations = [];\n      var _type = COMPATIBILITY.type;\n      var _cssNumber = {\n        animationIterationCount: true,\n        columnCount: true,\n        fillOpacity: true,\n        flexGrow: true,\n        flexShrink: true,\n        fontWeight: true,\n        lineHeight: true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        widows: true,\n        zIndex: true,\n        zoom: true\n      };\n\n      function extend() {\n        var src,\n            copyIsArray,\n            copy,\n            name,\n            options,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments[LEXICON.l],\n            deep = false; // Handle a deep copy situation\n\n        if (_type(target) == TYPES.b) {\n          deep = target;\n          target = arguments[1] || {}; // skip the boolean and the target\n\n          i = 2;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n          target = {};\n        } // extend jQuery itself if only one argument is passed\n\n\n        if (length === i) {\n          target = FakejQuery;\n          --i;\n        }\n\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\n                } else {\n                  clone = src && isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined$1) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n\n        return target;\n      }\n\n      function inArray(item, arr, fromIndex) {\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n          if (arr[i] === item) return i;\n        }\n\n        return -1;\n      }\n\n      function isFunction(obj) {\n        return _type(obj) == TYPES.f;\n      }\n\n      function isEmptyObject(obj) {\n        for (var name in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isPlainObject(obj) {\n        if (!obj || _type(obj) != TYPES.o) return false;\n        var key;\n        var proto = LEXICON.p;\n        var hasOwnProperty = Object[proto].hasOwnProperty;\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n          return false;\n        }\n\n        for (key in obj) {\n          /**/\n        }\n\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n      }\n\n      function _each(obj, callback) {\n        var i = 0;\n\n        if (isArrayLike(obj)) {\n          for (; i < obj[LEXICON.l]; i++) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        } else {\n          for (i in obj) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        }\n\n        return obj;\n      }\n\n      function isArrayLike(obj) {\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n        var t = _type(obj);\n\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n      }\n\n      function stripAndCollapse(value) {\n        var tokens = value.match(_rnothtmlwhite) || [];\n        return tokens.join(_strSpace);\n      }\n\n      function matches(elem, selector) {\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n        var i = nodeList[LEXICON.l];\n\n        while (i--) {\n          if (nodeList[i] == elem) return true;\n        }\n\n        return false;\n      }\n\n      function insertAdjacentElement(el, strategy, child) {\n        if (COMPATIBILITY.isA(child)) {\n          for (var i = 0; i < child[LEXICON.l]; i++) {\n            insertAdjacentElement(el, strategy, child[i]);\n          }\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n      }\n\n      function setCSSVal(el, prop, val) {\n        try {\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n        } catch (e) {}\n      }\n\n      function parseCSSVal(prop, val) {\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n        return val;\n      }\n\n      function startNextAnimationInQ(animObj, removeFromQ) {\n        var index;\n        var nextAnim;\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n        if (animObj.q[LEXICON.l] > 0) {\n          nextAnim = animObj.q[0];\n\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n        } else {\n          index = inArray(animObj, _animations);\n          if (index > -1) _animations.splice(index, 1);\n        }\n      }\n\n      function setAnimationValue(el, prop, value) {\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n      }\n\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\n        var hasOptions = isPlainObject(options);\n        var from = {};\n        var to = {};\n        var i = 0;\n        var key;\n        var animObj;\n        var progress;\n        var step;\n        var specialEasing;\n        var duration;\n\n        if (hasOptions) {\n          easing = options.easing;\n          progress = options.progress;\n          step = options.step;\n          specialEasing = options.specialEasing;\n          complete = options.complete;\n          duration = options.duration;\n        } else duration = options;\n\n        specialEasing = specialEasing || {};\n        duration = duration || 400;\n        easing = easing || 'swing';\n        guaranteedNext = guaranteedNext || false;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          if (_animations[i].el === el) {\n            animObj = _animations[i];\n            break;\n          }\n        }\n\n        if (!animObj) {\n          animObj = {\n            el: el,\n            q: []\n          };\n\n          _animations.push(animObj);\n        }\n\n        for (key in props) {\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n        }\n\n        for (key in from) {\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\n        }\n\n        if (!isEmptyObject(to)) {\n          var timeNow;\n          var end;\n          var percent;\n          var fromVal;\n          var toVal;\n          var easedVal;\n          var timeStart;\n\n          var _frame;\n\n          var elapsed;\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n          var qObj = {\n            props: to,\n            duration: hasOptions ? options : duration,\n            easing: easing,\n            complete: complete\n          };\n\n          if (qPos === -1) {\n            qPos = animObj.q[LEXICON.l];\n            animObj.q.push(qObj);\n          }\n\n          if (qPos === 0) {\n            if (duration > 0) {\n              timeStart = COMPATIBILITY.now();\n\n              _frame = function frame() {\n                timeNow = COMPATIBILITY.now();\n                elapsed = timeNow - timeStart;\n                end = qObj.stop || elapsed >= duration;\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n                for (key in to) {\n                  fromVal = parseFloat(from[key]);\n                  toVal = parseFloat(to[key]);\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                  setAnimationValue(el, key, easedVal);\n\n                  if (isFunction(step)) {\n                    step(easedVal, {\n                      elem: el,\n                      prop: key,\n                      start: fromVal,\n                      now: easedVal,\n                      end: toVal,\n                      pos: percent,\n                      options: {\n                        easing: easing,\n                        speacialEasing: specialEasing,\n                        duration: duration,\n                        complete: complete,\n                        step: step\n                      },\n                      startTime: timeStart\n                    });\n                  }\n                }\n\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n                if (end) {\n                  startNextAnimationInQ(animObj);\n                  if (isFunction(complete)) complete();\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n              };\n\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\n            } else {\n              for (key in to) {\n                setAnimationValue(el, key, to[key]);\n              }\n\n              startNextAnimationInQ(animObj);\n            }\n          }\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\n      }\n\n      function _stop(el, clearQ, jumpToEnd) {\n        var animObj;\n        var qObj;\n        var key;\n        var i = 0;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          animObj = _animations[i];\n\n          if (animObj.el === el) {\n            if (animObj.q[LEXICON.l] > 0) {\n              qObj = animObj.q[0];\n              qObj.stop = true;\n              COMPATIBILITY.cAF()(qObj.frame);\n              animObj.q.splice(0, 1);\n              if (jumpToEnd) for (key in qObj.props) {\n                setAnimationValue(el, key, qObj.props[key]);\n              }\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n            }\n\n            break;\n          }\n        }\n      }\n\n      function elementIsVisible(el) {\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n      }\n\n      function FakejQuery(selector) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var base = new FakejQuery();\n        var elements = selector;\n        var i = 0;\n        var elms;\n        var el;\n\n        if (_type(selector) == TYPES.s) {\n          elements = [];\n\n          if (selector.charAt(0) === '<') {\n            el = document.createElement('div');\n            el.innerHTML = selector;\n            elms = el.children;\n          } else {\n            elms = document.querySelectorAll(selector);\n          }\n\n          for (; i < elms[LEXICON.l]; i++) {\n            elements.push(elms[i]);\n          }\n        }\n\n        if (elements) {\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n          for (i = 0; i < elements[LEXICON.l]; i++) {\n            base[i] = elements[i];\n          }\n\n          base[LEXICON.l] = elements[LEXICON.l];\n        }\n\n        return base;\n      }\n\n      FakejQuery[LEXICON.p] = {\n        //EVENTS:\n        on: function on(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.addEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.addEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.attachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        off: function off(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.removeEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.removeEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.detachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        one: function one(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          return this.each(function () {\n            var el = FakejQuery(this);\n            FakejQuery.each(eventName, function (i, oneEventName) {\n              var oneHandler = function oneHandler(e) {\n                handler.call(this, e);\n                el.off(oneEventName, oneHandler);\n              };\n\n              el.on(oneEventName, oneHandler);\n            });\n          });\n        },\n        trigger: function trigger(eventName) {\n          var el;\n          var event;\n          return this.each(function () {\n            el = this;\n\n            if (document.createEvent) {\n              event = document.createEvent('HTMLEvents');\n              event.initEvent(eventName, true, false);\n              el.dispatchEvent(event);\n            } else {\n              el.fireEvent('on' + eventName);\n            }\n          });\n        },\n        //DOM NODE INSERTING / REMOVING:\n        append: function append(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforeend', child);\n          });\n        },\n        prepend: function prepend(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterbegin', child);\n          });\n        },\n        before: function before(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforebegin', child);\n          });\n        },\n        after: function after(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterend', child);\n          });\n        },\n        remove: function remove() {\n          return this.each(function () {\n            var el = this;\n            var parentNode = el.parentNode;\n            if (parentNode != null) parentNode.removeChild(el);\n          });\n        },\n        unwrap: function unwrap() {\n          var parents = [];\n          var i;\n          var el;\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (inArray(parent, parents) === -1) parents.push(parent);\n          });\n\n          for (i = 0; i < parents[LEXICON.l]; i++) {\n            el = parents[i];\n            parent = el.parentNode;\n\n            while (el.firstChild) {\n              parent.insertBefore(el.firstChild, el);\n            }\n\n            parent.removeChild(el);\n          }\n\n          return this;\n        },\n        wrapAll: function wrapAll(wrapperHTML) {\n          var i;\n          var nodes = this;\n          var wrapper = FakejQuery(wrapperHTML)[0];\n          var deepest = wrapper;\n          var parent = nodes[0].parentNode;\n          var previousSibling = nodes[0].previousSibling;\n\n          while (deepest.childNodes[LEXICON.l] > 0) {\n            deepest = deepest.childNodes[0];\n          }\n\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n            deepest.appendChild(nodes[i]);\n          }\n\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n          parent.insertBefore(wrapper, nextSibling);\n          return this;\n        },\n        wrapInner: function wrapInner(wrapperHTML) {\n          return this.each(function () {\n            var el = FakejQuery(this);\n            var contents = el.contents();\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n          });\n        },\n        wrap: function wrap(wrapperHTML) {\n          return this.each(function () {\n            FakejQuery(this).wrapAll(wrapperHTML);\n          });\n        },\n        //DOM NODE MANIPULATION / INFORMATION:\n        css: function css(styles, val) {\n          var el;\n          var key;\n          var cptStyle;\n          var getCptStyle = window.getComputedStyle;\n\n          if (_type(styles) == TYPES.s) {\n            if (val === undefined$1) {\n              el = this[0];\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n            } else {\n              return this.each(function () {\n                setCSSVal(this, styles, val);\n              });\n            }\n          } else {\n            return this.each(function () {\n              for (key in styles) {\n                setCSSVal(this, key, styles[key]);\n              }\n            });\n          }\n        },\n        hasClass: function hasClass(className) {\n          var elem,\n              i = 0;\n          var classNamePrepared = _strSpace + className + _strSpace;\n          var classList;\n\n          while (elem = this[i++]) {\n            classList = elem.classList;\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n          }\n\n          return false;\n        },\n        addClass: function addClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.add(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        removeClass: function removeClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.remove(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                    }\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        hide: function hide() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'none';\n          });\n        },\n        show: function show() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'block';\n          });\n        },\n        attr: function attr(attrName, value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el.getAttribute(attrName);\n            el.setAttribute(attrName, value);\n          }\n\n          return this;\n        },\n        removeAttr: function removeAttr(attrName) {\n          return this.each(function () {\n            this.removeAttribute(attrName);\n          });\n        },\n        offset: function offset() {\n          var el = this[0];\n          var rect = el[LEXICON.bCR]();\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        },\n        position: function position() {\n          var el = this[0];\n          return {\n            top: el.offsetTop,\n            left: el.offsetLeft\n          };\n        },\n        scrollLeft: function scrollLeft(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollLeft];\n            el[_strScrollLeft] = value;\n          }\n\n          return this;\n        },\n        scrollTop: function scrollTop(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollTop];\n            el[_strScrollTop] = value;\n          }\n\n          return this;\n        },\n        val: function val(value) {\n          var el = this[0];\n          if (!value) return el.value;\n          el.value = value;\n          return this;\n        },\n        //DOM TRAVERSAL / FILTERING:\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(index) {\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n        },\n        find: function find(selector) {\n          var children = [];\n          var i;\n          this.each(function () {\n            var el = this;\n            var ch = el.querySelectorAll(selector);\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              children.push(ch[i]);\n            }\n          });\n          return FakejQuery(children);\n        },\n        children: function children(selector) {\n          var children = [];\n          var el;\n          var ch;\n          var i;\n          this.each(function () {\n            ch = this.children;\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              el = ch[i];\n\n              if (selector) {\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n              } else children.push(el);\n            }\n          });\n          return FakejQuery(children);\n        },\n        parent: function parent(selector) {\n          var parents = [];\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n          });\n          return FakejQuery(parents);\n        },\n        is: function is(selector) {\n          var el;\n          var i;\n\n          for (i = 0; i < this[LEXICON.l]; i++) {\n            el = this[i];\n            if (selector === ':visible') return elementIsVisible(el);\n            if (selector === ':hidden') return !elementIsVisible(el);\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n          }\n\n          return false;\n        },\n        contents: function contents() {\n          var contents = [];\n          var childs;\n          var i;\n          this.each(function () {\n            childs = this.childNodes;\n\n            for (i = 0; i < childs[LEXICON.l]; i++) {\n              contents.push(childs[i]);\n            }\n          });\n          return FakejQuery(contents);\n        },\n        each: function each(callback) {\n          return _each(this, callback);\n        },\n        //ANIMATION:\n        animate: function animate(props, duration, easing, complete) {\n          return this.each(function () {\n            _animate(this, props, duration, easing, complete);\n          });\n        },\n        stop: function stop(clearQ, jump) {\n          return this.each(function () {\n            _stop(this, clearQ, jump);\n          });\n        }\n      };\n      extend(FakejQuery, {\n        extend: extend,\n        inArray: inArray,\n        isEmptyObject: isEmptyObject,\n        isPlainObject: isPlainObject,\n        each: _each\n      });\n      return FakejQuery;\n    }();\n\n    var INSTANCES = function () {\n      var _targets = [];\n      var _instancePropertyString = '__overlayScrollbars__';\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\n\n      return function (target, instance) {\n        var argLen = arguments[LEXICON.l];\n\n        if (argLen < 1) {\n          //return all targets\n          return _targets;\n        } else {\n          if (instance) {\n            //register instance\n            target[_instancePropertyString] = instance;\n\n            _targets.push(target);\n          } else {\n            var index = COMPATIBILITY.inA(target, _targets);\n\n            if (index > -1) {\n              if (argLen > 1) {\n                //unregister instance\n                delete target[_instancePropertyString];\n\n                _targets.splice(index, 1);\n              } else {\n                //get instance from target\n                return _targets[index][_instancePropertyString];\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var PLUGIN = function () {\n      var _plugin;\n\n      var _pluginsGlobals;\n\n      var _pluginsAutoUpdateLoop;\n\n      var _pluginsExtensions = [];\n\n      var _pluginsOptions = function () {\n        var type = COMPATIBILITY.type;\n        var possibleTemplateTypes = [TYPES.b, //boolean\n        TYPES.n, //number\n        TYPES.s, //string\n        TYPES.a, //array\n        TYPES.o, //object\n        TYPES.f, //function\n        TYPES.z //null\n        ];\n        var restrictedStringsSplit = ' ';\n        var restrictedStringsPossibilitiesSplit = ':';\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\n        var numberAllowedValues = TYPES.n;\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n        var booleanTrueTemplate = [true, TYPES.b];\n        var booleanFalseTemplate = [false, TYPES.b];\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n        var optionsDefaultsAndTemplate = {\n          className: ['os-theme-dark', classNameAllowedValues],\n          //null || string\n          resize: ['none', resizeAllowedValues],\n          //none || both  || horizontal || vertical || n || b || h || v\n          sizeAutoCapable: booleanTrueTemplate,\n          //true || false\n          clipAlways: booleanTrueTemplate,\n          //true || false\n          normalizeRTL: booleanTrueTemplate,\n          //true || false\n          paddingAbsolute: booleanFalseTemplate,\n          //true || false\n          autoUpdate: [null, booleanNullAllowedValues],\n          //true || false || null\n          autoUpdateInterval: [33, numberAllowedValues],\n          //number\n          updateOnLoad: updateOnLoadTemplate,\n          //string || array || null\n          nativeScrollbarsOverlaid: {\n            showNativeScrollbars: booleanFalseTemplate,\n            //true || false\n            initialize: booleanTrueTemplate //true || false\n\n          },\n          overflowBehavior: {\n            x: ['scroll', overflowBehaviorAllowedValues],\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n          },\n          scrollbars: {\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\n            //visible || hidden || auto || v || h || a\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\n            //never || scroll || leave || move || n || s || l || m\n            autoHideDelay: [800, numberAllowedValues],\n            //number\n            dragScrolling: booleanTrueTemplate,\n            //true || false\n            clickScrolling: booleanFalseTemplate,\n            //true || false\n            touchSupport: booleanTrueTemplate,\n            //true || false\n            snapHandle: booleanFalseTemplate //true || false\n\n          },\n          textarea: {\n            dynWidth: booleanFalseTemplate,\n            //true || false\n            dynHeight: booleanFalseTemplate,\n            //true || false\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n          },\n          callbacks: {\n            onInitialized: callbackTemplate,\n            //null || function\n            onInitializationWithdrawn: callbackTemplate,\n            //null || function\n            onDestroyed: callbackTemplate,\n            //null || function\n            onScrollStart: callbackTemplate,\n            //null || function\n            onScroll: callbackTemplate,\n            //null || function\n            onScrollStop: callbackTemplate,\n            //null || function\n            onOverflowChanged: callbackTemplate,\n            //null || function\n            onOverflowAmountChanged: callbackTemplate,\n            //null || function\n            onDirectionChanged: callbackTemplate,\n            //null || function\n            onContentSizeChanged: callbackTemplate,\n            //null || function\n            onHostSizeChanged: callbackTemplate,\n            //null || function\n            onUpdated: callbackTemplate //null || function\n\n          }\n        };\n\n        var convert = function convert(template) {\n          var recursive = function recursive(obj) {\n            var key;\n            var val;\n            var valType;\n\n            for (key in obj) {\n              if (!obj[LEXICON.hOP](key)) continue;\n              val = obj[key];\n              valType = type(val);\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n            }\n\n            return obj;\n          };\n\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n        };\n\n        return {\n          _defaults: convert(),\n          _template: convert(true),\n\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\n            var validatedOptions = {};\n            var validatedOptionsPrepared = {};\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\n            var inArray = FRAMEWORK.inArray;\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n              for (var prop in template) {\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                  var isValid = false;\n                  var isDiff = false;\n                  var templateValue = template[prop];\n                  var templateValueType = type(templateValue);\n                  var templateIsComplex = templateValueType == TYPES.o;\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                  var dataDiffValue = diffData[prop];\n                  var dataValue = data[prop];\n                  var dataValueType = type(dataValue);\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                  var errorPossibleTypes = [];\n                  var errorRestrictedStrings = [];\n                  var restrictedStringValuesSplit;\n                  var restrictedStringValuesPossibilitiesSplit;\n                  var isRestrictedValue;\n                  var mainPossibility;\n                  var currType;\n                  var i;\n                  var v;\n                  var j;\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                  if (templateIsComplex && dataValueType == TYPES.o) {\n                    validatedOptions[prop] = {};\n                    validatedOptionsPrepared[prop] = {};\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                      if (isEmptyObj(value[prop])) {\n                        delete value[prop];\n                      }\n                    });\n                  } else if (!templateIsComplex) {\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                      currType = templateTypes[i];\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                      if (isRestrictedValue) {\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                            //if any possibility matches with the dataValue, its valid\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                              isValid = true;\n                              break;\n                            }\n                          }\n\n                          if (isValid) break;\n                        }\n                      } else {\n                        errorPossibleTypes.push(currType);\n\n                        if (dataValueType === currType) {\n                          isValid = true;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (isValid) {\n                      isDiff = dataValue !== dataDiffValue;\n                      if (isDiff) validatedOptions[prop] = dataValue;\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                    } else if (writeErrors) {\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                    }\n\n                    delete data[prop];\n                  }\n                }\n              }\n            };\n\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\n\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n            return {\n              _default: validatedOptions,\n              _prepared: validatedOptionsPrepared\n            };\n          }\n        };\n      }();\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\n\n\n      function initOverlayScrollbarsStatics() {\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n      }\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsGlobals(defaultOptions) {\n        var _base = this;\n\n        var strOverflow = 'overflow';\n        var strHidden = 'hidden';\n        var strScroll = 'scroll';\n        var bodyElement = FRAMEWORK('body');\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n        bodyElement.append(scrollbarDummyElement);\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n        var nativeScrollbarIsOverlaid = {\n          x: nativeScrollbarSize.x === 0,\n          y: nativeScrollbarSize.y === 0\n        };\n\n        var msie = function () {\n          var ua = window.navigator.userAgent;\n          var strIndexOf = 'indexOf';\n          var strSubString = 'substring';\n          var msie = ua[strIndexOf]('MSIE ');\n          var trident = ua[strIndexOf]('Trident/');\n          var edge = ua[strIndexOf]('Edge/');\n          var rv = ua[strIndexOf]('rv:');\n          var result;\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n          return result;\n        }();\n\n        FRAMEWORK.extend(_base, {\n          defaultOptions: defaultOptions,\n          msie: msie,\n          autoUpdateLoop: false,\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\n          nativeScrollbarSize: nativeScrollbarSize,\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n          nativeScrollbarStyling: function () {\n            var result = false;\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n            try {\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n            //and set overflow to scroll\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n            return result;\n          }(),\n          overlayScrollbarDummySize: {\n            x: 30,\n            y: 30\n          },\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n          restrictedMeasuring: function () {\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\n            scrollbarDummyElement.css(strOverflow, strHidden);\n            var scrollSize = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            scrollbarDummyElement.css(strOverflow, 'visible');\n            var scrollSize2 = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n          }(),\n          rtlScrollBehavior: function () {\n            scrollbarDummyElement.css({\n              'overflow-y': strHidden,\n              'overflow-x': strScroll,\n              'direction': 'rtl'\n            }).scrollLeft(0);\n            var dummyContainerOffset = scrollbarDummyElement.offset();\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n            scrollbarDummyElement.scrollLeft(-999);\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n            return {\n              //origin direction = determines if the zero scroll position is on the left or right side\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n              //true = on the left side\n              //false = on the right side\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n              //negative = determines if the maximum scroll is positive or negative\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n              //true = negative\n              //false = positive\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n            };\n          }(),\n          supportTransform: !!VENDORS._cssProperty('transform'),\n          supportTransition: !!VENDORS._cssProperty('transition'),\n          supportPassiveEvents: function () {\n            var supportsPassive = false;\n\n            try {\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: function get() {\n                  supportsPassive = true;\n                }\n              }));\n            } catch (e) {}\n\n            return supportsPassive;\n          }(),\n          supportResizeObserver: !!COMPATIBILITY.rO(),\n          supportMutationObserver: !!COMPATIBILITY.mO()\n        });\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n        (function () {\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n          var abs = MATH.abs;\n          var windowWidth = COMPATIBILITY.wW();\n          var windowHeight = COMPATIBILITY.wH();\n          var windowDpr = getWindowDPR();\n\n          var onResize = function onResize() {\n            if (INSTANCES().length > 0) {\n              var newW = COMPATIBILITY.wW();\n              var newH = COMPATIBILITY.wH();\n              var deltaW = newW - windowWidth;\n              var deltaH = newH - windowHeight;\n              if (deltaW === 0 && deltaH === 0) return;\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n              var absDeltaW = abs(deltaW);\n              var absDeltaH = abs(deltaH);\n              var absDeltaWRatio = abs(deltaWRatio);\n              var absDeltaHRatio = abs(deltaHRatio);\n              var newDPR = getWindowDPR();\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n              var isZoom = deltaIsBigger && difference && dprChanged;\n              var oldScrollbarSize = _base.nativeScrollbarSize;\n              var newScrollbarSize;\n\n              if (isZoom) {\n                bodyElement.append(scrollbarDummyElement);\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                scrollbarDummyElement.remove();\n\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                  FRAMEWORK.each(INSTANCES(), function () {\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                  });\n                }\n              }\n\n              windowWidth = newW;\n              windowHeight = newH;\n              windowDpr = newDPR;\n            }\n          };\n\n          function differenceIsBiggerThanOne(valOne, valTwo) {\n            var absValOne = abs(valOne);\n            var absValTwo = abs(valTwo);\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n          }\n\n          function getWindowDPR() {\n            var dDPI = window.screen.deviceXDPI || 0;\n            var sDPI = window.screen.logicalXDPI || 1;\n            return window.devicePixelRatio || dDPI / sDPI;\n          }\n\n          FRAMEWORK(window).on('resize', onResize);\n        })();\n\n        function calcNativeScrollbarSize(measureElement) {\n          return {\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n          };\n        }\n      }\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\n        var _base = this;\n\n        var _inArray = FRAMEWORK.inArray;\n        var _getNow = COMPATIBILITY.now;\n        var _strAutoUpdate = 'autoUpdate';\n\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n        var _strLength = LEXICON.l;\n        var _loopingInstances = [];\n        var _loopingInstancesIntervalCache = [];\n        var _loopIsActive = false;\n        var _loopIntervalDefault = 33;\n        var _loopInterval = _loopIntervalDefault;\n\n        var _loopTimeOld = _getNow();\n\n        var _loopID;\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\n\n\n        var loop = function loop() {\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n            _loopID = COMPATIBILITY.rAF()(function () {\n              loop();\n            });\n\n            var timeNew = _getNow();\n\n            var timeDelta = timeNew - _loopTimeOld;\n            var lowestInterval;\n            var instance;\n            var instanceOptions;\n            var instanceAutoUpdateAllowed;\n            var instanceAutoUpdateInterval;\n            var now;\n\n            if (timeDelta > _loopInterval) {\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\n              lowestInterval = _loopIntervalDefault;\n\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n                instance = _loopingInstances[i];\n\n                if (instance !== undefined$1) {\n                  instanceOptions = instance.options();\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                  now = _getNow();\n\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                    instance.update('auto');\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                  }\n\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                }\n              }\n\n              _loopInterval = lowestInterval;\n            }\n          } else {\n            _loopInterval = _loopIntervalDefault;\n          }\n        };\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.add = function (instance) {\n          if (_inArray(instance, _loopingInstances) === -1) {\n            _loopingInstances.push(instance);\n\n            _loopingInstancesIntervalCache.push(_getNow());\n\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n              _loopIsActive = true;\n              globals.autoUpdateLoop = _loopIsActive;\n              loop();\n            }\n          }\n        };\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.remove = function (instance) {\n          var index = _inArray(instance, _loopingInstances);\n\n          if (index > -1) {\n            //remove from loopingInstances list\n            _loopingInstancesIntervalCache.splice(index, 1);\n\n            _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n              _loopIsActive = false;\n              globals.autoUpdateLoop = _loopIsActive;\n\n              if (_loopID !== undefined$1) {\n                COMPATIBILITY.cAF()(_loopID);\n                _loopID = -1;\n              }\n            }\n          }\n        };\n      }\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n        //shortcuts\n        var type = COMPATIBILITY.type;\n        var inArray = FRAMEWORK.inArray;\n        var each = FRAMEWORK.each; //make correct instanceof\n\n        var _base = new _plugin();\n\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n        if (INSTANCES(pluginTargetElement)) {\n          var inst = INSTANCES(pluginTargetElement);\n          inst.options(options);\n          return inst;\n        } //globals:\n\n\n        var _nativeScrollbarIsOverlaid;\n\n        var _overlayScrollbarDummySize;\n\n        var _rtlScrollBehavior;\n\n        var _autoUpdateRecommended;\n\n        var _msieVersion;\n\n        var _nativeScrollbarStyling;\n\n        var _cssCalc;\n\n        var _nativeScrollbarSize;\n\n        var _supportTransition;\n\n        var _supportTransform;\n\n        var _supportPassiveEvents;\n\n        var _supportResizeObserver;\n\n        var _supportMutationObserver;\n\n        var _initialized;\n\n        var _destroyed;\n\n        var _isTextarea;\n\n        var _isBody;\n\n        var _documentMixed;\n\n        var _domExists; //general:\n\n\n        var _isBorderBox;\n\n        var _sizeAutoObserverAdded;\n\n        var _paddingX;\n\n        var _paddingY;\n\n        var _borderX;\n\n        var _borderY;\n\n        var _marginX;\n\n        var _marginY;\n\n        var _isRTL;\n\n        var _sleeping;\n\n        var _contentBorderSize = {};\n        var _scrollHorizontalInfo = {};\n        var _scrollVerticalInfo = {};\n        var _viewportSize = {};\n        var _nativeScrollbarMinSize = {}; //naming:\t\n\n        var _strMinusHidden = '-hidden';\n        var _strMarginMinus = 'margin-';\n        var _strPaddingMinus = 'padding-';\n        var _strBorderMinus = 'border-';\n        var _strTop = 'top';\n        var _strRight = 'right';\n        var _strBottom = 'bottom';\n        var _strLeft = 'left';\n        var _strMinMinus = 'min-';\n        var _strMaxMinus = 'max-';\n        var _strWidth = 'width';\n        var _strHeight = 'height';\n        var _strFloat = 'float';\n        var _strEmpty = '';\n        var _strAuto = 'auto';\n        var _strSync = 'sync';\n        var _strScroll = 'scroll';\n        var _strHundredPercent = '100%';\n        var _strX = 'x';\n        var _strY = 'y';\n        var _strDot = '.';\n        var _strSpace = ' ';\n        var _strScrollbar = 'scrollbar';\n        var _strMinusHorizontal = '-horizontal';\n        var _strMinusVertical = '-vertical';\n\n        var _strScrollLeft = _strScroll + 'Left';\n\n        var _strScrollTop = _strScroll + 'Top';\n\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\n        var _strMouseEnter = 'mouseenter';\n        var _strMouseLeave = 'mouseleave';\n        var _strKeyDownEvent = 'keydown';\n        var _strKeyUpEvent = 'keyup';\n        var _strSelectStartEvent = 'selectstart';\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n        var _cassNamesPrefix = 'os-';\n\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n        var _classNameHostElement = _cassNamesPrefix + 'host';\n\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n        var _classNameHostTransition = _classNameHostElement + '-transition';\n\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n        var _classNameContentElement = _cassNamesPrefix + 'content';\n\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n        var _defaultOptions;\n\n        var _currentOptions;\n\n        var _currentPreparedOptions; //extensions:\t\n\n\n        var _extensions = {};\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n        var _lastUpdateTime;\n\n        var _swallowedUpdateHints = {};\n\n        var _swallowedUpdateTimeout;\n\n        var _swallowUpdateLag = 42;\n        var _updateOnLoadEventName = 'load';\n        var _updateOnLoadElms = []; //DOM elements:\t\n\n        var _windowElement;\n\n        var _documentElement;\n\n        var _htmlElement;\n\n        var _bodyElement;\n\n        var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n        var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n        var _sizeObserverElement; //observes size and padding changes\t\n\n\n        var _paddingElement; //manages the padding\t\n\n\n        var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n        var _contentElement; //the element which holds the content\t\n\n\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n        var _contentGlueElement; //has always the size of the content element\t\n\n\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n        var _scrollbarCornerElement;\n\n        var _scrollbarHorizontalElement;\n\n        var _scrollbarHorizontalTrackElement;\n\n        var _scrollbarHorizontalHandleElement;\n\n        var _scrollbarVerticalElement;\n\n        var _scrollbarVerticalTrackElement;\n\n        var _scrollbarVerticalHandleElement;\n\n        var _windowElementNative;\n\n        var _documentElementNative;\n\n        var _targetElementNative;\n\n        var _hostElementNative;\n\n        var _sizeAutoObserverElementNative;\n\n        var _sizeObserverElementNative;\n\n        var _paddingElementNative;\n\n        var _viewportElementNative;\n\n        var _contentElementNative; //Cache:\t\n\n\n        var _hostSizeCache;\n\n        var _contentScrollSizeCache;\n\n        var _arrangeContentSizeCache;\n\n        var _hasOverflowCache;\n\n        var _hideOverflowCache;\n\n        var _widthAutoCache;\n\n        var _heightAutoCache;\n\n        var _cssBoxSizingCache;\n\n        var _cssPaddingCache;\n\n        var _cssBorderCache;\n\n        var _cssMarginCache;\n\n        var _cssDirectionCache;\n\n        var _cssDirectionDetectedCache;\n\n        var _paddingAbsoluteCache;\n\n        var _clipAlwaysCache;\n\n        var _contentGlueSizeCache;\n\n        var _overflowBehaviorCache;\n\n        var _overflowAmountCache;\n\n        var _ignoreOverlayScrollbarHidingCache;\n\n        var _autoUpdateCache;\n\n        var _sizeAutoCapableCache;\n\n        var _contentElementScrollSizeChangeDetectedCache;\n\n        var _hostElementSizeChangeDetectedCache;\n\n        var _scrollbarsVisibilityCache;\n\n        var _scrollbarsAutoHideCache;\n\n        var _scrollbarsClickScrollingCache;\n\n        var _scrollbarsDragScrollingCache;\n\n        var _resizeCache;\n\n        var _normalizeRTLCache;\n\n        var _classNameCache;\n\n        var _oldClassName;\n\n        var _textareaAutoWrappingCache;\n\n        var _textareaInfoCache;\n\n        var _textareaSizeCache;\n\n        var _textareaDynHeightCache;\n\n        var _textareaDynWidthCache;\n\n        var _bodyMinSizeCache;\n\n        var _updateAutoCache = {}; //MutationObserver:\t\n\n        var _mutationObserverHost;\n\n        var _mutationObserverContent;\n\n        var _mutationObserverHostCallback;\n\n        var _mutationObserverContentCallback;\n\n        var _mutationObserversConnected;\n\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n        var _destroyEvents = []; //textarea:\t\n\n        var _textareaHasFocus; //scrollbars:\t\n\n\n        var _scrollbarsAutoHideTimeoutId;\n\n        var _scrollbarsAutoHideMoveTimeoutId;\n\n        var _scrollbarsAutoHideDelay;\n\n        var _scrollbarsAutoHideNever;\n\n        var _scrollbarsAutoHideScroll;\n\n        var _scrollbarsAutoHideMove;\n\n        var _scrollbarsAutoHideLeave;\n\n        var _scrollbarsHandleHovered;\n\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n        var _resizeNone;\n\n        var _resizeBoth;\n\n        var _resizeHorizontal;\n\n        var _resizeVertical; //==== Event Listener ====//\t\n\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\n\n\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n          var method = remove ? 'removeEventListener' : 'addEventListener';\n          var onOff = remove ? 'off' : 'on';\n          var events = collected ? false : eventNames.split(_strSpace);\n          var i = 0;\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n          var nativeParam = _supportPassiveEvents ? {\n            passive: passive,\n            capture: capture\n          } : capture;\n\n          if (collected) {\n            for (; i < eventNames[LEXICON.l]; i++) {\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n            }\n          } else {\n            for (; i < events[LEXICON.l]; i++) {\n              if (_supportPassiveEvents) {\n                element[0][method](events[i], listener, nativeParam);\n              } else {\n                element[onOff](events[i], listener);\n              }\n            }\n          }\n        }\n\n        function addDestroyEventListener(element, eventNames, listener, passive) {\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n        } //==== Resize Observer ====//\n\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\n\n\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\n          if (targetElement) {\n            var resizeObserver = COMPATIBILITY.rO();\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n            var strChildNodes = 'childNodes';\n            var constScroll = 3333333;\n\n            var callback = function callback() {\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n              onElementResizedCallback();\n            }; //add resize observer:\n\n\n            if (onElementResizedCallback) {\n              if (_supportResizeObserver) {\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                observer.observe(element);\n              } else {\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                    c: _classNameResizeObserverItemElement,\n                    dir: 'ltr'\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                    c: _classNameResizeObserverItemFinalElement,\n                    style: 'width: 200%; height: 200%'\n                  })))));\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                  var widthCache = observerElement[LEXICON.oW];\n                  var heightCache = observerElement[LEXICON.oH];\n                  var isDirty;\n                  var rAFId;\n                  var currWidth;\n                  var currHeight;\n                  var factor = 2;\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                  var reset = function reset() {\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  };\n\n                  var onResized = function onResized() {\n                    rAFId = 0;\n                    if (!isDirty) return;\n                    widthCache = currWidth;\n                    heightCache = currHeight;\n                    callback();\n                  };\n\n                  var onScroll = function onScroll(event) {\n                    currWidth = observerElement[LEXICON.oW];\n                    currHeight = observerElement[LEXICON.oH];\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                    if (event && isDirty && !rAFId) {\n                      COMPATIBILITY.cAF()(rAFId);\n                      rAFId = COMPATIBILITY.rAF()(onResized);\n                    } else if (!event) onResized();\n\n                    reset();\n\n                    if (event) {\n                      COMPATIBILITY.prvD(event);\n                      COMPATIBILITY.stpP(event);\n                    }\n\n                    return false;\n                  };\n\n                  var expandChildCSS = {};\n                  var observerElementCSS = {};\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                  FRAMEWORK(observerElement).css(observerElementCSS);\n                  expandElement.on(_strScroll, onScroll);\n                  shrinkElement.on(_strScroll, onScroll);\n                  targetElement.on(strAnimationStartEvent, function () {\n                    onScroll(false);\n                  }); //lets assume that the divs will never be that large and a constant value is enough\n\n                  expandChildCSS[_strWidth] = constScroll;\n                  expandChildCSS[_strHeight] = constScroll;\n                  expandElementChild.css(expandChildCSS);\n                  reset();\n                } else {\n                  var attachEvent = _documentElementNative.attachEvent;\n                  var isIE = _msieVersion !== undefined$1;\n\n                  if (attachEvent) {\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                  } else {\n                    var obj = _documentElementNative.createElement(TYPES.o);\n\n                    obj.setAttribute(LEXICON.ti, '-1');\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                    obj.onload = function () {\n                      var wnd = this.contentDocument.defaultView;\n                      wnd.addEventListener('resize', callback);\n                      wnd.document.documentElement.style.display = 'none';\n                    };\n\n                    obj.type = 'text/html';\n                    if (isIE) targetElement.prepend(obj);\n                    obj.data = 'about:blank';\n                    if (!isIE) targetElement.prepend(obj);\n                    targetElement.on(strAnimationStartEvent, callback);\n                  }\n                }\n              }\n\n              if (targetElement[0] === _sizeObserverElementNative) {\n                var directionChanged = function directionChanged() {\n                  var dir = _hostElement.css('direction');\n\n                  var css = {};\n                  var scrollLeftValue = 0;\n                  var result = false;\n\n                  if (dir !== _cssDirectionDetectedCache) {\n                    if (dir === 'ltr') {\n                      css[_strLeft] = 0;\n                      css[_strRight] = _strAuto;\n                      scrollLeftValue = constScroll;\n                    } else {\n                      css[_strLeft] = _strAuto;\n                      css[_strRight] = 0;\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                    } //execution order is important for IE!!!\n\n\n                    _sizeObserverElement.children().eq(0).css(css);\n\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                    _cssDirectionDetectedCache = dir;\n                    result = true;\n                  }\n\n                  return result;\n                };\n\n                directionChanged();\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\n                  if (directionChanged()) update();\n                  COMPATIBILITY.prvD(event);\n                  COMPATIBILITY.stpP(event);\n                  return false;\n                });\n              }\n            } //remove resize observer:\n            else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n          }\n        }\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\n        //==== Mutation Observers ====//\n\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\n\n\n        function createMutationObservers() {\n          if (_supportMutationObserver) {\n            var mutationObserverContentLag = 11;\n            var mutationObserver = COMPATIBILITY.mO();\n            var contentLastUpdate = COMPATIBILITY.now();\n            var mutationTarget;\n            var mutationAttrName;\n            var mutationIsClass;\n            var oldMutationVal;\n            var newClassVal;\n            var hostClassNameRegex;\n            var contentTimeout;\n            var now;\n            var sizeAuto;\n            var action;\n\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n              var doUpdate = false;\n              var doUpdateForce = false;\n              var mutation;\n              var mutatedAttrs = [];\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  mutationTarget = mutation.target;\n                  mutationAttrName = mutation.attributeName;\n                  mutationIsClass = mutationAttrName === LEXICON.c;\n                  oldMutationVal = mutation.oldValue;\n                  newClassVal = mutationTarget.className;\n\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                      hostClassNameRegex = createHostClassNameRegExp(true);\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                        return name.match(hostClassNameRegex);\n                      })).join(_strSpace);\n                      doUpdate = doUpdateForce = true;\n                    }\n                  }\n\n                  if (!doUpdate) {\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                  }\n\n                  mutatedAttrs.push(mutationAttrName);\n                });\n                updateViewportAttrsFromTarget(mutatedAttrs);\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n              var doUpdate = false;\n              var mutation;\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  doUpdate = isUnknownMutation(mutation);\n                  return !doUpdate;\n                });\n\n                if (doUpdate) {\n                  now = COMPATIBILITY.now();\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                  action = function action() {\n                    if (!_destroyed) {\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                      if (_isTextarea) textareaUpdate();\n                      if (sizeAuto) update();else _base.update(_strAuto);\n                    }\n                  };\n\n                  clearTimeout(contentTimeout);\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n                }\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n          }\n        }\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\n\n\n        function connectMutationObservers() {\n          if (_supportMutationObserver && !_mutationObserversConnected) {\n            _mutationObserverHost.observe(_hostElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              attributeFilter: _mutationObserverAttrsHost\n            });\n\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              subtree: !_isTextarea,\n              childList: !_isTextarea,\n              characterData: !_isTextarea,\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n            });\n\n            _mutationObserversConnected = true;\n          }\n        }\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\n\n\n        function disconnectMutationObservers() {\n          if (_supportMutationObserver && _mutationObserversConnected) {\n            _mutationObserverHost.disconnect();\n\n            _mutationObserverContent.disconnect();\n\n            _mutationObserversConnected = false;\n          }\n        } //==== Events of elements ====//\n\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\n\n\n        function hostOnResized() {\n          if (!_sleeping) {\n            var changed;\n            var hostSize = {\n              w: _sizeObserverElementNative[LEXICON.sW],\n              h: _sizeObserverElementNative[LEXICON.sH]\n            };\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n            _hostElementSizeChangeDetectedCache = hostSize;\n            if (changed) update({\n              _hostSizeChanged: true\n            });\n          }\n        }\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseEnter() {\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n        }\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseLeave() {\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n        }\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\n\n\n        function hostOnMouseMove() {\n          if (_scrollbarsAutoHideMove) {\n            refreshScrollbarsAutoHide(true);\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n            }, 100);\n          }\n        }\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\n\n\n        function documentOnSelectStart(event) {\n          COMPATIBILITY.prvD(event);\n          return false;\n        }\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\n\n\n        function updateOnLoadCallback(event) {\n          var elm = FRAMEWORK(event.target);\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\n\n\n        function setupHostMouseTouchEvents(destroy) {\n          if (!destroy) setupHostMouseTouchEvents(true);\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n        } //==== Update Detection ====//\n\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\n\n\n        function bodyMinSizeChanged() {\n          var bodyMinSize = {};\n\n          if (_isBody && _contentArrangeElement) {\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n            bodyMinSize.f = true; //flag for \"measured at least once\"\n          }\n\n          _bodyMinSizeCache = bodyMinSize;\n          return !!bodyMinSize.c;\n        }\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\n\n\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n          var idx = inArray(_classNameThemeNone, diff);\n          var i;\n          var regex;\n          if (idx > -1) diff.splice(idx, 1);\n\n          if (diff[LEXICON.l] > 0) {\n            regex = createHostClassNameRegExp(true, true);\n\n            for (i = 0; i < diff.length; i++) {\n              if (!diff[i].match(regex)) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        }\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\n\n\n        function isUnknownMutation(mutation) {\n          var attributeName = mutation.attributeName;\n          var mutationTarget = mutation.target;\n          var mutationType = mutation.type;\n          var strClosest = 'closest';\n          if (mutationTarget === _contentElementNative) return attributeName === null;\n\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n            //ignore className changes by the plugin\t\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n          }\n\n          return true;\n        }\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\n\n\n        function updateAutoContentSizeChanged() {\n          if (_sleeping) return false;\n          var contentMeasureElement = getContentMeasureElement();\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n          var css = {};\n          var float;\n          var bodyMinSizeC;\n          var changed;\n          var contentElementScrollSize;\n\n          if (setCSS) {\n            float = _contentElement.css(_strFloat);\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\n            css[_strWidth] = _strAuto;\n\n            _contentElement.css(css);\n          }\n\n          contentElementScrollSize = {\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n          };\n\n          if (setCSS) {\n            css[_strFloat] = float;\n            css[_strWidth] = _strHundredPercent;\n\n            _contentElement.css(css);\n          }\n\n          bodyMinSizeC = bodyMinSizeChanged();\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n          return changed || bodyMinSizeC;\n        }\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\n\n\n        function meaningfulAttrsChanged() {\n          if (_sleeping || _mutationObserversConnected) return;\n          var elem;\n          var curr;\n          var cache;\n          var changedAttrs = [];\n          var checks = [{\n            _elem: _hostElement,\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\n          }, {\n            _elem: _isTextarea ? _targetElement : undefined$1,\n            _attrs: _mutationObserverAttrsTextarea\n          }];\n          each(checks, function (index, check) {\n            elem = check._elem;\n\n            if (elem) {\n              each(check._attrs, function (index, attr) {\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n                cache = _updateAutoCache[attr];\n\n                if (checkCache(curr, cache)) {\n                  changedAttrs.push(attr);\n                }\n\n                _updateAutoCache[attr] = curr;\n              });\n            }\n          });\n          updateViewportAttrsFromTarget(changedAttrs);\n          return changedAttrs[LEXICON.l] > 0;\n        }\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\n\n\n        function isSizeAffectingCSSProperty(propertyName) {\n          if (!_initialized) return true;\n          var flexGrow = 'flex-grow';\n          var flexShrink = 'flex-shrink';\n          var flexBasis = 'flex-basis';\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n          var _strS = 's';\n          var _strVS = 'v-s';\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n          var sizeIsAffected = false;\n\n          var checkPropertyName = function checkPropertyName(arr, name) {\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\n              if (arr[i] === name) return true;\n            }\n\n            return false;\n          };\n\n          if (checkY) {\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n          }\n\n          if (checkX && !sizeIsAffected) {\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n          }\n\n          return sizeIsAffected;\n        } //==== Update ====//\n\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\n\n\n        function updateViewportAttrsFromTarget(attrs) {\n          attrs = attrs || _viewportAttrsFromTarget;\n          each(attrs, function (index, attr) {\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n              var targetAttr = _targetElement.attr(attr);\n\n              if (type(targetAttr) == TYPES.s) {\n                _viewportElement.attr(attr, targetAttr);\n              } else {\n                _viewportElement.removeAttr(attr);\n              }\n            }\n          });\n        }\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\n\n\n        function textareaUpdate() {\n          if (!_sleeping) {\n            var wrapAttrOff = !_textareaAutoWrappingCache;\n            var minWidth = _viewportSize.w;\n            var minHeight = _viewportSize.h;\n            var css = {};\n            var doMeasure = _widthAutoCache || wrapAttrOff;\n            var origWidth;\n            var width;\n            var origHeight;\n            var height; //reset min size\n\n            css[_strMinMinus + _strWidth] = _strEmpty;\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n            css[_strWidth] = _strAuto;\n\n            _targetElement.css(css); //measure width\n\n\n            origWidth = _targetElementNative[LEXICON.oW];\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n            //set measured width\n\n            css[_strWidth] = _widthAutoCache ? _strAuto\n            /*width*/\n            : _strHundredPercent;\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n            css[_strHeight] = _strAuto;\n\n            _targetElement.css(css); //measure height\n\n\n            origHeight = _targetElementNative[LEXICON.oH];\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n            css[_strWidth] = width;\n            css[_strHeight] = height;\n\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n            css[_strMinMinus + _strWidth] = minWidth\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n            ;\n            css[_strMinMinus + _strHeight] = minHeight\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n            ;\n\n            _targetElement.css(css);\n\n            return {\n              _originalWidth: origWidth,\n              _originalHeight: origHeight,\n              _dynamicWidth: width,\n              _dynamicHeight: height\n            };\n          }\n        }\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\n\n\n        function update(updateHints) {\n          clearTimeout(_swallowedUpdateTimeout);\n          updateHints = updateHints || {};\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n          _swallowedUpdateHints._force |= updateHints._force;\n          var now = COMPATIBILITY.now();\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n          var force = !!_swallowedUpdateHints._force;\n          var changedOptions = updateHints._changedOptions;\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n          var displayIsHidden;\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n          //destroyed\n          //swallowing\n          //sleeping\n          //host is hidden or has false display\n\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n          _lastUpdateTime = now;\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n            //native scrollbars are hidden, so change the values to zero\n            _nativeScrollbarSize.x = 0;\n            _nativeScrollbarSize.y = 0;\n          } else {\n            //refresh native scrollbar size (in case of zoom)\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n          // The calculation: [scrollbar size +3 *3]\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n          _nativeScrollbarMinSize = {\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n          };\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n          var checkCacheAutoForce = function checkCacheAutoForce() {\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n          }; //save current scroll offset\n\n\n          var currScroll = {\n            x: _viewportElement[_strScrollLeft](),\n            y: _viewportElement[_strScrollTop]()\n          };\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n          var className = _currentPreparedOptions.className;\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n          var resize = _currentPreparedOptions.resize;\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n          //paddingAbsolute\n\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n          var clipAlways = _currentPreparedOptions.clipAlways;\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n          _oldClassName = _classNameCache; //resize\n\n          _resizeNone = resize === 'n';\n          _resizeBoth = resize === 'b';\n          _resizeHorizontal = resize === 'h';\n          _resizeVertical = resize === 'v'; //normalizeRTL\n\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n          _classNameCache = className;\n          _resizeCache = resize;\n          _paddingAbsoluteCache = paddingAbsolute;\n          _clipAlwaysCache = clipAlways;\n          _sizeAutoCapableCache = sizeAutoCapable;\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n          _autoUpdateCache = autoUpdate;\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n          _textareaDynWidthCache = textareaDynWidth;\n          _textareaDynHeightCache = textareaDynHeight;\n          _hasOverflowCache = _hasOverflowCache || {\n            x: false,\n            y: false\n          }; //set correct class name to the host element\n\n          if (classNameChanged) {\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\n          } //set correct auto Update\n\n\n          if (autoUpdateChanged) {\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n              disconnectMutationObservers();\n              autoUpdateLoop.add(_base);\n            } else {\n              autoUpdateLoop.remove(_base);\n              connectMutationObservers();\n            }\n          } //activate or deactivate size auto capability\n\n\n          if (sizeAutoCapableChanged) {\n            if (sizeAutoCapable) {\n              if (_contentGlueElement) {\n                _contentGlueElement.show();\n              } else {\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n                _paddingElement.before(_contentGlueElement);\n              }\n\n              if (_sizeAutoObserverAdded) {\n                _sizeAutoObserverElement.show();\n              } else {\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n                _contentGlueElement.before(_sizeAutoObserverElement);\n\n                var oldSize = {\n                  w: -1,\n                  h: -1\n                };\n                setupResizeObserver(_sizeAutoObserverElement, function () {\n                  var newSize = {\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\n                  };\n\n                  if (checkCache(newSize, oldSize)) {\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                      update();\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                      update();\n                    }\n                  }\n\n                  oldSize = newSize;\n                });\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n              }\n            } else {\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n              if (_contentGlueElement) _contentGlueElement.hide();\n            }\n          } //if force, update all resizeObservers too\n\n\n          if (force) {\n            _sizeObserverElement.find('*').trigger(_strScroll);\n\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n          } //display hidden:\n\n\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n          var cssDirection = _hostElement.css('direction');\n\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n          var boxSizing = _hostElement.css('box-sizing');\n\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n          try {\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n          } catch (ex) {\n            return;\n          }\n\n          _isRTL = cssDirection === 'rtl';\n          _isBorderBox = boxSizing === 'border-box';\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n          var widthAutoResizeDetection = false;\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n          /*|| _isTextarea */\n          ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n            _contentGlueElement.css(_strWidth, _strAuto);\n\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n            if (!widthAutoResizeDetection) {\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            }\n          }\n\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n          : false;\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n          //we need the border only if border box and auto size\n\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n          var contentElementCSS = {};\n          var contentGlueElementCSS = {}; //funcs\n\n          var getHostSize = function getHostSize() {\n            //has to be clientSize because offsetSize respect borders\n            return {\n              w: _hostElementNative[LEXICON.cW],\n              h: _hostElementNative[LEXICON.cH]\n            };\n          };\n\n          var getViewportSize = function getViewportSize() {\n            //viewport size is padding container because it never has padding, margin and a border\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n            //if this happens add the difference to the viewportSize to compensate the rounding error\n            return {\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n            };\n          }; //set info for padding\n\n\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n          _borderX = border.l + border.r;\n          _borderY = border.t + border.b;\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n          _marginX = margin.l + margin.r;\n          _marginY = margin.t + margin.b;\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n          _textareaAutoWrappingCache = textareaAutoWrapping;\n          _cssDirectionCache = cssDirection;\n          _cssBoxSizingCache = boxSizing;\n          _widthAutoCache = widthAuto;\n          _heightAutoCache = heightAuto;\n          _cssPaddingCache = padding;\n          _cssBorderCache = border;\n          _cssMarginCache = margin; //IEFix direction changed\n\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n            var paddingElementCSS = {};\n            var textareaCSS = {};\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n            if (paddingAbsolute) {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n            } else {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _targetElement.css(textareaCSS);\n          } //viewport size is padding container because it never has padding, margin and a border.\n\n\n          _viewportSize = getViewportSize(); //update Textarea\n\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n          } : {};\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n            contentElementCSS[_strHeight] = _strAuto;\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strHeight] = _strHundredPercent;\n          }\n\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n            contentElementCSS[_strWidth] = _strAuto;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strWidth] = _strHundredPercent;\n            contentElementCSS[_strFloat] = _strEmpty;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n          }\n\n          if (widthAuto) {\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n            contentGlueElementCSS[_strWidth] = _strAuto;\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n            contentElementCSS[_strFloat] = isRTLRight;\n          } else {\n            contentGlueElementCSS[_strWidth] = _strEmpty;\n          }\n\n          if (heightAuto) {\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n          } else {\n            contentGlueElementCSS[_strHeight] = _strEmpty;\n          }\n\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n          contentElementCSS = {};\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n            var strOverflow = 'overflow';\n            var strOverflowX = strOverflow + '-x';\n            var strOverflowY = strOverflow + '-y';\n            var strHidden = 'hidden';\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n            if (!_nativeScrollbarStyling) {\n              var viewportElementResetCSS = {};\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n              _viewportElement.css(viewportElementResetCSS);\n            } //measure several sizes:\n\n\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n            var contentSize = {\n              //use clientSize because natively overlaidScrollbars add borders\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n            };\n            var scrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            }; //apply the correct viewport style and measure viewport size\n\n            if (!_nativeScrollbarStyling) {\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n              _viewportElement.css(viewportElementResetCSS);\n            }\n\n            _viewportSize = getViewportSize(); //measure and correct several sizes\n\n            var hostSize = getHostSize();\n            var hostAbsoluteRectSize = {\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n            };\n            var contentGlueSize = {\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n            };\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n            if (sizeAutoCapable) {\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n              if (contentGlueSize.c || heightAuto || widthAuto) {\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n                if (!_isTextarea) {\n                  contentSize = {\n                    //use clientSize because natively overlaidScrollbars add borders\n                    w: contentMeasureElement[LEXICON.cW],\n                    h: contentMeasureElement[LEXICON.cH]\n                  };\n                }\n              }\n\n              var textareaCoverCSS = {};\n\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var wh = scrollbarVars._w_h;\n                var strWH = scrollbarVars._width_height;\n                var autoSize = horizontal ? widthAuto : heightAuto;\n                var borderSize = horizontal ? _borderX : _borderY;\n                var paddingSize = horizontal ? _paddingX : _paddingY;\n                var marginSize = horizontal ? _marginX : _marginY;\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                  contentGlueElementCSS[strWH] -= 1;\n                } //make sure content glue size is at least 1\n\n\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n              };\n\n              setContentGlueElementCSSfunction(true);\n              setContentGlueElementCSSfunction(false);\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n              _contentGlueElement.css(contentGlueElementCSS);\n            }\n\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n            _contentElement.css(contentElementCSS);\n\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n            var contentScrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            };\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n            _viewportSize = getViewportSize();\n            hostSize = getHostSize();\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n            _hostSizeCache = hostSize;\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n            var previousOverflowAmount = _overflowAmountCache;\n            var overflowBehaviorIsVS = {};\n            var overflowBehaviorIsVH = {};\n            var overflowBehaviorIsS = {};\n            var overflowAmount = {};\n            var hasOverflow = {};\n            var hideOverflow = {};\n            var canScroll = {};\n\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xyI = scrollbarVarsInverted._x_y;\n              var xy = scrollbarVars._x_y;\n              var wh = scrollbarVars._w_h;\n              var widthHeight = scrollbarVars._width_height;\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n            };\n\n            setOverflowVariables(true);\n            setOverflowVariables(false);\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n            _overflowAmountCache = overflowAmount;\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n            _hasOverflowCache = hasOverflow;\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n              var borderDesign = 'px solid transparent';\n              var contentArrangeElementCSS = {};\n              var arrangeContent = {};\n              var arrangeChanged = force;\n              var setContentElementCSS;\n\n              if (hasOverflow.x || hasOverflow.y) {\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                _arrangeContentSizeCache = arrangeContent;\n              }\n\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n                setContentElementCSS = function setContentElementCSS(horizontal) {\n                  var scrollbarVars = getScrollbarVars(horizontal);\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                  var xy = scrollbarVars._x_y;\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                  } else {\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                    arrangeChanged = true;\n                  }\n                };\n\n                if (_nativeScrollbarStyling) {\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n                } else {\n                  setContentElementCSS(true);\n                  setContentElementCSS(false);\n                }\n              }\n\n              if (ignoreOverlayScrollbarHiding) {\n                arrangeContent.w = arrangeContent.h = _strEmpty;\n                arrangeChanged = true;\n              }\n\n              if (arrangeChanged && !_nativeScrollbarStyling) {\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n                if (!_contentArrangeElement) {\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                  _viewportElement.prepend(_contentArrangeElement);\n                }\n\n                _contentArrangeElement.css(contentArrangeElementCSS);\n              }\n\n              _contentElement.css(contentElementCSS);\n            }\n\n            var viewportElementCSS = {};\n            var paddingElementCSS = {};\n            var setViewportCSS;\n\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n              viewportElementCSS[isRTLRight] = _strEmpty;\n\n              setViewportCSS = function setViewportCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var XY = scrollbarVars._X_Y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n                var reset = function reset() {\n                  viewportElementCSS[strDirection] = _strEmpty;\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                };\n\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                    reset();\n                  } else {\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                  }\n                } else {\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\n                  reset();\n                }\n              };\n\n              setViewportCSS(true);\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n              // make viewport element greater in size (Firefox hide Scrollbars fix)\n              // because firefox starts hiding scrollbars on too small elements\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n              } else {\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n              }\n\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n                //only hide if is Textarea\n                if (_isTextarea && hideOverflowForceTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n                }\n              } else {\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                  //only un-hide if Textarea\n                  if (_isTextarea) {\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                  }\n\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n                }\n              }\n\n              _paddingElement.css(paddingElementCSS);\n\n              _viewportElement.css(viewportElementCSS);\n\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                var elementStyle = _contentElementNative[LEXICON.s];\n                elementStyle.webkitTransform = 'scale(1)';\n                elementStyle.display = 'run-in';\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n                elementStyle.webkitTransform = _strEmpty;\n              }\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\n\n            } //change to direction RTL and width auto Bugfix in Webkit\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n            contentElementCSS = {};\n\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n              if (_isRTL && widthAuto) {\n                var floatTmp = _contentElement.css(_strFloat);\n\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n                _contentElement.css(_strFloat, floatTmp);\n\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n              } else {\n                contentElementCSS[_strLeft] = _strEmpty;\n              }\n            }\n\n            _contentElement.css(contentElementCSS); //handle scroll position\n\n\n            if (_isTextarea && contentSizeChanged) {\n              var textareaInfo = getTextareaInfo();\n\n              if (textareaInfo) {\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                var cursorRow = textareaInfo._cursorRow;\n                var cursorCol = textareaInfo._cursorColumn;\n                var widestRow = textareaInfo._widestRow;\n                var lastRow = textareaInfo._rows;\n                var lastCol = textareaInfo._columns;\n                var cursorPos = textareaInfo._cursorPosition;\n                var cursorMax = textareaInfo._cursorMax;\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n                var textareaScrollAmount = {\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                };\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n              }\n\n              _textareaInfoCache = textareaInfo;\n            }\n\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n            if (widthAuto) _hostElement[_strScrollLeft](0);\n            if (heightAuto) _hostElement[_strScrollTop](0);\n\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n              showY = showY === undefined$1 ? showX : showY;\n              refreshScrollbarAppearance(true, showX, canScroll.x);\n              refreshScrollbarAppearance(false, showY, canScroll.y);\n            }; //manage class name which indicates scrollable overflow\n\n\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n            if (cssDirectionChanged && !_isBody) {\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n            if (resizeChanged) {\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n              if (ignoreOverlayScrollbarHiding) {\n                if (ignoreOverlayScrollbarHidingChanged) {\n                  removeClass(_hostElement, _classNameHostScrolling);\n\n                  if (ignoreOverlayScrollbarHiding) {\n                    refreshScrollbarsVisibility(false);\n                  }\n                }\n              } else if (scrollbarsVisibilityAuto) {\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n              } else if (scrollbarsVisibilityVisible) {\n                refreshScrollbarsVisibility(true);\n              } else if (scrollbarsVisibilityHidden) {\n                refreshScrollbarsVisibility(false);\n              }\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n            } //manage scrollbars handle length & offset - don't remove!\n\n\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n              refreshScrollbarHandleLength(true);\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleLength(false);\n              refreshScrollbarHandleOffset(false);\n            } //manage interactivity\n\n\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n            dispatchCallback('onDirectionChanged', {\n              isRTL: _isRTL,\n              dir: cssDirection\n            }, cssDirectionChanged);\n            dispatchCallback('onHostSizeChanged', {\n              width: _hostSizeCache.w,\n              height: _hostSizeCache.h\n            }, hostSizeChanged);\n            dispatchCallback('onContentSizeChanged', {\n              width: _contentScrollSizeCache.w,\n              height: _contentScrollSizeCache.h\n            }, contentSizeChanged);\n            dispatchCallback('onOverflowChanged', {\n              x: hasOverflow.x,\n              y: hasOverflow.y,\n              xScrollable: hideOverflow.xs,\n              yScrollable: hideOverflow.ys,\n              clipped: hideOverflow.x || hideOverflow.y\n            }, hasOverflow.c || hideOverflow.c);\n            dispatchCallback('onOverflowAmountChanged', {\n              x: overflowAmount.x,\n              y: overflowAmount.y\n            }, overflowAmount.c);\n          } //fix body min size\n\n\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n            _bodyMinSizeCache.c = false;\n          }\n\n          if (_initialized && changedOptions.updateOnLoad) {\n            updateElementsOnLoad();\n          } //freezeResizeObserver(_sizeObserverElement, false);\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n          dispatchCallback('onUpdated', {\n            forced: force\n          });\n        }\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\n\n\n        function updateElementsOnLoad() {\n          if (!_isTextarea) {\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n                // if element doesn't have a updateOnLoadCallback applied\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                  _updateOnLoadElms.push(el);\n\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n                }\n              });\n            });\n          }\n        } //==== Options ====//\n\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\n\n\n        function setOptions(newOptions) {\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n          return validatedOpts._prepared;\n        } //==== Structure ====//\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupStructureDOM(destroy) {\n          var strParent = 'parent';\n          var classNameResizeObserverHost = 'os-resize-observer-host';\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n          var adoptAttrsMap = {};\n\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n            each(adoptAttrsMap, function (key, value) {\n              if (type(value) == TYPES.s) {\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n              }\n            });\n          };\n\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n          //to prevent adopting generated class names\n\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n            each(adoptAttrs, function (i, v) {\n              if (type(v) == TYPES.s) {\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n              }\n            });\n          }\n\n          if (!destroy) {\n            if (_isTextarea) {\n              if (!_currentPreparedOptions.sizeAutoCapable) {\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n              }\n\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\n            }\n\n            if (!_domExists) {\n              //add the correct class to the target element\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n              if (_isTextarea) {\n                _contentElement.prepend(_textareaCoverElement);\n\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n            _sizeObserverElementNative = _sizeObserverElement[0];\n            _hostElementNative = _hostElement[0];\n            _paddingElementNative = _paddingElement[0];\n            _viewportElementNative = _viewportElement[0];\n            _contentElementNative = _contentElement[0];\n            updateViewportAttrsFromTarget();\n          } else {\n            if (_domExists && _initialized) {\n              //clear size observer\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n                if (elm) {\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n                }\n              }); //add classes to the host element which was removed previously to match the expected DOM\n\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n            } else {\n              //remove size observer\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n              _contentElement.contents().unwrap().unwrap().unwrap();\n\n              if (_isTextarea) {\n                _targetElement.unwrap();\n\n                remove(_hostElement);\n                remove(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n          }\n        }\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\n\n\n        function setupStructureEvents() {\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n          33, 34, //page up, page down\n          37, 38, 39, 40, //left, up, right, down arrows\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n          ];\n          var textareaKeyDownKeyCodesList = [];\n          var textareaUpdateIntervalID;\n          var scrollStopTimeoutId;\n          var scrollStopDelay = 175;\n          var strFocus = 'focus';\n\n          function updateTextarea(doClearInterval) {\n            textareaUpdate();\n\n            _base.update(_strAuto);\n\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n          }\n\n          function textareaOnScroll(event) {\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n            _targetElement[_strScrollTop](0);\n\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n            return false;\n          }\n\n          function textareaOnDrop(event) {\n            setTimeout(function () {\n              if (!_destroyed) updateTextarea();\n            }, 50);\n          }\n\n          function textareaOnFocus() {\n            _textareaHasFocus = true;\n            addClass(_hostElement, strFocus);\n          }\n\n          function textareaOnFocusout() {\n            _textareaHasFocus = false;\n            textareaKeyDownKeyCodesList = [];\n            removeClass(_hostElement, strFocus);\n            updateTextarea(true);\n          }\n\n          function textareaOnKeyDown(event) {\n            var keyCode = event.keyCode;\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n                updateTextarea();\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n              }\n\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n            }\n          }\n\n          function textareaOnKeyUp(event) {\n            var keyCode = event.keyCode;\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n            }\n          }\n\n          function contentOnTransitionEnd(event) {\n            if (_autoUpdateCache === true) return;\n            event = event.originalEvent || event;\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n          }\n\n          function viewportOnScroll(event) {\n            if (!_sleeping) {\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStart', event);\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n              if (!_scrollbarsHandlesDefineScrollPos) {\n                refreshScrollbarHandleOffset(true);\n                refreshScrollbarHandleOffset(false);\n              }\n\n              dispatchCallback('onScroll', event);\n              scrollStopTimeoutId = setTimeout(function () {\n                if (!_destroyed) {\n                  //OnScrollStop:\n                  clearTimeout(scrollStopTimeoutId);\n                  scrollStopTimeoutId = undefined$1;\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                  dispatchCallback('onScrollStop', event);\n                }\n              }, scrollStopDelay);\n            }\n          }\n\n          if (_isTextarea) {\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\n            } else {\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n            }\n\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n          } else {\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n          }\n\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n        } //==== Scrollbars ====//\n\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarsDOM(destroy) {\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n            if (!_domExists && !destroy) {\n              scrollbar.append(track);\n              track.append(handle);\n            }\n\n            return {\n              _scrollbar: scrollbar,\n              _track: track,\n              _handle: handle\n            };\n          };\n\n          function resetScrollbarDOM(isHorizontal) {\n            var scrollbarVars = getScrollbarVars(isHorizontal);\n            var scrollbar = scrollbarVars._scrollbar;\n            var track = scrollbarVars._track;\n            var handle = scrollbarVars._handle;\n\n            if (_domExists && _initialized) {\n              each([scrollbar, track, handle], function (i, elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              });\n            } else {\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n            }\n          }\n\n          var horizontalElements;\n          var verticalElements;\n\n          if (!destroy) {\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\n            verticalElements = selectOrGenerateScrollbarDOM();\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\n            _scrollbarVerticalElement = verticalElements._scrollbar;\n            _scrollbarVerticalTrackElement = verticalElements._track;\n            _scrollbarVerticalHandleElement = verticalElements._handle;\n\n            if (!_domExists) {\n              _paddingElement.after(_scrollbarVerticalElement);\n\n              _paddingElement.after(_scrollbarHorizontalElement);\n            }\n          } else {\n            resetScrollbarDOM(true);\n            resetScrollbarDOM();\n          }\n        }\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\n\n\n        function setupScrollbarEvents(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var xy = scrollbarVars._x_y;\n          var XY = scrollbarVars._X_Y;\n          var scroll = _strScroll + scrollbarVars._Left_Top;\n          var strActive = 'active';\n          var strSnapHandle = 'snapHandle';\n          var strClickEvent = 'click';\n          var scrollDurationFactor = 1;\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n          var trackTimeout;\n          var mouseDownScroll;\n          var mouseDownOffset;\n          var mouseDownInvertedScale;\n\n          function getPointerPosition(event) {\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n          }\n\n          function getPreparedScrollbarsOption(name) {\n            return _currentPreparedOptions.scrollbars[name];\n          }\n\n          function increaseTrackScrollAmount() {\n            scrollDurationFactor = 0.5;\n          }\n\n          function decreaseTrackScrollAmount() {\n            scrollDurationFactor = 1;\n          }\n\n          function stopClickEventPropagation(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          function documentKeyDown(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n          }\n\n          function documentKeyUp(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var trackLength = scrollbarVarsInfo._trackLength;\n              var handleLength = scrollbarVarsInfo._handleLength;\n              var scrollRange = scrollbarVarsInfo._maxScroll;\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n              var scrollDelta = scrollRange * scrollDeltaPercent;\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n            } else documentMouseTouchUp(event);\n          }\n\n          function documentMouseTouchUp(event) {\n            event = event || event.originalEvent;\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n                _capture: true\n              });\n            });\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n            _scrollbarsHandlesDefineScrollPos = false;\n            removeClass(_bodyElement, _classNameDragging);\n            removeClass(scrollbarVars._handle, strActive);\n            removeClass(scrollbarVars._track, strActive);\n            removeClass(scrollbarVars._scrollbar, strActive);\n            mouseDownScroll = undefined$1;\n            mouseDownOffset = undefined$1;\n            mouseDownInvertedScale = 1;\n            decreaseTrackScrollAmount();\n\n            if (trackTimeout !== undefined$1) {\n              _base.scrollStop();\n\n              clearTimeout(trackTimeout);\n              trackTimeout = undefined$1;\n            }\n\n            if (event) {\n              var rect = _hostElementNative[LEXICON.bCR]();\n\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n              if (!mouseInsideHost) hostOnMouseLeave();\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n            }\n          }\n\n          function onHandleMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n          }\n\n          function onHandleMouseTouchDownAction(event) {\n            mouseDownScroll = _viewportElement[scroll]();\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = getPointerPosition(event);\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._handle, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n                _capture: true\n              });\n            });\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n\n          function onTrackMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n              var scrollBaseDuration = 270 * handleToViewportRatio;\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n              var ctrlKey = event.ctrlKey;\n              var instantScroll = event.shiftKey;\n              var instantScrollTransition = instantScroll && ctrlKey;\n              var isFirstIteration = true;\n              var easing = 'linear';\n              var decreaseScroll;\n              var finishedCondition;\n\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n              };\n\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\n                scrollActionFinsished();\n                onHandleMouseTouchDownAction(event);\n              };\n\n              var scrollAction = function scrollAction() {\n                if (!_destroyed) {\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\n                  var trackLength = scrollbarVarsInfo._trackLength;\n                  var handleLength = scrollbarVarsInfo._handleLength;\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\n                  var currScroll = scrollbarVarsInfo._currentScroll;\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                  var scrollObj = {};\n                  var animationObj = {\n                    easing: easing,\n                    step: function step(now) {\n                      if (_scrollbarsHandlesDefineScrollPos) {\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                        refreshScrollbarHandleOffset(isHorizontal, now);\n                      }\n                    }\n                  };\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                  if (instantScroll) {\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                    if (instantScrollTransition) {\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                      //and the animation stops at the correct point\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                      _viewportElement[scroll](currScroll);\n\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                      scrollObj[xy] = instantScrollPosition;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: 130,\n                        complete: scrollActionInstantFinished\n                      }));\n                    } else scrollActionInstantFinished();\n                  } else {\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                    if (finishedCondition) {\n                      clearTimeout(trackTimeout);\n\n                      _base.scrollStop();\n\n                      trackTimeout = undefined$1;\n                      scrollActionFinsished(true);\n                    } else {\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: scrollDuration\n                      }));\n                    }\n\n                    isFirstIteration = false;\n                  }\n                }\n              };\n\n              if (ctrlKey) increaseTrackScrollAmount();\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n              addClass(_bodyElement, _classNameDragging);\n              addClass(scrollbarVars._track, strActive);\n              addClass(scrollbarVars._scrollbar, strActive);\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n              scrollAction();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          }\n\n          function onTrackMouseTouchEnter(event) {\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n            _scrollbarsHandleHovered = true;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n          }\n\n          function onTrackMouseTouchLeave(event) {\n            _scrollbarsHandleHovered = false;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n\n          function onScrollbarMouseTouchDown(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n          if (_supportTransition) {\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\n              refreshScrollbarHandleLength(isHorizontal);\n              refreshScrollbarHandleOffset(isHorizontal);\n            });\n          }\n        }\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\n\n\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n        }\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\n\n\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n          if (shallBeVisible) {\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n          } else {\n            var anyActive;\n            var strActive = 'active';\n\n            var hide = function hide() {\n              if (!_scrollbarsHandleHovered && !_destroyed) {\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n              }\n            };\n\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n          }\n        }\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\n\n\n        function refreshScrollbarHandleLength(isHorizontal) {\n          var handleCSS = {};\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var digit = 1000000; //get and apply intended handle length\n\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\n        }\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\n\n\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n          var transition = type(scrollOrTransition) == TYPES.b;\n          var transitionDuration = 250;\n          var isRTLisHorizontal = _isRTL && isHorizontal;\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var strTranslateBrace = 'translate(';\n\n          var strTransform = VENDORS._cssProperty('transform');\n\n          var strTransition = VENDORS._cssProperty('transition');\n\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n          var handleLength = scrollbarVarsInfo._handleLength;\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n          var handleTrackDiff = trackLength - handleLength;\n          var handleCSS = {};\n          var transformOffset;\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n          // because its a bit behind during the small delay when content size updates\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n          var getScrollRatio = function getScrollRatio(base) {\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n          };\n\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\n            var offset = handleTrackDiff * scrollRatio;\n            offset = isNaN(offset) ? 0 : offset;\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n            offset = MATH.max(0, offset);\n            return offset;\n          };\n\n          var scrollRatio = getScrollRatio(nativeScroll);\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\n          scrollbarVarsInfo._maxScroll = maxScroll;\n          scrollbarVarsInfo._currentScroll = nativeScroll;\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n          if (_supportTransform) {\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n          if (!nativeOverlayScrollbarsAreActive()) {\n            scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n            if (_supportTransform && _supportTransition && transition) {\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n              });\n            }\n          }\n\n          scrollbarVarsInfo._handleOffset = handleOffset;\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n          scrollbarVarsInfo._trackLength = trackLength;\n        }\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\n\n\n        function refreshScrollbarsInteractive(isTrack, value) {\n          var action = value ? 'removeClass' : 'addClass';\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n          element1[action](className);\n          element2[action](className);\n        }\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\n\n\n        function getScrollbarVars(isHorizontal) {\n          return {\n            _width_height: isHorizontal ? _strWidth : _strHeight,\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\n            _left_top: isHorizontal ? _strLeft : _strTop,\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\n            _x_y: isHorizontal ? _strX : _strY,\n            _X_Y: isHorizontal ? 'X' : 'Y',\n            _w_h: isHorizontal ? 'w' : 'h',\n            _l_t: isHorizontal ? 'l' : 't',\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n          };\n        } //==== Scrollbar Corner ====//\n\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarCornerDOM(destroy) {\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n          if (!destroy) {\n            if (!_domExists) {\n              _hostElement.append(_scrollbarCornerElement);\n            }\n          } else {\n            if (_domExists && _initialized) {\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            } else {\n              remove(_scrollbarCornerElement);\n            }\n          }\n        }\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\n\n\n        function setupScrollbarCornerEvents() {\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var mouseDownPosition = {};\n          var mouseDownSize = {};\n          var mouseDownInvertedScale = {};\n          var reconnectMutationObserver;\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var pageOffset = getCoordinates(event);\n              var hostElementCSS = {};\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n              _hostElement.css(hostElementCSS);\n\n              COMPATIBILITY.stpP(event);\n            } else {\n              documentMouseTouchUp(event);\n            }\n          }\n\n          function documentMouseTouchUp(event) {\n            var eventIsTrusted = event !== undefined$1;\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n            removeClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n            if (eventIsTrusted) {\n              if (reconnectMutationObserver) connectMutationObservers();\n\n              _base.update(_strAuto);\n            }\n\n            reconnectMutationObserver = false;\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function getCoordinates(event) {\n            return _msieVersion && insideIFrame ? {\n              x: event.screenX,\n              y: event.screenY\n            } : COMPATIBILITY.page(event);\n          }\n\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\n              if (_mutationObserversConnected) {\n                reconnectMutationObserver = true;\n                disconnectMutationObservers();\n              }\n\n              mouseDownPosition = getCoordinates(event);\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n              mouseDownInvertedScale = getHostElementInvertedScale();\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n              addClass(_bodyElement, _classNameDragging);\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          });\n        } //==== Utils ====//\n\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\n\n\n        function dispatchCallback(name, args, dependent) {\n          if (dependent === false) return;\n\n          if (_initialized) {\n            var callback = _currentPreparedOptions.callbacks[name];\n            var extensionOnName = name;\n            var ext;\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n            if (type(callback) == TYPES.f) callback.call(_base, args);\n            each(_extensions, function () {\n              ext = this;\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n            });\n          } else if (!_destroyed) _callbacksInitQeueue.push({\n            n: name,\n            a: args\n          });\n        }\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\n\n\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n          prefix = prefix || _strEmpty;\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n          targetCSSObject[prefix + _strTop] = values[0];\n          targetCSSObject[prefix + _strRight] = values[1];\n          targetCSSObject[prefix + _strBottom] = values[2];\n          targetCSSObject[prefix + _strLeft] = values[3];\n        }\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\n\n\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n          suffix = suffix || _strEmpty;\n          prefix = prefix || _strEmpty;\n          return {\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n          };\n        }\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\n\n\n        function getCSSTransitionString(element) {\n          var transitionStr = VENDORS._cssProperty('transition');\n\n          var assembledValue = element.css(transitionStr);\n          if (assembledValue) return assembledValue;\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n          var regExpMain = new RegExp(regExpString);\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n          var properties = 'property duration timing-function delay'.split(' ');\n          var result = [];\n          var strResult;\n          var valueArray;\n          var i = 0;\n          var j;\n\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\n            strResult = [];\n            if (!str.match(regExpValidate)) return str;\n\n            while (str.match(regExpMain)) {\n              strResult.push(RegExp.$1);\n              str = str.replace(regExpMain, _strEmpty);\n            }\n\n            return strResult;\n          };\n\n          for (; i < properties[LEXICON.l]; i++) {\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n            }\n          }\n\n          return result.join(', ');\n        }\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\n\n\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n          var i;\n          var split;\n          var appendix;\n\n          var appendClasses = function appendClasses(classes, condition) {\n            appendix = '';\n\n            if (condition && _typeof(classes) == TYPES.s) {\n              split = classes.split(_strSpace);\n\n              for (i = 0; i < split[LEXICON.l]; i++) {\n                appendix += '|' + split[i] + '$';\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n            }\n\n            return appendix;\n          };\n\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n        }\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\n\n\n        function getHostElementInvertedScale() {\n          var rect = _paddingElementNative[LEXICON.bCR]();\n\n          return {\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n          };\n        }\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\n\n\n        function isHTMLElement(o) {\n          var strOwnerDocument = 'ownerDocument';\n          var strHTMLElement = 'HTMLElement';\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\n        }\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\n\n\n        function getArrayDifferences(a1, a2) {\n          var a = [];\n          var diff = [];\n          var i;\n          var k;\n\n          for (i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n          }\n\n          for (i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n          }\n\n          for (k in a) {\n            diff.push(k);\n          }\n\n          return diff;\n        }\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\n\n\n        function parseToZeroOrNumber(value, toFloat) {\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n          return isNaN(num) ? 0 : num;\n        }\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\n\n\n        function getTextareaInfo() {\n          //read needed values\n          var textareaCursorPosition = _targetElementNative.selectionStart;\n          if (textareaCursorPosition === undefined$1) return;\n\n          var textareaValue = _targetElement.val();\n\n          var textareaLength = textareaValue[LEXICON.l];\n          var textareaRowSplit = textareaValue.split('\\n');\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n          var widestRow = 0;\n          var textareaLastCol = 0;\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n          var rowCols;\n          var i; //get widest Row and the last column of the textarea\n\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n            rowCols = textareaRowSplit[i][LEXICON.l];\n\n            if (rowCols > textareaLastCol) {\n              widestRow = i + 1;\n              textareaLastCol = rowCols;\n            }\n          }\n\n          return {\n            _cursorRow: cursorRow,\n            //cursorRow\n            _cursorColumn: cursorCol,\n            //cursorCol\n            _rows: textareaLastRow,\n            //rows\n            _columns: textareaLastCol,\n            //cols\n            _widestRow: widestRow,\n            //wRow\n            _cursorPosition: textareaCursorPosition,\n            //pos\n            _cursorMax: textareaLength //max\n\n          };\n        }\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\n\n\n        function nativeOverlayScrollbarsAreActive() {\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n        }\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\n\n\n        function getContentMeasureElement() {\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n        }\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\n\n\n        function generateDiv(classesOrAttrs, content) {\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n            var key;\n            var attrs = _strEmpty;\n\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n              for (key in classesOrAttrs) {\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n              }\n            }\n\n            return attrs;\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n        }\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\n\n\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n        }\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\n\n\n        function getObjectPropVal(obj, path) {\n          var splits = path.split(_strDot);\n          var i = 0;\n          var val;\n\n          for (; i < splits.length; i++) {\n            if (!obj[LEXICON.hOP](splits[i])) return;\n            val = obj[splits[i]];\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\n          }\n\n          return val;\n        }\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\n\n\n        function setObjectPropVal(obj, path, val) {\n          var splits = path.split(_strDot);\n          var splitsLength = splits.length;\n          var i = 0;\n          var extendObj = {};\n          var extendObjRoot = extendObj;\n\n          for (; i < splitsLength; i++) {\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n          }\n\n          FRAMEWORK.extend(obj, extendObjRoot, true);\n        }\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\n\n\n        function eachUpdateOnLoad(action) {\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n            each(updateOnLoad, action);\n          }\n        } //==== Utils Cache ====//\n\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\n\n\n        function checkCache(current, cache, force) {\n          if (force) return force;\n\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n            for (var prop in current) {\n              if (prop !== 'c') {\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                  if (checkCache(current[prop], cache[prop])) return true;\n                } else {\n                  return true;\n                }\n              }\n            }\n          } else {\n            return current !== cache;\n          }\n\n          return false;\n        } //==== Shortcuts ====//\n\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\n\n\n        function extendDeep() {\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n        }\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\n\n\n        function addClass(el, classes) {\n          return _frameworkProto.addClass.call(el, classes);\n        }\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\n\n\n        function removeClass(el, classes) {\n          return _frameworkProto.removeClass.call(el, classes);\n        }\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\n\n\n        function addRemoveClass(el, classes, doAdd) {\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\n        }\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\n\n\n        function remove(el) {\n          return _frameworkProto.remove.call(el);\n        }\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\n\n\n        function findFirst(el, selector) {\n          return _frameworkProto.find.call(el, selector).eq(0);\n        } //==== API ====//\n\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\n\n\n        _base.sleep = function () {\n          _sleeping = true;\n        };\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\n\n\n        _base.update = function (force) {\n          if (_destroyed) return;\n          var attrsChanged;\n          var contentSizeC;\n          var isString = type(force) == TYPES.s;\n          var doUpdateAuto;\n          var mutHost;\n          var mutContent;\n\n          if (isString) {\n            if (force === _strAuto) {\n              attrsChanged = meaningfulAttrsChanged();\n              contentSizeC = updateAutoContentSizeChanged();\n              doUpdateAuto = attrsChanged || contentSizeC;\n\n              if (doUpdateAuto) {\n                update({\n                  _contentSizeChanged: contentSizeC,\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\n                });\n              }\n            } else if (force === _strSync) {\n              if (_mutationObserversConnected) {\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n              } else {\n                mutHost = _base.update(_strAuto);\n              }\n            } else if (force === 'zoom') {\n              update({\n                _hostSizeChanged: true,\n                _contentSizeChanged: true\n              });\n            }\n          } else {\n            force = _sleeping || force;\n            _sleeping = false;\n            if (!_base.update(_strSync) || force) update({\n              _force: force\n            });\n          }\n\n          updateElementsOnLoad();\n          return doUpdateAuto || mutHost || mutContent;\n        };\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\n\n\n        _base.options = function (newOptions, value) {\n          var option = {};\n          var changedOps; //return current options if newOptions are undefined or empty\n\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n            if (type(newOptions) == TYPES.s) {\n              if (arguments.length > 1) {\n                setObjectPropVal(option, newOptions, value);\n                changedOps = setOptions(option);\n              } else return getObjectPropVal(_currentOptions, newOptions);\n            } else return _currentOptions;\n          } else {\n            changedOps = setOptions(newOptions);\n          }\n\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\n            update({\n              _changedOptions: changedOps\n            });\n          }\n        };\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\n\n\n        _base.destroy = function () {\n          if (_destroyed) return; //remove this instance from auto update loop\n\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n          disconnectMutationObservers(); //remove all resize observers\n\n          setupResizeObserver(_sizeObserverElement);\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n          for (var extName in _extensions) {\n            _base.removeExt(extName);\n          } //remove all 'destroy' events\n\n\n          while (_destroyEvents[LEXICON.l] > 0) {\n            _destroyEvents.pop()();\n          } //remove all events from host element\n\n\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n          if (_contentGlueElement) remove(_contentGlueElement);\n          if (_contentArrangeElement) remove(_contentArrangeElement);\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n          setupScrollbarsDOM(true);\n          setupScrollbarCornerDOM(true);\n          setupStructureDOM(true); //remove all generated image load events\n\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n          }\n\n          _updateOnLoadElms = undefined$1;\n          _destroyed = true;\n          _sleeping = true; //remove this instance from the instances list\n\n          INSTANCES(pluginTargetElement, 0);\n          dispatchCallback('onDestroyed'); //remove all properties and methods\n          //for (var property in _base)\n          //    delete _base[property];\n          //_base = undefined;\n        };\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\n\n\n        _base.scroll = function (coordinates, duration, easing, complete) {\n          if (arguments.length === 0 || coordinates === undefined$1) {\n            var infoX = _scrollHorizontalInfo;\n            var infoY = _scrollVerticalInfo;\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n            var scrollX = infoX._currentScroll;\n            var scrollXRatio = infoX._currentScrollRatio;\n            var maxScrollX = infoX._maxScroll;\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n            scrollX *= normalizeNegate ? -1 : 1;\n            maxScrollX *= normalizeNegate ? -1 : 1;\n            return {\n              position: {\n                x: scrollX,\n                y: infoY._currentScroll\n              },\n              ratio: {\n                x: scrollXRatio,\n                y: infoY._currentScrollRatio\n              },\n              max: {\n                x: maxScrollX,\n                y: infoY._maxScroll\n              },\n              handleOffset: {\n                x: infoX._handleOffset,\n                y: infoY._handleOffset\n              },\n              handleLength: {\n                x: infoX._handleLength,\n                y: infoY._handleLength\n              },\n              handleLengthRatio: {\n                x: infoX._handleLengthRatio,\n                y: infoY._handleLengthRatio\n              },\n              trackLength: {\n                x: infoX._trackLength,\n                y: infoY._trackLength\n              },\n              snappedHandleOffset: {\n                x: infoX._snappedHandleOffset,\n                y: infoY._snappedHandleOffset\n              },\n              isRTL: _isRTL,\n              isRTLNormalized: _normalizeRTLCache\n            };\n          }\n\n          _base.update(_strSync);\n\n          var normalizeRTL = _normalizeRTLCache;\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\n          var durationIsObject = type(duration) == TYPES.o;\n          var completeCallback = durationIsObject ? duration.complete : complete;\n          var i;\n          var finalScroll = {};\n          var specialEasing = {};\n          var doScrollLeft;\n          var doScrollTop;\n          var animationOptions;\n          var strEnd = 'end';\n          var strBegin = 'begin';\n          var strCenter = 'center';\n          var strNearest = 'nearest';\n          var strAlways = 'always';\n          var strNever = 'never';\n          var strIfNeeded = 'ifneeded';\n          var strLength = LEXICON.l;\n          var settingsAxis;\n          var settingsScroll;\n          var settingsBlock;\n          var settingsMargin;\n          var finalElement;\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n          var updateScrollbarInfos = function updateScrollbarInfos() {\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\n          };\n\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\n            updateScrollbarInfos();\n            completeCallback();\n          };\n\n          function checkSettingsStringValue(currValue, allowedValues) {\n            for (i = 0; i < allowedValues[strLength]; i++) {\n              if (currValue === allowedValues[i]) return true;\n            }\n\n            return false;\n          }\n\n          function getRawScroll(isX, coordinates) {\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n              //decides RTL normalization \"hack\" with .n\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n              for (i = 0; i < coordinateProps[strLength]; i++) {\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n              }\n            }\n          }\n\n          function getFinalScroll(isX, rawScroll) {\n            var isString = type(rawScroll) == TYPES.s;\n            var operator;\n            var amount;\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n            var currScroll = scrollInfo._currentScroll;\n            var maxScroll = scrollInfo._maxScroll;\n            var mult = ' * ';\n            var finalValue;\n            var isRTLisX = _isRTL && isX;\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n            var strReplace = 'replace';\n            var evalFunc = eval;\n            var possibleOperator;\n\n            if (isString) {\n              //check operator\n              if (rawScroll[strLength] > 2) {\n                possibleOperator = rawScroll.substr(0, 2);\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n              } //calculate units and shortcuts\n\n\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n              [strReplace](/</g, 0) //'<'   = 0%\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n            } else {\n              amount = rawScroll;\n            }\n\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n              switch (operator) {\n                case '+=':\n                  finalValue = operatorCurrScroll + amount;\n                  break;\n\n                case '-=':\n                  finalValue = operatorCurrScroll - amount;\n                  break;\n\n                case '*=':\n                  finalValue = operatorCurrScroll * amount;\n                  break;\n\n                case '/=':\n                  finalValue = operatorCurrScroll / amount;\n                  break;\n\n                default:\n                  finalValue = amount;\n                  break;\n              }\n\n              finalValue = invert ? maxScroll - finalValue : finalValue;\n              finalValue *= negate ? -1 : 1;\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n            }\n\n            return finalValue === currScroll ? undefined$1 : finalValue;\n          }\n\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n            var resultDefault = [defaultValue, defaultValue];\n            var valueType = type(value);\n            var valueArrLength;\n            var valueArrItem; //value can be [ string, or array of two strings ]\n\n            if (valueType == valueInternalType) {\n              value = [value, value];\n            } else if (valueType == TYPES.a) {\n              valueArrLength = value[strLength];\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n                if (valueArrLength === 1) value[1] = defaultValue;\n\n                for (i = 0; i < valueArrLength; i++) {\n                  valueArrItem = value[i];\n\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                    value = resultDefault;\n                    break;\n                  }\n                }\n              }\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n            return {\n              x: value[0],\n              y: value[1]\n            };\n          }\n\n          function generateMargin(marginTopRightBottomLeftArray) {\n            var result = [];\n            var currValue;\n            var currValueType;\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n              if (i === valueDirections[strLength]) break;\n              currValue = marginTopRightBottomLeftArray[i];\n              currValueType = type(currValue);\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n            }\n\n            return result;\n          }\n\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n            //get settings\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\n            var marginDefault = [0, 0, 0, 0];\n            var marginType = type(margin);\n            var marginLength;\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n            if (finalElement[strLength] > 0) {\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n                marginLength = margin[strLength];\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n              settingsMargin = margin;\n              var viewportScroll = {\n                l: _scrollHorizontalInfo._currentScroll,\n                t: _scrollVerticalInfo._currentScroll\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n              var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n              var elementOffset = finalElement.offset();\n              var doNotScroll = {\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\n                y: settingsScroll.y == strNever || settingsAxis == _strX\n              };\n              elementOffset[_strTop] -= settingsMargin[0];\n              elementOffset[_strLeft] -= settingsMargin[3];\n              var elementScrollCoordinates = {\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n              };\n\n              if (_isRTL) {\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n              } //measuring is required\n\n\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                var measuringElm = finalElement[0];\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                  width: measuringElm[LEXICON.oW],\n                  height: measuringElm[LEXICON.oH]\n                };\n                var elementSize = {\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                };\n\n                var finalizeBlock = function finalizeBlock(isX) {\n                  var vars = getScrollbarVars(isX);\n                  var wh = vars._w_h;\n                  var lt = vars._left_top;\n                  var xy = vars._x_y;\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\n                  var scrollNever = settingsScroll[xy] == strNever;\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                  var vpSize = _viewportSize[wh];\n                  var vpOffset = viewportOffset[lt];\n                  var elSize = elementSize[wh];\n                  var elOffset = elementOffset[lt];\n                  var divide = blockIsCenter ? 2 : 1;\n                  var elementCenterOffset = elOffset + elSize / 2;\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                    if (blockIsNearest || scrollIfNeeded) {\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                    }\n\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                  }\n                };\n\n                finalizeBlock(true);\n                finalizeBlock(false);\n              }\n\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\n              coordinates = elementScrollCoordinates;\n            }\n          }\n\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\n\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n            if (durationIsObject) {\n              duration.complete = proxyCompleteCallback;\n\n              _viewportElement.animate(finalScroll, duration);\n            } else {\n              animationOptions = {\n                duration: duration,\n                complete: proxyCompleteCallback\n              };\n\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                animationOptions.specialEasing = specialEasing;\n              } else {\n                animationOptions.easing = easing;\n              }\n\n              _viewportElement.animate(finalScroll, animationOptions);\n            }\n          } else {\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n            updateScrollbarInfos();\n          }\n        };\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\n\n\n        _base.scrollStop = function (param1, param2, param3) {\n          _viewportElement.stop(param1, param2, param3);\n\n          return _base;\n        };\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\n\n\n        _base.getElements = function (elementName) {\n          var obj = {\n            target: _targetElementNative,\n            host: _hostElementNative,\n            padding: _paddingElementNative,\n            viewport: _viewportElementNative,\n            content: _contentElementNative,\n            scrollbarHorizontal: {\n              scrollbar: _scrollbarHorizontalElement[0],\n              track: _scrollbarHorizontalTrackElement[0],\n              handle: _scrollbarHorizontalHandleElement[0]\n            },\n            scrollbarVertical: {\n              scrollbar: _scrollbarVerticalElement[0],\n              track: _scrollbarVerticalTrackElement[0],\n              handle: _scrollbarVerticalHandleElement[0]\n            },\n            scrollbarCorner: _scrollbarCornerElement[0]\n          };\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n        };\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\n\n\n        _base.getState = function (stateProperty) {\n          function prepare(obj) {\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\n            var extended = extendDeep({}, obj);\n\n            var changePropertyName = function changePropertyName(from, to) {\n              if (extended[LEXICON.hOP](from)) {\n                extended[to] = extended[from];\n                delete extended[from];\n              }\n            };\n\n            changePropertyName('w', _strWidth); //change w to width\n\n            changePropertyName('h', _strHeight); //change h to height\n\n            delete extended.c; //delete c (the 'changed' prop)\n\n            return extended;\n          }\n\n          var obj = {\n            destroyed: !!prepare(_destroyed),\n            sleeping: !!prepare(_sleeping),\n            autoUpdate: prepare(!_mutationObserversConnected),\n            widthAuto: prepare(_widthAutoCache),\n            heightAuto: prepare(_heightAutoCache),\n            padding: prepare(_cssPaddingCache),\n            overflowAmount: prepare(_overflowAmountCache),\n            hideOverflow: prepare(_hideOverflowCache),\n            hasOverflow: prepare(_hasOverflowCache),\n            contentScrollSize: prepare(_contentScrollSizeCache),\n            viewportSize: prepare(_viewportSize),\n            hostSize: prepare(_hostSizeCache),\n            documentMixed: prepare(_documentMixed)\n          };\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n        };\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\n\n\n        _base.ext = function (extName) {\n          var result;\n\n          var privateMethods = _extensionsPrivateMethods.split(' ');\n\n          var i = 0;\n\n          if (type(extName) == TYPES.s) {\n            if (_extensions[LEXICON.hOP](extName)) {\n              result = extendDeep({}, _extensions[extName]);\n\n              for (; i < privateMethods.length; i++) {\n                delete result[privateMethods[i]];\n              }\n            }\n          } else {\n            result = {};\n\n            for (i in _extensions) {\n              result[i] = extendDeep({}, _base.ext(i));\n            }\n          }\n\n          return result;\n        };\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\n\n\n        _base.addExt = function (extName, extensionOptions) {\n          var registeredExtensionObj = _plugin.extension(extName);\n\n          var instance;\n          var instanceAdded;\n          var instanceContract;\n          var contractResult;\n          var contractFulfilled = true;\n\n          if (registeredExtensionObj) {\n            if (!_extensions[LEXICON.hOP](extName)) {\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n              if (instance) {\n                instanceContract = instance.contract;\n\n                if (type(instanceContract) == TYPES.f) {\n                  contractResult = instanceContract(window);\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                }\n\n                if (contractFulfilled) {\n                  _extensions[extName] = instance;\n                  instanceAdded = instance.added;\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                  return _base.ext(extName);\n                }\n              }\n            } else return _base.ext(extName);\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n        };\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\n\n\n        _base.removeExt = function (extName) {\n          var instance = _extensions[extName];\n          var instanceRemoved;\n\n          if (instance) {\n            delete _extensions[extName];\n            instanceRemoved = instance.removed;\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n            return true;\n          }\n\n          return false;\n        };\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\n\n\n        function construct(targetElement, options, extensions) {\n          _defaultOptions = globals.defaultOptions;\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n          setOptions(extendDeep({}, _defaultOptions, options));\n          _cssCalc = globals.cssCalc;\n          _msieVersion = globals.msie;\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\n          _supportTransition = globals.supportTransition;\n          _supportTransform = globals.supportTransform;\n          _supportPassiveEvents = globals.supportPassiveEvents;\n          _supportResizeObserver = globals.supportResizeObserver;\n          _supportMutationObserver = globals.supportMutationObserver;\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\n          _documentElementNative = _documentElement[0];\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n          _windowElementNative = _windowElement[0];\n          _htmlElement = findFirst(_documentElement, 'html');\n          _bodyElement = findFirst(_htmlElement, 'body');\n          _targetElement = FRAMEWORK(targetElement);\n          _targetElementNative = _targetElement[0];\n          _isTextarea = _targetElement.is('textarea');\n          _isBody = _targetElement.is('body');\n          _documentMixed = _documentElementNative !== document;\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\n\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n          var initBodyScroll;\n\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n            dispatchCallback('onInitializationWithdrawn');\n\n            if (_domExists) {\n              setupStructureDOM(true);\n              setupScrollbarsDOM(true);\n              setupScrollbarCornerDOM(true);\n            }\n\n            _destroyed = true;\n            _sleeping = true;\n            return _base;\n          }\n\n          if (_isBody) {\n            initBodyScroll = {};\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n              _viewportElement.removeAttr(LEXICON.ti);\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n            };\n          } //build OverlayScrollbars DOM\n\n\n          setupStructureDOM();\n          setupScrollbarsDOM();\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n          setupStructureEvents();\n          setupScrollbarEvents(true);\n          setupScrollbarEvents(false);\n          setupScrollbarCornerEvents(); //create mutation observers\n\n          createMutationObservers(); //build resize observer for the host element\n\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n          if (_isBody) {\n            //apply the body scroll to handle it right in the update method\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\n              //set a tabindex to make the viewportElement focusable\n              _viewportElement.attr(LEXICON.ti, '-1');\n\n              _viewportElementNative.focus();\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\n\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n            }\n          } //update for the first time & initialize cache\n\n\n          _base.update(_strAuto); //the plugin is initialized now!\n\n\n          _initialized = true;\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n          each(_callbacksInitQeueue, function (index, value) {\n            dispatchCallback(value.n, value.a);\n          });\n          _callbacksInitQeueue = []; //add extensions\n\n          if (type(extensions) == TYPES.s) extensions = [extensions];\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n            _base.addExt(value);\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n            _base.addExt(key, value);\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n          setTimeout(function () {\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n          }, 333);\n          return _base;\n        }\n\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n          INSTANCES(pluginTargetElement, _base);\n        }\n\n        return _base;\n      }\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\n\n\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var arr = [];\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n        var inst;\n        var result; //pluginTargetElements is null or undefined\n\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\n\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n        initOverlayScrollbarsStatics();\n\n        if (pluginTargetElements[LEXICON.l] > 0) {\n          if (optsIsPlainObj) {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = v;\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n            });\n          } else {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = INSTANCES(v);\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\n            });\n          }\n\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n        }\n\n        return result;\n      };\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\n\n\n      _plugin.globals = function () {\n        initOverlayScrollbarsStatics();\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n        delete globals['msie'];\n        return globals;\n      };\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\n\n\n      _plugin.defaultOptions = function (newDefaultOptions) {\n        initOverlayScrollbarsStatics();\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n      };\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\n\n\n      _plugin.valid = function (osInstance) {\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n      };\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\n\n\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n        var argLen = arguments[LEXICON.l];\n        var i = 0;\n\n        if (argLen < 1 || !extNameTypeString) {\n          //return a copy of all extension objects\n          return FRAMEWORK.extend(true, {\n            length: _pluginsExtensions[LEXICON.l]\n          }, _pluginsExtensions);\n        } else if (extNameTypeString) {\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\n            //register extension\n            _pluginsExtensions.push({\n              name: extensionName,\n              extensionFactory: extension,\n              defaultOptions: defaultOptions\n            });\n          } else {\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n              if (_pluginsExtensions[i].name === extensionName) {\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n              }\n            }\n          }\n        }\n      };\n\n      return _plugin;\n    }();\n\n    if (JQUERY && JQUERY.fn) {\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\n        var _elements = this;\n\n        if (JQUERY.isPlainObject(options)) {\n          JQUERY.each(_elements, function () {\n            PLUGIN(this, options, extensions);\n          });\n          return _elements;\n        } else return PLUGIN(_elements, options);\n      };\n    }\n\n    return PLUGIN;\n  });\n})(OverlayScrollbars$1);\n\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\n\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\n  var _a$options = _a.options,\n      options = _a$options === void 0 ? {} : _a$options,\n      extensions = _a.extensions,\n      className = _a.className,\n      children = _a.children,\n      rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = useRef();\n  var osInstance = useRef();\n  useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), React__default.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), React__default.createElement(\"div\", {\n    className: \"os-padding\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","c","commonjsGlobal","a","__rest","React__default","useRef","useEffect","OverlayScrollbars$1","exports","module","global","factory","document","undefined","window","undefined$1","PLUGINNAME","TYPES","o","f","s","b","n","u","z","LEXICON","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","name","result","uppercasedName","elmStyle","createElement","resultPossibilities","v","currVendorWithoutDashes","length","replace","_cssPropertyValue","property","values","suffix","dummyStyle","possbleValues","split","preparedSuffix","prop","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","concat","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","originalEvent","strPage","strClient","strX","strY","target","srcElement","eventDoc","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","Object","toString","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","_each","callback","isArrayLike","stripAndCollapse","value","tokens","match","join","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","_animate","props","duration","easing","complete","setAnimationValue","guaranteedNext","hasOptions","from","to","progress","step","specialEasing","push","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","_frame","elapsed","qPos","qObj","frame","stop","max","parseFloat","start","pos","speacialEasing","startTime","_stop","clearQ","jumpToEnd","elementIsVisible","getClientRects","base","elements","elms","innerHTML","children","self","on","eventName","handler","eventNameLength","each","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parents","parent","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classNamePrepared","classList","contains","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","animate","jump","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","updateOnLoadTemplate","inheritedAttrsTemplate","resizeAllowedValues","overflowBehaviorAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","dprChanged","isZoom","oldScrollbarSize","newScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","measureElement","globals","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","_loopID","loop","timeNew","timeDelta","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","min","OverlayScrollbarsInstance","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_defaultOptions","_currentOptions","_currentPreparedOptions","_extensions","_extensionsPrivateMethods","_lastUpdateTime","_swallowedUpdateHints","_swallowedUpdateTimeout","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_updateAutoCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","addDestroyEventListener","setupResizeObserver","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observer","observe","dir","style","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","isDirty","rAFId","currWidth","currHeight","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","createMutationObservers","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutations","doUpdate","doUpdateForce","mutation","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","filter","hostClassNamesChanged","updateViewportAttrsFromTarget","isUnknownMutation","textareaUpdate","connectMutationObservers","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","disconnectMutationObservers","hostOnResized","changed","hostSize","checkCache","_hostSizeChanged","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","updateOnLoadCallback","elm","eachUpdateOnLoad","updateOnLoadSelector","_contentSizeChanged","setupHostMouseTouchEvents","destroy","bodyMinSizeChanged","bodyMinSize","parseToZeroOrNumber","oldClassNames","newClassNames","currClasses","oldClasses","diff","getArrayDifferences","idx","regex","mutationType","strClosest","updateAutoContentSizeChanged","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","float","bodyMinSizeC","contentElementScrollSize","meaningfulAttrsChanged","curr","cache","changedAttrs","checks","_elem","_attrs","check","isSizeAffectingCSSProperty","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","checkY","sizeIsAffected","checkPropertyName","attrs","targetAttr","wrapAttrOff","minWidth","minHeight","doMeasure","origWidth","width","origHeight","height","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","_force","hostSizeChanged","contentSizeChanged","force","changedOptions","_changedOptions","swallow","displayIsHidden","extendDeep","checkCacheAutoForce","currScroll","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","padding","getTopRightBottomLeftHost","sizeAutoObserverElementBCRect","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAuto","widthAutoChanged","wasWidthAuto","heightAuto","bottom","heightAutoChanged","wasHeightAuto","updateBorderX","updateBorderY","border","margin","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","getScrollbarVars","wh","_w_h","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","viewportSize","contentScrollSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","overflowAmount","hasOverflow","hideOverflow","canScroll","viewportRect","setOverflowVariables","scrollbarVarsInverted","xyI","_x_y","xy","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","setContentElementCSS","strDirection","invertedAutoSize","addRemoveClass","viewportElementCSS","setViewportCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","posLeftWithFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorPos","_cursorPosition","cursorMax","_cursorMax","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarHandleOffset","refreshScrollbarsInteractive","dispatchCallback","isRTL","xScrollable","yScrollable","clipped","updateElementsOnLoad","forced","setOptions","newOptions","validatedOpts","setupStructureDOM","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","textareaUpdateIntervalID","scrollStopTimeoutId","scrollStopDelay","strFocus","updateTextarea","doClearInterval","clearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","setupScrollbarsDOM","selectOrGenerateScrollbarDOM","isHorizontal","scrollbarClassName","scrollbar","track","handle","_scrollbar","_track","_handle","resetScrollbarDOM","horizontalElements","verticalElements","setupScrollbarEvents","scrollbarVarsInfo","_info","insideIFrame","scroll","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","trackLength","_trackLength","handleLength","_handleLength","scrollRange","_maxScroll","scrollRaw","scrollDeltaPercent","scrollDelta","isFinite","documentMouseTouchUp","scrollStop","mouseInsideHost","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","isNaN","getHostElementInvertedScale","onTrackMouseTouchDown","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","_left_top","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","decreaseScroll","finishedCondition","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","handleOffset","_handleOffset","_currentScroll","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarHiddenClassName","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","_handleLengthRatio","scrollOrTransition","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","transformOffset","translateValue","maxScroll","getScrollRatio","getHandleOffset","scrollRatio","unsnappedScrollRatio","snappedHandleOffset","_currentScrollRatio","getCSSTransitionString","_snappedHandleOffset","isTrack","element1","element2","_l_t","setupScrollbarCornerDOM","setupScrollbarCornerEvents","mouseDownPosition","mouseDownSize","reconnectMutationObserver","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","ext","substr","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","regExpString","regExpMain","RegExp","regExpValidate","properties","strResult","valueArray","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","rowCols","classesOrAttrs","content","selectParentOrOnlyChildren","onlyChildren","selectParent","getObjectPropVal","path","splits","setObjectPropVal","splitsLength","extendObj","extendObjRoot","current","doAdd","sleep","attrsChanged","contentSizeC","isString","doUpdateAuto","mutHost","mutContent","takeRecords","option","changedOps","extName","removeExt","pop","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","scrollXRatio","maxScrollX","ratio","handleLengthRatio","isRTLNormalized","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","doScrollLeft","doScrollTop","animationOptions","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","scrollInfo","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","possibleOperator","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","resultDefault","valueType","valueArrLength","valueArrItem","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","axis","block","marginDefault","marginType","marginLength","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","elementSize","finalizeBlock","vars","lt","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","param1","param2","param3","getElements","elementName","host","viewport","scrollbarHorizontal","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","changePropertyName","destroyed","sleeping","documentMixed","privateMethods","addExt","extensionOptions","registeredExtensionObj","extension","instanceAdded","instanceContract","contractResult","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","construct","initBodyScroll","_bodyMouseTouchDownListener","bodyMouseTouchDownListener","activeElement","focus","valid","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","OverlayScrollbars","OverlayScrollbarsComponent","_a","_a$options","rest","osTargetRef","mergeHostClassNames","assign","ref","_osInstance$getElemen","osClassNames","default"],"sources":["/Users/raulmelo/Documents/projetos/design-system/storybook-wyz/node_modules/@storybook/components/dist/esm/OverlayScrollbars-9b821cbe.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { c as commonjsGlobal, a as __rest } from './index-3ae04fda.js';\nimport React__default, { useRef, useEffect } from 'react';\nimport '@storybook/theming';\nimport '@storybook/csf';\nimport 'qs';\nimport '@storybook/client-logger';\nvar OverlayScrollbars$1 = {\n  exports: {}\n};\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n\n(function (module) {\n  (function (global, factory) {\n    module.exports = factory(global, global.document, undefined);\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\n    var PLUGINNAME = 'OverlayScrollbars';\n    var TYPES = {\n      o: 'object',\n      f: 'function',\n      a: 'array',\n      s: 'string',\n      b: 'boolean',\n      n: 'number',\n      u: 'undefined',\n      z: 'null' //d : 'date',\n      //e : 'error',\n      //r : 'regexp',\n      //y : 'symbol'\n\n    };\n    var LEXICON = {\n      c: 'class',\n      s: 'style',\n      i: 'id',\n      l: 'length',\n      p: 'prototype',\n      ti: 'tabindex',\n      oH: 'offsetHeight',\n      cH: 'clientHeight',\n      sH: 'scrollHeight',\n      oW: 'offsetWidth',\n      cW: 'clientWidth',\n      sW: 'scrollWidth',\n      hOP: 'hasOwnProperty',\n      bCR: 'getBoundingClientRect'\n    };\n\n    var VENDORS = function () {\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n      var jsCache = {};\n      var cssCache = {};\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n      function firstLetterToUpper(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n\n      return {\n        _cssPrefixes: cssPrefixes,\n        _jsPrefixes: jsPrefixes,\n        _cssProperty: function _cssProperty(name) {\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var uppercasedName = firstLetterToUpper(name);\n          var elmStyle = document.createElement('div')[LEXICON.s];\n          var resultPossibilities;\n          var i = 0;\n          var v;\n          var currVendorWithoutDashes;\n\n          for (; i < cssPrefixes.length; i++) {\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n            resultPossibilities = [name, //transition\n            cssPrefixes[i] + name, //-webkit-transition\n            currVendorWithoutDashes + uppercasedName, //webkitTransition\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n            ];\n\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\n                result = resultPossibilities[v];\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n          var name = property + ' ' + values;\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var dummyStyle = document.createElement('div')[LEXICON.s];\n          var possbleValues = values.split(' ');\n          var preparedSuffix = suffix || '';\n          var i = 0;\n          var v = -1;\n          var prop;\n\n          for (; i < possbleValues[LEXICON.l]; i++) {\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n              if (dummyStyle[LEXICON.l]) {\n                result = prop;\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\n          var i = 0;\n          var result = jsCache[name];\n\n          if (!jsCache[LEXICON.hOP](name)) {\n            result = window[name];\n\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n            }\n\n            jsCache[name] = result;\n          }\n\n          return result || fallback;\n        }\n      };\n    }();\n\n    var COMPATIBILITY = function () {\n      function windowSize(x) {\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n      }\n\n      function bind(func, thisObj) {\n        if (_typeof(func) != TYPES.f) {\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var proto = LEXICON.p;\n        var aArgs = Array[proto].slice.call(arguments, 2);\n\n        var fNOP = function fNOP() {};\n\n        var fBound = function fBound() {\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n        };\n\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n        fBound[proto] = new fNOP();\n        return fBound;\n      }\n\n      return {\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\n        wW: bind(windowSize, 0, true),\n\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\n        wH: bind(windowSize, 0),\n\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n          return window.setTimeout(func, 1000 / 60);\n        }),\n\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n          return window.clearTimeout(id);\n        }),\n\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\n        now: function now() {\n          return Date.now && Date.now() || new Date().getTime();\n        },\n\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\n        stpP: function stpP(event) {\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n        },\n\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\n        prvD: function prvD(event) {\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n        },\n\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\n        page: function page(event) {\n          event = event.originalEvent || event;\n          var strPage = 'page';\n          var strClient = 'client';\n          var strX = 'X';\n          var strY = 'Y';\n          var target = event.target || event.srcElement || document;\n          var eventDoc = target.ownerDocument || document;\n          var doc = eventDoc.documentElement;\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n          if (event.touches !== undefined$1) {\n            var touch = event.touches[0];\n            return {\n              x: touch[strPage + strX],\n              y: touch[strPage + strY]\n            };\n          } // Calculate pageX/Y if not native supported\n\n\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n            return {\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n            };\n          }\n\n          return {\n            x: event[strPage + strX],\n            y: event[strPage + strY]\n          };\n        },\n\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\n        mBtn: function mBtn(event) {\n          var button = event.button;\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n        },\n\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\n        inA: function inA(item, arr) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n            try {\n              if (arr[i] === item) return i;\n            } catch (e) {}\n          }\n\n          return -1;\n        },\n\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\n        isA: function isA(arr) {\n          var def = Array.isArray;\n          return def ? def(arr) : this.type(arr) == TYPES.a;\n        },\n\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\n        type: function type(obj) {\n          if (obj === undefined$1) return obj + '';\n          if (obj === null) return obj + '';\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n        },\n        bind: bind\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\n\n      };\n    }();\n\n    var MATH = Math;\n    var JQUERY = window.jQuery;\n\n    var EASING = function () {\n      var _easingsMath = {\n        p: MATH.PI,\n        c: MATH.cos,\n        s: MATH.sin,\n        w: MATH.pow,\n        t: MATH.sqrt,\n        n: MATH.asin,\n        a: MATH.abs,\n        o: 1.70158\n      };\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\n\n      return {\n        swing: function swing(x, t, b, c, d) {\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n        },\n        linear: function linear(x, t, b, c, d) {\n          return x;\n        },\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\n          return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n          return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\n          return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t + b;\n        },\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t * t + b;\n        },\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        easeInSine: function easeInSine(x, t, b, c, d) {\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n        },\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n        },\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n        },\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n        },\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n        },\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n        },\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n        },\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n        },\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n        },\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        },\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n        },\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d / 2) == 2) return b + c;\n          if (!p) p = d * (.3 * 1.5);\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n        },\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n        },\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n        },\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n          var o = 7.5625;\n\n          if ((t /= d) < 1 / 2.75) {\n            return c * (o * t * t) + b;\n          } else if (t < 2 / 2.75) {\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n          } else if (t < 2.5 / 2.75) {\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n          } else {\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n          }\n        },\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n      };\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright Â© 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\n    }();\n\n    var FRAMEWORK = function () {\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n      var _strSpace = ' ';\n      var _strEmpty = '';\n      var _strScrollLeft = 'scrollLeft';\n      var _strScrollTop = 'scrollTop';\n      var _animations = [];\n      var _type = COMPATIBILITY.type;\n      var _cssNumber = {\n        animationIterationCount: true,\n        columnCount: true,\n        fillOpacity: true,\n        flexGrow: true,\n        flexShrink: true,\n        fontWeight: true,\n        lineHeight: true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        widows: true,\n        zIndex: true,\n        zoom: true\n      };\n\n      function extend() {\n        var src,\n            copyIsArray,\n            copy,\n            name,\n            options,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments[LEXICON.l],\n            deep = false; // Handle a deep copy situation\n\n        if (_type(target) == TYPES.b) {\n          deep = target;\n          target = arguments[1] || {}; // skip the boolean and the target\n\n          i = 2;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n          target = {};\n        } // extend jQuery itself if only one argument is passed\n\n\n        if (length === i) {\n          target = FakejQuery;\n          --i;\n        }\n\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\n                } else {\n                  clone = src && isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined$1) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n\n        return target;\n      }\n\n      function inArray(item, arr, fromIndex) {\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n          if (arr[i] === item) return i;\n        }\n\n        return -1;\n      }\n\n      function isFunction(obj) {\n        return _type(obj) == TYPES.f;\n      }\n\n      function isEmptyObject(obj) {\n        for (var name in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isPlainObject(obj) {\n        if (!obj || _type(obj) != TYPES.o) return false;\n        var key;\n        var proto = LEXICON.p;\n        var hasOwnProperty = Object[proto].hasOwnProperty;\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n          return false;\n        }\n\n        for (key in obj) {\n          /**/\n        }\n\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n      }\n\n      function _each(obj, callback) {\n        var i = 0;\n\n        if (isArrayLike(obj)) {\n          for (; i < obj[LEXICON.l]; i++) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        } else {\n          for (i in obj) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        }\n\n        return obj;\n      }\n\n      function isArrayLike(obj) {\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n        var t = _type(obj);\n\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n      }\n\n      function stripAndCollapse(value) {\n        var tokens = value.match(_rnothtmlwhite) || [];\n        return tokens.join(_strSpace);\n      }\n\n      function matches(elem, selector) {\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n        var i = nodeList[LEXICON.l];\n\n        while (i--) {\n          if (nodeList[i] == elem) return true;\n        }\n\n        return false;\n      }\n\n      function insertAdjacentElement(el, strategy, child) {\n        if (COMPATIBILITY.isA(child)) {\n          for (var i = 0; i < child[LEXICON.l]; i++) {\n            insertAdjacentElement(el, strategy, child[i]);\n          }\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n      }\n\n      function setCSSVal(el, prop, val) {\n        try {\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n        } catch (e) {}\n      }\n\n      function parseCSSVal(prop, val) {\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n        return val;\n      }\n\n      function startNextAnimationInQ(animObj, removeFromQ) {\n        var index;\n        var nextAnim;\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n        if (animObj.q[LEXICON.l] > 0) {\n          nextAnim = animObj.q[0];\n\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n        } else {\n          index = inArray(animObj, _animations);\n          if (index > -1) _animations.splice(index, 1);\n        }\n      }\n\n      function setAnimationValue(el, prop, value) {\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n      }\n\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\n        var hasOptions = isPlainObject(options);\n        var from = {};\n        var to = {};\n        var i = 0;\n        var key;\n        var animObj;\n        var progress;\n        var step;\n        var specialEasing;\n        var duration;\n\n        if (hasOptions) {\n          easing = options.easing;\n          progress = options.progress;\n          step = options.step;\n          specialEasing = options.specialEasing;\n          complete = options.complete;\n          duration = options.duration;\n        } else duration = options;\n\n        specialEasing = specialEasing || {};\n        duration = duration || 400;\n        easing = easing || 'swing';\n        guaranteedNext = guaranteedNext || false;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          if (_animations[i].el === el) {\n            animObj = _animations[i];\n            break;\n          }\n        }\n\n        if (!animObj) {\n          animObj = {\n            el: el,\n            q: []\n          };\n\n          _animations.push(animObj);\n        }\n\n        for (key in props) {\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n        }\n\n        for (key in from) {\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\n        }\n\n        if (!isEmptyObject(to)) {\n          var timeNow;\n          var end;\n          var percent;\n          var fromVal;\n          var toVal;\n          var easedVal;\n          var timeStart;\n\n          var _frame;\n\n          var elapsed;\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n          var qObj = {\n            props: to,\n            duration: hasOptions ? options : duration,\n            easing: easing,\n            complete: complete\n          };\n\n          if (qPos === -1) {\n            qPos = animObj.q[LEXICON.l];\n            animObj.q.push(qObj);\n          }\n\n          if (qPos === 0) {\n            if (duration > 0) {\n              timeStart = COMPATIBILITY.now();\n\n              _frame = function frame() {\n                timeNow = COMPATIBILITY.now();\n                elapsed = timeNow - timeStart;\n                end = qObj.stop || elapsed >= duration;\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n                for (key in to) {\n                  fromVal = parseFloat(from[key]);\n                  toVal = parseFloat(to[key]);\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                  setAnimationValue(el, key, easedVal);\n\n                  if (isFunction(step)) {\n                    step(easedVal, {\n                      elem: el,\n                      prop: key,\n                      start: fromVal,\n                      now: easedVal,\n                      end: toVal,\n                      pos: percent,\n                      options: {\n                        easing: easing,\n                        speacialEasing: specialEasing,\n                        duration: duration,\n                        complete: complete,\n                        step: step\n                      },\n                      startTime: timeStart\n                    });\n                  }\n                }\n\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n                if (end) {\n                  startNextAnimationInQ(animObj);\n                  if (isFunction(complete)) complete();\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n              };\n\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\n            } else {\n              for (key in to) {\n                setAnimationValue(el, key, to[key]);\n              }\n\n              startNextAnimationInQ(animObj);\n            }\n          }\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\n      }\n\n      function _stop(el, clearQ, jumpToEnd) {\n        var animObj;\n        var qObj;\n        var key;\n        var i = 0;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          animObj = _animations[i];\n\n          if (animObj.el === el) {\n            if (animObj.q[LEXICON.l] > 0) {\n              qObj = animObj.q[0];\n              qObj.stop = true;\n              COMPATIBILITY.cAF()(qObj.frame);\n              animObj.q.splice(0, 1);\n              if (jumpToEnd) for (key in qObj.props) {\n                setAnimationValue(el, key, qObj.props[key]);\n              }\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n            }\n\n            break;\n          }\n        }\n      }\n\n      function elementIsVisible(el) {\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n      }\n\n      function FakejQuery(selector) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var base = new FakejQuery();\n        var elements = selector;\n        var i = 0;\n        var elms;\n        var el;\n\n        if (_type(selector) == TYPES.s) {\n          elements = [];\n\n          if (selector.charAt(0) === '<') {\n            el = document.createElement('div');\n            el.innerHTML = selector;\n            elms = el.children;\n          } else {\n            elms = document.querySelectorAll(selector);\n          }\n\n          for (; i < elms[LEXICON.l]; i++) {\n            elements.push(elms[i]);\n          }\n        }\n\n        if (elements) {\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n          for (i = 0; i < elements[LEXICON.l]; i++) {\n            base[i] = elements[i];\n          }\n\n          base[LEXICON.l] = elements[LEXICON.l];\n        }\n\n        return base;\n      }\n\n      FakejQuery[LEXICON.p] = {\n        //EVENTS:\n        on: function on(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.addEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.addEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.attachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        off: function off(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.removeEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.removeEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.detachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        one: function one(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          return this.each(function () {\n            var el = FakejQuery(this);\n            FakejQuery.each(eventName, function (i, oneEventName) {\n              var oneHandler = function oneHandler(e) {\n                handler.call(this, e);\n                el.off(oneEventName, oneHandler);\n              };\n\n              el.on(oneEventName, oneHandler);\n            });\n          });\n        },\n        trigger: function trigger(eventName) {\n          var el;\n          var event;\n          return this.each(function () {\n            el = this;\n\n            if (document.createEvent) {\n              event = document.createEvent('HTMLEvents');\n              event.initEvent(eventName, true, false);\n              el.dispatchEvent(event);\n            } else {\n              el.fireEvent('on' + eventName);\n            }\n          });\n        },\n        //DOM NODE INSERTING / REMOVING:\n        append: function append(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforeend', child);\n          });\n        },\n        prepend: function prepend(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterbegin', child);\n          });\n        },\n        before: function before(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforebegin', child);\n          });\n        },\n        after: function after(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterend', child);\n          });\n        },\n        remove: function remove() {\n          return this.each(function () {\n            var el = this;\n            var parentNode = el.parentNode;\n            if (parentNode != null) parentNode.removeChild(el);\n          });\n        },\n        unwrap: function unwrap() {\n          var parents = [];\n          var i;\n          var el;\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (inArray(parent, parents) === -1) parents.push(parent);\n          });\n\n          for (i = 0; i < parents[LEXICON.l]; i++) {\n            el = parents[i];\n            parent = el.parentNode;\n\n            while (el.firstChild) {\n              parent.insertBefore(el.firstChild, el);\n            }\n\n            parent.removeChild(el);\n          }\n\n          return this;\n        },\n        wrapAll: function wrapAll(wrapperHTML) {\n          var i;\n          var nodes = this;\n          var wrapper = FakejQuery(wrapperHTML)[0];\n          var deepest = wrapper;\n          var parent = nodes[0].parentNode;\n          var previousSibling = nodes[0].previousSibling;\n\n          while (deepest.childNodes[LEXICON.l] > 0) {\n            deepest = deepest.childNodes[0];\n          }\n\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n            deepest.appendChild(nodes[i]);\n          }\n\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n          parent.insertBefore(wrapper, nextSibling);\n          return this;\n        },\n        wrapInner: function wrapInner(wrapperHTML) {\n          return this.each(function () {\n            var el = FakejQuery(this);\n            var contents = el.contents();\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n          });\n        },\n        wrap: function wrap(wrapperHTML) {\n          return this.each(function () {\n            FakejQuery(this).wrapAll(wrapperHTML);\n          });\n        },\n        //DOM NODE MANIPULATION / INFORMATION:\n        css: function css(styles, val) {\n          var el;\n          var key;\n          var cptStyle;\n          var getCptStyle = window.getComputedStyle;\n\n          if (_type(styles) == TYPES.s) {\n            if (val === undefined$1) {\n              el = this[0];\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n            } else {\n              return this.each(function () {\n                setCSSVal(this, styles, val);\n              });\n            }\n          } else {\n            return this.each(function () {\n              for (key in styles) {\n                setCSSVal(this, key, styles[key]);\n              }\n            });\n          }\n        },\n        hasClass: function hasClass(className) {\n          var elem,\n              i = 0;\n          var classNamePrepared = _strSpace + className + _strSpace;\n          var classList;\n\n          while (elem = this[i++]) {\n            classList = elem.classList;\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n          }\n\n          return false;\n        },\n        addClass: function addClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.add(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        removeClass: function removeClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.remove(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                    }\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        hide: function hide() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'none';\n          });\n        },\n        show: function show() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'block';\n          });\n        },\n        attr: function attr(attrName, value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el.getAttribute(attrName);\n            el.setAttribute(attrName, value);\n          }\n\n          return this;\n        },\n        removeAttr: function removeAttr(attrName) {\n          return this.each(function () {\n            this.removeAttribute(attrName);\n          });\n        },\n        offset: function offset() {\n          var el = this[0];\n          var rect = el[LEXICON.bCR]();\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        },\n        position: function position() {\n          var el = this[0];\n          return {\n            top: el.offsetTop,\n            left: el.offsetLeft\n          };\n        },\n        scrollLeft: function scrollLeft(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollLeft];\n            el[_strScrollLeft] = value;\n          }\n\n          return this;\n        },\n        scrollTop: function scrollTop(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollTop];\n            el[_strScrollTop] = value;\n          }\n\n          return this;\n        },\n        val: function val(value) {\n          var el = this[0];\n          if (!value) return el.value;\n          el.value = value;\n          return this;\n        },\n        //DOM TRAVERSAL / FILTERING:\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(index) {\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n        },\n        find: function find(selector) {\n          var children = [];\n          var i;\n          this.each(function () {\n            var el = this;\n            var ch = el.querySelectorAll(selector);\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              children.push(ch[i]);\n            }\n          });\n          return FakejQuery(children);\n        },\n        children: function children(selector) {\n          var children = [];\n          var el;\n          var ch;\n          var i;\n          this.each(function () {\n            ch = this.children;\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              el = ch[i];\n\n              if (selector) {\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n              } else children.push(el);\n            }\n          });\n          return FakejQuery(children);\n        },\n        parent: function parent(selector) {\n          var parents = [];\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n          });\n          return FakejQuery(parents);\n        },\n        is: function is(selector) {\n          var el;\n          var i;\n\n          for (i = 0; i < this[LEXICON.l]; i++) {\n            el = this[i];\n            if (selector === ':visible') return elementIsVisible(el);\n            if (selector === ':hidden') return !elementIsVisible(el);\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n          }\n\n          return false;\n        },\n        contents: function contents() {\n          var contents = [];\n          var childs;\n          var i;\n          this.each(function () {\n            childs = this.childNodes;\n\n            for (i = 0; i < childs[LEXICON.l]; i++) {\n              contents.push(childs[i]);\n            }\n          });\n          return FakejQuery(contents);\n        },\n        each: function each(callback) {\n          return _each(this, callback);\n        },\n        //ANIMATION:\n        animate: function animate(props, duration, easing, complete) {\n          return this.each(function () {\n            _animate(this, props, duration, easing, complete);\n          });\n        },\n        stop: function stop(clearQ, jump) {\n          return this.each(function () {\n            _stop(this, clearQ, jump);\n          });\n        }\n      };\n      extend(FakejQuery, {\n        extend: extend,\n        inArray: inArray,\n        isEmptyObject: isEmptyObject,\n        isPlainObject: isPlainObject,\n        each: _each\n      });\n      return FakejQuery;\n    }();\n\n    var INSTANCES = function () {\n      var _targets = [];\n      var _instancePropertyString = '__overlayScrollbars__';\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\n\n      return function (target, instance) {\n        var argLen = arguments[LEXICON.l];\n\n        if (argLen < 1) {\n          //return all targets\n          return _targets;\n        } else {\n          if (instance) {\n            //register instance\n            target[_instancePropertyString] = instance;\n\n            _targets.push(target);\n          } else {\n            var index = COMPATIBILITY.inA(target, _targets);\n\n            if (index > -1) {\n              if (argLen > 1) {\n                //unregister instance\n                delete target[_instancePropertyString];\n\n                _targets.splice(index, 1);\n              } else {\n                //get instance from target\n                return _targets[index][_instancePropertyString];\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var PLUGIN = function () {\n      var _plugin;\n\n      var _pluginsGlobals;\n\n      var _pluginsAutoUpdateLoop;\n\n      var _pluginsExtensions = [];\n\n      var _pluginsOptions = function () {\n        var type = COMPATIBILITY.type;\n        var possibleTemplateTypes = [TYPES.b, //boolean\n        TYPES.n, //number\n        TYPES.s, //string\n        TYPES.a, //array\n        TYPES.o, //object\n        TYPES.f, //function\n        TYPES.z //null\n        ];\n        var restrictedStringsSplit = ' ';\n        var restrictedStringsPossibilitiesSplit = ':';\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\n        var numberAllowedValues = TYPES.n;\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n        var booleanTrueTemplate = [true, TYPES.b];\n        var booleanFalseTemplate = [false, TYPES.b];\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n        var optionsDefaultsAndTemplate = {\n          className: ['os-theme-dark', classNameAllowedValues],\n          //null || string\n          resize: ['none', resizeAllowedValues],\n          //none || both  || horizontal || vertical || n || b || h || v\n          sizeAutoCapable: booleanTrueTemplate,\n          //true || false\n          clipAlways: booleanTrueTemplate,\n          //true || false\n          normalizeRTL: booleanTrueTemplate,\n          //true || false\n          paddingAbsolute: booleanFalseTemplate,\n          //true || false\n          autoUpdate: [null, booleanNullAllowedValues],\n          //true || false || null\n          autoUpdateInterval: [33, numberAllowedValues],\n          //number\n          updateOnLoad: updateOnLoadTemplate,\n          //string || array || null\n          nativeScrollbarsOverlaid: {\n            showNativeScrollbars: booleanFalseTemplate,\n            //true || false\n            initialize: booleanTrueTemplate //true || false\n\n          },\n          overflowBehavior: {\n            x: ['scroll', overflowBehaviorAllowedValues],\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n          },\n          scrollbars: {\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\n            //visible || hidden || auto || v || h || a\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\n            //never || scroll || leave || move || n || s || l || m\n            autoHideDelay: [800, numberAllowedValues],\n            //number\n            dragScrolling: booleanTrueTemplate,\n            //true || false\n            clickScrolling: booleanFalseTemplate,\n            //true || false\n            touchSupport: booleanTrueTemplate,\n            //true || false\n            snapHandle: booleanFalseTemplate //true || false\n\n          },\n          textarea: {\n            dynWidth: booleanFalseTemplate,\n            //true || false\n            dynHeight: booleanFalseTemplate,\n            //true || false\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n          },\n          callbacks: {\n            onInitialized: callbackTemplate,\n            //null || function\n            onInitializationWithdrawn: callbackTemplate,\n            //null || function\n            onDestroyed: callbackTemplate,\n            //null || function\n            onScrollStart: callbackTemplate,\n            //null || function\n            onScroll: callbackTemplate,\n            //null || function\n            onScrollStop: callbackTemplate,\n            //null || function\n            onOverflowChanged: callbackTemplate,\n            //null || function\n            onOverflowAmountChanged: callbackTemplate,\n            //null || function\n            onDirectionChanged: callbackTemplate,\n            //null || function\n            onContentSizeChanged: callbackTemplate,\n            //null || function\n            onHostSizeChanged: callbackTemplate,\n            //null || function\n            onUpdated: callbackTemplate //null || function\n\n          }\n        };\n\n        var convert = function convert(template) {\n          var recursive = function recursive(obj) {\n            var key;\n            var val;\n            var valType;\n\n            for (key in obj) {\n              if (!obj[LEXICON.hOP](key)) continue;\n              val = obj[key];\n              valType = type(val);\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n            }\n\n            return obj;\n          };\n\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n        };\n\n        return {\n          _defaults: convert(),\n          _template: convert(true),\n\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\n            var validatedOptions = {};\n            var validatedOptionsPrepared = {};\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\n            var inArray = FRAMEWORK.inArray;\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n              for (var prop in template) {\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                  var isValid = false;\n                  var isDiff = false;\n                  var templateValue = template[prop];\n                  var templateValueType = type(templateValue);\n                  var templateIsComplex = templateValueType == TYPES.o;\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                  var dataDiffValue = diffData[prop];\n                  var dataValue = data[prop];\n                  var dataValueType = type(dataValue);\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                  var errorPossibleTypes = [];\n                  var errorRestrictedStrings = [];\n                  var restrictedStringValuesSplit;\n                  var restrictedStringValuesPossibilitiesSplit;\n                  var isRestrictedValue;\n                  var mainPossibility;\n                  var currType;\n                  var i;\n                  var v;\n                  var j;\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                  if (templateIsComplex && dataValueType == TYPES.o) {\n                    validatedOptions[prop] = {};\n                    validatedOptionsPrepared[prop] = {};\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                      if (isEmptyObj(value[prop])) {\n                        delete value[prop];\n                      }\n                    });\n                  } else if (!templateIsComplex) {\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                      currType = templateTypes[i];\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                      if (isRestrictedValue) {\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                            //if any possibility matches with the dataValue, its valid\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                              isValid = true;\n                              break;\n                            }\n                          }\n\n                          if (isValid) break;\n                        }\n                      } else {\n                        errorPossibleTypes.push(currType);\n\n                        if (dataValueType === currType) {\n                          isValid = true;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (isValid) {\n                      isDiff = dataValue !== dataDiffValue;\n                      if (isDiff) validatedOptions[prop] = dataValue;\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                    } else if (writeErrors) {\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                    }\n\n                    delete data[prop];\n                  }\n                }\n              }\n            };\n\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\n\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n            return {\n              _default: validatedOptions,\n              _prepared: validatedOptionsPrepared\n            };\n          }\n        };\n      }();\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\n\n\n      function initOverlayScrollbarsStatics() {\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n      }\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsGlobals(defaultOptions) {\n        var _base = this;\n\n        var strOverflow = 'overflow';\n        var strHidden = 'hidden';\n        var strScroll = 'scroll';\n        var bodyElement = FRAMEWORK('body');\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n        bodyElement.append(scrollbarDummyElement);\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n        var nativeScrollbarIsOverlaid = {\n          x: nativeScrollbarSize.x === 0,\n          y: nativeScrollbarSize.y === 0\n        };\n\n        var msie = function () {\n          var ua = window.navigator.userAgent;\n          var strIndexOf = 'indexOf';\n          var strSubString = 'substring';\n          var msie = ua[strIndexOf]('MSIE ');\n          var trident = ua[strIndexOf]('Trident/');\n          var edge = ua[strIndexOf]('Edge/');\n          var rv = ua[strIndexOf]('rv:');\n          var result;\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n          return result;\n        }();\n\n        FRAMEWORK.extend(_base, {\n          defaultOptions: defaultOptions,\n          msie: msie,\n          autoUpdateLoop: false,\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\n          nativeScrollbarSize: nativeScrollbarSize,\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n          nativeScrollbarStyling: function () {\n            var result = false;\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n            try {\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n            //and set overflow to scroll\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n            return result;\n          }(),\n          overlayScrollbarDummySize: {\n            x: 30,\n            y: 30\n          },\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n          restrictedMeasuring: function () {\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\n            scrollbarDummyElement.css(strOverflow, strHidden);\n            var scrollSize = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            scrollbarDummyElement.css(strOverflow, 'visible');\n            var scrollSize2 = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n          }(),\n          rtlScrollBehavior: function () {\n            scrollbarDummyElement.css({\n              'overflow-y': strHidden,\n              'overflow-x': strScroll,\n              'direction': 'rtl'\n            }).scrollLeft(0);\n            var dummyContainerOffset = scrollbarDummyElement.offset();\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n            scrollbarDummyElement.scrollLeft(-999);\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n            return {\n              //origin direction = determines if the zero scroll position is on the left or right side\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n              //true = on the left side\n              //false = on the right side\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n              //negative = determines if the maximum scroll is positive or negative\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n              //true = negative\n              //false = positive\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n            };\n          }(),\n          supportTransform: !!VENDORS._cssProperty('transform'),\n          supportTransition: !!VENDORS._cssProperty('transition'),\n          supportPassiveEvents: function () {\n            var supportsPassive = false;\n\n            try {\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: function get() {\n                  supportsPassive = true;\n                }\n              }));\n            } catch (e) {}\n\n            return supportsPassive;\n          }(),\n          supportResizeObserver: !!COMPATIBILITY.rO(),\n          supportMutationObserver: !!COMPATIBILITY.mO()\n        });\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n        (function () {\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n          var abs = MATH.abs;\n          var windowWidth = COMPATIBILITY.wW();\n          var windowHeight = COMPATIBILITY.wH();\n          var windowDpr = getWindowDPR();\n\n          var onResize = function onResize() {\n            if (INSTANCES().length > 0) {\n              var newW = COMPATIBILITY.wW();\n              var newH = COMPATIBILITY.wH();\n              var deltaW = newW - windowWidth;\n              var deltaH = newH - windowHeight;\n              if (deltaW === 0 && deltaH === 0) return;\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n              var absDeltaW = abs(deltaW);\n              var absDeltaH = abs(deltaH);\n              var absDeltaWRatio = abs(deltaWRatio);\n              var absDeltaHRatio = abs(deltaHRatio);\n              var newDPR = getWindowDPR();\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n              var isZoom = deltaIsBigger && difference && dprChanged;\n              var oldScrollbarSize = _base.nativeScrollbarSize;\n              var newScrollbarSize;\n\n              if (isZoom) {\n                bodyElement.append(scrollbarDummyElement);\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                scrollbarDummyElement.remove();\n\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                  FRAMEWORK.each(INSTANCES(), function () {\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                  });\n                }\n              }\n\n              windowWidth = newW;\n              windowHeight = newH;\n              windowDpr = newDPR;\n            }\n          };\n\n          function differenceIsBiggerThanOne(valOne, valTwo) {\n            var absValOne = abs(valOne);\n            var absValTwo = abs(valTwo);\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n          }\n\n          function getWindowDPR() {\n            var dDPI = window.screen.deviceXDPI || 0;\n            var sDPI = window.screen.logicalXDPI || 1;\n            return window.devicePixelRatio || dDPI / sDPI;\n          }\n\n          FRAMEWORK(window).on('resize', onResize);\n        })();\n\n        function calcNativeScrollbarSize(measureElement) {\n          return {\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n          };\n        }\n      }\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\n        var _base = this;\n\n        var _inArray = FRAMEWORK.inArray;\n        var _getNow = COMPATIBILITY.now;\n        var _strAutoUpdate = 'autoUpdate';\n\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n        var _strLength = LEXICON.l;\n        var _loopingInstances = [];\n        var _loopingInstancesIntervalCache = [];\n        var _loopIsActive = false;\n        var _loopIntervalDefault = 33;\n        var _loopInterval = _loopIntervalDefault;\n\n        var _loopTimeOld = _getNow();\n\n        var _loopID;\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\n\n\n        var loop = function loop() {\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n            _loopID = COMPATIBILITY.rAF()(function () {\n              loop();\n            });\n\n            var timeNew = _getNow();\n\n            var timeDelta = timeNew - _loopTimeOld;\n            var lowestInterval;\n            var instance;\n            var instanceOptions;\n            var instanceAutoUpdateAllowed;\n            var instanceAutoUpdateInterval;\n            var now;\n\n            if (timeDelta > _loopInterval) {\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\n              lowestInterval = _loopIntervalDefault;\n\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n                instance = _loopingInstances[i];\n\n                if (instance !== undefined$1) {\n                  instanceOptions = instance.options();\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                  now = _getNow();\n\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                    instance.update('auto');\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                  }\n\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                }\n              }\n\n              _loopInterval = lowestInterval;\n            }\n          } else {\n            _loopInterval = _loopIntervalDefault;\n          }\n        };\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.add = function (instance) {\n          if (_inArray(instance, _loopingInstances) === -1) {\n            _loopingInstances.push(instance);\n\n            _loopingInstancesIntervalCache.push(_getNow());\n\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n              _loopIsActive = true;\n              globals.autoUpdateLoop = _loopIsActive;\n              loop();\n            }\n          }\n        };\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.remove = function (instance) {\n          var index = _inArray(instance, _loopingInstances);\n\n          if (index > -1) {\n            //remove from loopingInstances list\n            _loopingInstancesIntervalCache.splice(index, 1);\n\n            _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n              _loopIsActive = false;\n              globals.autoUpdateLoop = _loopIsActive;\n\n              if (_loopID !== undefined$1) {\n                COMPATIBILITY.cAF()(_loopID);\n                _loopID = -1;\n              }\n            }\n          }\n        };\n      }\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n        //shortcuts\n        var type = COMPATIBILITY.type;\n        var inArray = FRAMEWORK.inArray;\n        var each = FRAMEWORK.each; //make correct instanceof\n\n        var _base = new _plugin();\n\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n        if (INSTANCES(pluginTargetElement)) {\n          var inst = INSTANCES(pluginTargetElement);\n          inst.options(options);\n          return inst;\n        } //globals:\n\n\n        var _nativeScrollbarIsOverlaid;\n\n        var _overlayScrollbarDummySize;\n\n        var _rtlScrollBehavior;\n\n        var _autoUpdateRecommended;\n\n        var _msieVersion;\n\n        var _nativeScrollbarStyling;\n\n        var _cssCalc;\n\n        var _nativeScrollbarSize;\n\n        var _supportTransition;\n\n        var _supportTransform;\n\n        var _supportPassiveEvents;\n\n        var _supportResizeObserver;\n\n        var _supportMutationObserver;\n\n        var _initialized;\n\n        var _destroyed;\n\n        var _isTextarea;\n\n        var _isBody;\n\n        var _documentMixed;\n\n        var _domExists; //general:\n\n\n        var _isBorderBox;\n\n        var _sizeAutoObserverAdded;\n\n        var _paddingX;\n\n        var _paddingY;\n\n        var _borderX;\n\n        var _borderY;\n\n        var _marginX;\n\n        var _marginY;\n\n        var _isRTL;\n\n        var _sleeping;\n\n        var _contentBorderSize = {};\n        var _scrollHorizontalInfo = {};\n        var _scrollVerticalInfo = {};\n        var _viewportSize = {};\n        var _nativeScrollbarMinSize = {}; //naming:\t\n\n        var _strMinusHidden = '-hidden';\n        var _strMarginMinus = 'margin-';\n        var _strPaddingMinus = 'padding-';\n        var _strBorderMinus = 'border-';\n        var _strTop = 'top';\n        var _strRight = 'right';\n        var _strBottom = 'bottom';\n        var _strLeft = 'left';\n        var _strMinMinus = 'min-';\n        var _strMaxMinus = 'max-';\n        var _strWidth = 'width';\n        var _strHeight = 'height';\n        var _strFloat = 'float';\n        var _strEmpty = '';\n        var _strAuto = 'auto';\n        var _strSync = 'sync';\n        var _strScroll = 'scroll';\n        var _strHundredPercent = '100%';\n        var _strX = 'x';\n        var _strY = 'y';\n        var _strDot = '.';\n        var _strSpace = ' ';\n        var _strScrollbar = 'scrollbar';\n        var _strMinusHorizontal = '-horizontal';\n        var _strMinusVertical = '-vertical';\n\n        var _strScrollLeft = _strScroll + 'Left';\n\n        var _strScrollTop = _strScroll + 'Top';\n\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\n        var _strMouseEnter = 'mouseenter';\n        var _strMouseLeave = 'mouseleave';\n        var _strKeyDownEvent = 'keydown';\n        var _strKeyUpEvent = 'keyup';\n        var _strSelectStartEvent = 'selectstart';\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n        var _cassNamesPrefix = 'os-';\n\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n        var _classNameHostElement = _cassNamesPrefix + 'host';\n\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n        var _classNameHostTransition = _classNameHostElement + '-transition';\n\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n        var _classNameContentElement = _cassNamesPrefix + 'content';\n\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n        var _defaultOptions;\n\n        var _currentOptions;\n\n        var _currentPreparedOptions; //extensions:\t\n\n\n        var _extensions = {};\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n        var _lastUpdateTime;\n\n        var _swallowedUpdateHints = {};\n\n        var _swallowedUpdateTimeout;\n\n        var _swallowUpdateLag = 42;\n        var _updateOnLoadEventName = 'load';\n        var _updateOnLoadElms = []; //DOM elements:\t\n\n        var _windowElement;\n\n        var _documentElement;\n\n        var _htmlElement;\n\n        var _bodyElement;\n\n        var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n        var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n        var _sizeObserverElement; //observes size and padding changes\t\n\n\n        var _paddingElement; //manages the padding\t\n\n\n        var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n        var _contentElement; //the element which holds the content\t\n\n\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n        var _contentGlueElement; //has always the size of the content element\t\n\n\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n        var _scrollbarCornerElement;\n\n        var _scrollbarHorizontalElement;\n\n        var _scrollbarHorizontalTrackElement;\n\n        var _scrollbarHorizontalHandleElement;\n\n        var _scrollbarVerticalElement;\n\n        var _scrollbarVerticalTrackElement;\n\n        var _scrollbarVerticalHandleElement;\n\n        var _windowElementNative;\n\n        var _documentElementNative;\n\n        var _targetElementNative;\n\n        var _hostElementNative;\n\n        var _sizeAutoObserverElementNative;\n\n        var _sizeObserverElementNative;\n\n        var _paddingElementNative;\n\n        var _viewportElementNative;\n\n        var _contentElementNative; //Cache:\t\n\n\n        var _hostSizeCache;\n\n        var _contentScrollSizeCache;\n\n        var _arrangeContentSizeCache;\n\n        var _hasOverflowCache;\n\n        var _hideOverflowCache;\n\n        var _widthAutoCache;\n\n        var _heightAutoCache;\n\n        var _cssBoxSizingCache;\n\n        var _cssPaddingCache;\n\n        var _cssBorderCache;\n\n        var _cssMarginCache;\n\n        var _cssDirectionCache;\n\n        var _cssDirectionDetectedCache;\n\n        var _paddingAbsoluteCache;\n\n        var _clipAlwaysCache;\n\n        var _contentGlueSizeCache;\n\n        var _overflowBehaviorCache;\n\n        var _overflowAmountCache;\n\n        var _ignoreOverlayScrollbarHidingCache;\n\n        var _autoUpdateCache;\n\n        var _sizeAutoCapableCache;\n\n        var _contentElementScrollSizeChangeDetectedCache;\n\n        var _hostElementSizeChangeDetectedCache;\n\n        var _scrollbarsVisibilityCache;\n\n        var _scrollbarsAutoHideCache;\n\n        var _scrollbarsClickScrollingCache;\n\n        var _scrollbarsDragScrollingCache;\n\n        var _resizeCache;\n\n        var _normalizeRTLCache;\n\n        var _classNameCache;\n\n        var _oldClassName;\n\n        var _textareaAutoWrappingCache;\n\n        var _textareaInfoCache;\n\n        var _textareaSizeCache;\n\n        var _textareaDynHeightCache;\n\n        var _textareaDynWidthCache;\n\n        var _bodyMinSizeCache;\n\n        var _updateAutoCache = {}; //MutationObserver:\t\n\n        var _mutationObserverHost;\n\n        var _mutationObserverContent;\n\n        var _mutationObserverHostCallback;\n\n        var _mutationObserverContentCallback;\n\n        var _mutationObserversConnected;\n\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n        var _destroyEvents = []; //textarea:\t\n\n        var _textareaHasFocus; //scrollbars:\t\n\n\n        var _scrollbarsAutoHideTimeoutId;\n\n        var _scrollbarsAutoHideMoveTimeoutId;\n\n        var _scrollbarsAutoHideDelay;\n\n        var _scrollbarsAutoHideNever;\n\n        var _scrollbarsAutoHideScroll;\n\n        var _scrollbarsAutoHideMove;\n\n        var _scrollbarsAutoHideLeave;\n\n        var _scrollbarsHandleHovered;\n\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n        var _resizeNone;\n\n        var _resizeBoth;\n\n        var _resizeHorizontal;\n\n        var _resizeVertical; //==== Event Listener ====//\t\n\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\n\n\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n          var method = remove ? 'removeEventListener' : 'addEventListener';\n          var onOff = remove ? 'off' : 'on';\n          var events = collected ? false : eventNames.split(_strSpace);\n          var i = 0;\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n          var nativeParam = _supportPassiveEvents ? {\n            passive: passive,\n            capture: capture\n          } : capture;\n\n          if (collected) {\n            for (; i < eventNames[LEXICON.l]; i++) {\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n            }\n          } else {\n            for (; i < events[LEXICON.l]; i++) {\n              if (_supportPassiveEvents) {\n                element[0][method](events[i], listener, nativeParam);\n              } else {\n                element[onOff](events[i], listener);\n              }\n            }\n          }\n        }\n\n        function addDestroyEventListener(element, eventNames, listener, passive) {\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n        } //==== Resize Observer ====//\n\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\n\n\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\n          if (targetElement) {\n            var resizeObserver = COMPATIBILITY.rO();\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n            var strChildNodes = 'childNodes';\n            var constScroll = 3333333;\n\n            var callback = function callback() {\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n              onElementResizedCallback();\n            }; //add resize observer:\n\n\n            if (onElementResizedCallback) {\n              if (_supportResizeObserver) {\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                observer.observe(element);\n              } else {\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                    c: _classNameResizeObserverItemElement,\n                    dir: 'ltr'\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                    c: _classNameResizeObserverItemFinalElement,\n                    style: 'width: 200%; height: 200%'\n                  })))));\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                  var widthCache = observerElement[LEXICON.oW];\n                  var heightCache = observerElement[LEXICON.oH];\n                  var isDirty;\n                  var rAFId;\n                  var currWidth;\n                  var currHeight;\n                  var factor = 2;\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                  var reset = function reset() {\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  };\n\n                  var onResized = function onResized() {\n                    rAFId = 0;\n                    if (!isDirty) return;\n                    widthCache = currWidth;\n                    heightCache = currHeight;\n                    callback();\n                  };\n\n                  var onScroll = function onScroll(event) {\n                    currWidth = observerElement[LEXICON.oW];\n                    currHeight = observerElement[LEXICON.oH];\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                    if (event && isDirty && !rAFId) {\n                      COMPATIBILITY.cAF()(rAFId);\n                      rAFId = COMPATIBILITY.rAF()(onResized);\n                    } else if (!event) onResized();\n\n                    reset();\n\n                    if (event) {\n                      COMPATIBILITY.prvD(event);\n                      COMPATIBILITY.stpP(event);\n                    }\n\n                    return false;\n                  };\n\n                  var expandChildCSS = {};\n                  var observerElementCSS = {};\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                  FRAMEWORK(observerElement).css(observerElementCSS);\n                  expandElement.on(_strScroll, onScroll);\n                  shrinkElement.on(_strScroll, onScroll);\n                  targetElement.on(strAnimationStartEvent, function () {\n                    onScroll(false);\n                  }); //lets assume that the divs will never be that large and a constant value is enough\n\n                  expandChildCSS[_strWidth] = constScroll;\n                  expandChildCSS[_strHeight] = constScroll;\n                  expandElementChild.css(expandChildCSS);\n                  reset();\n                } else {\n                  var attachEvent = _documentElementNative.attachEvent;\n                  var isIE = _msieVersion !== undefined$1;\n\n                  if (attachEvent) {\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                  } else {\n                    var obj = _documentElementNative.createElement(TYPES.o);\n\n                    obj.setAttribute(LEXICON.ti, '-1');\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                    obj.onload = function () {\n                      var wnd = this.contentDocument.defaultView;\n                      wnd.addEventListener('resize', callback);\n                      wnd.document.documentElement.style.display = 'none';\n                    };\n\n                    obj.type = 'text/html';\n                    if (isIE) targetElement.prepend(obj);\n                    obj.data = 'about:blank';\n                    if (!isIE) targetElement.prepend(obj);\n                    targetElement.on(strAnimationStartEvent, callback);\n                  }\n                }\n              }\n\n              if (targetElement[0] === _sizeObserverElementNative) {\n                var directionChanged = function directionChanged() {\n                  var dir = _hostElement.css('direction');\n\n                  var css = {};\n                  var scrollLeftValue = 0;\n                  var result = false;\n\n                  if (dir !== _cssDirectionDetectedCache) {\n                    if (dir === 'ltr') {\n                      css[_strLeft] = 0;\n                      css[_strRight] = _strAuto;\n                      scrollLeftValue = constScroll;\n                    } else {\n                      css[_strLeft] = _strAuto;\n                      css[_strRight] = 0;\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                    } //execution order is important for IE!!!\n\n\n                    _sizeObserverElement.children().eq(0).css(css);\n\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                    _cssDirectionDetectedCache = dir;\n                    result = true;\n                  }\n\n                  return result;\n                };\n\n                directionChanged();\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\n                  if (directionChanged()) update();\n                  COMPATIBILITY.prvD(event);\n                  COMPATIBILITY.stpP(event);\n                  return false;\n                });\n              }\n            } //remove resize observer:\n            else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n          }\n        }\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\n        //==== Mutation Observers ====//\n\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\n\n\n        function createMutationObservers() {\n          if (_supportMutationObserver) {\n            var mutationObserverContentLag = 11;\n            var mutationObserver = COMPATIBILITY.mO();\n            var contentLastUpdate = COMPATIBILITY.now();\n            var mutationTarget;\n            var mutationAttrName;\n            var mutationIsClass;\n            var oldMutationVal;\n            var newClassVal;\n            var hostClassNameRegex;\n            var contentTimeout;\n            var now;\n            var sizeAuto;\n            var action;\n\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n              var doUpdate = false;\n              var doUpdateForce = false;\n              var mutation;\n              var mutatedAttrs = [];\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  mutationTarget = mutation.target;\n                  mutationAttrName = mutation.attributeName;\n                  mutationIsClass = mutationAttrName === LEXICON.c;\n                  oldMutationVal = mutation.oldValue;\n                  newClassVal = mutationTarget.className;\n\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                      hostClassNameRegex = createHostClassNameRegExp(true);\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                        return name.match(hostClassNameRegex);\n                      })).join(_strSpace);\n                      doUpdate = doUpdateForce = true;\n                    }\n                  }\n\n                  if (!doUpdate) {\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                  }\n\n                  mutatedAttrs.push(mutationAttrName);\n                });\n                updateViewportAttrsFromTarget(mutatedAttrs);\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n              var doUpdate = false;\n              var mutation;\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  doUpdate = isUnknownMutation(mutation);\n                  return !doUpdate;\n                });\n\n                if (doUpdate) {\n                  now = COMPATIBILITY.now();\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                  action = function action() {\n                    if (!_destroyed) {\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                      if (_isTextarea) textareaUpdate();\n                      if (sizeAuto) update();else _base.update(_strAuto);\n                    }\n                  };\n\n                  clearTimeout(contentTimeout);\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n                }\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n          }\n        }\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\n\n\n        function connectMutationObservers() {\n          if (_supportMutationObserver && !_mutationObserversConnected) {\n            _mutationObserverHost.observe(_hostElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              attributeFilter: _mutationObserverAttrsHost\n            });\n\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              subtree: !_isTextarea,\n              childList: !_isTextarea,\n              characterData: !_isTextarea,\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n            });\n\n            _mutationObserversConnected = true;\n          }\n        }\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\n\n\n        function disconnectMutationObservers() {\n          if (_supportMutationObserver && _mutationObserversConnected) {\n            _mutationObserverHost.disconnect();\n\n            _mutationObserverContent.disconnect();\n\n            _mutationObserversConnected = false;\n          }\n        } //==== Events of elements ====//\n\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\n\n\n        function hostOnResized() {\n          if (!_sleeping) {\n            var changed;\n            var hostSize = {\n              w: _sizeObserverElementNative[LEXICON.sW],\n              h: _sizeObserverElementNative[LEXICON.sH]\n            };\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n            _hostElementSizeChangeDetectedCache = hostSize;\n            if (changed) update({\n              _hostSizeChanged: true\n            });\n          }\n        }\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseEnter() {\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n        }\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseLeave() {\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n        }\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\n\n\n        function hostOnMouseMove() {\n          if (_scrollbarsAutoHideMove) {\n            refreshScrollbarsAutoHide(true);\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n            }, 100);\n          }\n        }\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\n\n\n        function documentOnSelectStart(event) {\n          COMPATIBILITY.prvD(event);\n          return false;\n        }\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\n\n\n        function updateOnLoadCallback(event) {\n          var elm = FRAMEWORK(event.target);\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\n\n\n        function setupHostMouseTouchEvents(destroy) {\n          if (!destroy) setupHostMouseTouchEvents(true);\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n        } //==== Update Detection ====//\n\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\n\n\n        function bodyMinSizeChanged() {\n          var bodyMinSize = {};\n\n          if (_isBody && _contentArrangeElement) {\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n            bodyMinSize.f = true; //flag for \"measured at least once\"\n          }\n\n          _bodyMinSizeCache = bodyMinSize;\n          return !!bodyMinSize.c;\n        }\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\n\n\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n          var idx = inArray(_classNameThemeNone, diff);\n          var i;\n          var regex;\n          if (idx > -1) diff.splice(idx, 1);\n\n          if (diff[LEXICON.l] > 0) {\n            regex = createHostClassNameRegExp(true, true);\n\n            for (i = 0; i < diff.length; i++) {\n              if (!diff[i].match(regex)) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        }\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\n\n\n        function isUnknownMutation(mutation) {\n          var attributeName = mutation.attributeName;\n          var mutationTarget = mutation.target;\n          var mutationType = mutation.type;\n          var strClosest = 'closest';\n          if (mutationTarget === _contentElementNative) return attributeName === null;\n\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n            //ignore className changes by the plugin\t\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n          }\n\n          return true;\n        }\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\n\n\n        function updateAutoContentSizeChanged() {\n          if (_sleeping) return false;\n          var contentMeasureElement = getContentMeasureElement();\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n          var css = {};\n          var float;\n          var bodyMinSizeC;\n          var changed;\n          var contentElementScrollSize;\n\n          if (setCSS) {\n            float = _contentElement.css(_strFloat);\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\n            css[_strWidth] = _strAuto;\n\n            _contentElement.css(css);\n          }\n\n          contentElementScrollSize = {\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n          };\n\n          if (setCSS) {\n            css[_strFloat] = float;\n            css[_strWidth] = _strHundredPercent;\n\n            _contentElement.css(css);\n          }\n\n          bodyMinSizeC = bodyMinSizeChanged();\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n          return changed || bodyMinSizeC;\n        }\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\n\n\n        function meaningfulAttrsChanged() {\n          if (_sleeping || _mutationObserversConnected) return;\n          var elem;\n          var curr;\n          var cache;\n          var changedAttrs = [];\n          var checks = [{\n            _elem: _hostElement,\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\n          }, {\n            _elem: _isTextarea ? _targetElement : undefined$1,\n            _attrs: _mutationObserverAttrsTextarea\n          }];\n          each(checks, function (index, check) {\n            elem = check._elem;\n\n            if (elem) {\n              each(check._attrs, function (index, attr) {\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n                cache = _updateAutoCache[attr];\n\n                if (checkCache(curr, cache)) {\n                  changedAttrs.push(attr);\n                }\n\n                _updateAutoCache[attr] = curr;\n              });\n            }\n          });\n          updateViewportAttrsFromTarget(changedAttrs);\n          return changedAttrs[LEXICON.l] > 0;\n        }\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\n\n\n        function isSizeAffectingCSSProperty(propertyName) {\n          if (!_initialized) return true;\n          var flexGrow = 'flex-grow';\n          var flexShrink = 'flex-shrink';\n          var flexBasis = 'flex-basis';\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n          var _strS = 's';\n          var _strVS = 'v-s';\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n          var sizeIsAffected = false;\n\n          var checkPropertyName = function checkPropertyName(arr, name) {\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\n              if (arr[i] === name) return true;\n            }\n\n            return false;\n          };\n\n          if (checkY) {\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n          }\n\n          if (checkX && !sizeIsAffected) {\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n          }\n\n          return sizeIsAffected;\n        } //==== Update ====//\n\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\n\n\n        function updateViewportAttrsFromTarget(attrs) {\n          attrs = attrs || _viewportAttrsFromTarget;\n          each(attrs, function (index, attr) {\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n              var targetAttr = _targetElement.attr(attr);\n\n              if (type(targetAttr) == TYPES.s) {\n                _viewportElement.attr(attr, targetAttr);\n              } else {\n                _viewportElement.removeAttr(attr);\n              }\n            }\n          });\n        }\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\n\n\n        function textareaUpdate() {\n          if (!_sleeping) {\n            var wrapAttrOff = !_textareaAutoWrappingCache;\n            var minWidth = _viewportSize.w;\n            var minHeight = _viewportSize.h;\n            var css = {};\n            var doMeasure = _widthAutoCache || wrapAttrOff;\n            var origWidth;\n            var width;\n            var origHeight;\n            var height; //reset min size\n\n            css[_strMinMinus + _strWidth] = _strEmpty;\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n            css[_strWidth] = _strAuto;\n\n            _targetElement.css(css); //measure width\n\n\n            origWidth = _targetElementNative[LEXICON.oW];\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n            //set measured width\n\n            css[_strWidth] = _widthAutoCache ? _strAuto\n            /*width*/\n            : _strHundredPercent;\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n            css[_strHeight] = _strAuto;\n\n            _targetElement.css(css); //measure height\n\n\n            origHeight = _targetElementNative[LEXICON.oH];\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n            css[_strWidth] = width;\n            css[_strHeight] = height;\n\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n            css[_strMinMinus + _strWidth] = minWidth\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n            ;\n            css[_strMinMinus + _strHeight] = minHeight\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n            ;\n\n            _targetElement.css(css);\n\n            return {\n              _originalWidth: origWidth,\n              _originalHeight: origHeight,\n              _dynamicWidth: width,\n              _dynamicHeight: height\n            };\n          }\n        }\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\n\n\n        function update(updateHints) {\n          clearTimeout(_swallowedUpdateTimeout);\n          updateHints = updateHints || {};\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n          _swallowedUpdateHints._force |= updateHints._force;\n          var now = COMPATIBILITY.now();\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n          var force = !!_swallowedUpdateHints._force;\n          var changedOptions = updateHints._changedOptions;\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n          var displayIsHidden;\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n          //destroyed\n          //swallowing\n          //sleeping\n          //host is hidden or has false display\n\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n          _lastUpdateTime = now;\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n            //native scrollbars are hidden, so change the values to zero\n            _nativeScrollbarSize.x = 0;\n            _nativeScrollbarSize.y = 0;\n          } else {\n            //refresh native scrollbar size (in case of zoom)\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n          // The calculation: [scrollbar size +3 *3]\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n          _nativeScrollbarMinSize = {\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n          };\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n          var checkCacheAutoForce = function checkCacheAutoForce() {\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n          }; //save current scroll offset\n\n\n          var currScroll = {\n            x: _viewportElement[_strScrollLeft](),\n            y: _viewportElement[_strScrollTop]()\n          };\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n          var className = _currentPreparedOptions.className;\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n          var resize = _currentPreparedOptions.resize;\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n          //paddingAbsolute\n\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n          var clipAlways = _currentPreparedOptions.clipAlways;\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n          _oldClassName = _classNameCache; //resize\n\n          _resizeNone = resize === 'n';\n          _resizeBoth = resize === 'b';\n          _resizeHorizontal = resize === 'h';\n          _resizeVertical = resize === 'v'; //normalizeRTL\n\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n          _classNameCache = className;\n          _resizeCache = resize;\n          _paddingAbsoluteCache = paddingAbsolute;\n          _clipAlwaysCache = clipAlways;\n          _sizeAutoCapableCache = sizeAutoCapable;\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n          _autoUpdateCache = autoUpdate;\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n          _textareaDynWidthCache = textareaDynWidth;\n          _textareaDynHeightCache = textareaDynHeight;\n          _hasOverflowCache = _hasOverflowCache || {\n            x: false,\n            y: false\n          }; //set correct class name to the host element\n\n          if (classNameChanged) {\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\n          } //set correct auto Update\n\n\n          if (autoUpdateChanged) {\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n              disconnectMutationObservers();\n              autoUpdateLoop.add(_base);\n            } else {\n              autoUpdateLoop.remove(_base);\n              connectMutationObservers();\n            }\n          } //activate or deactivate size auto capability\n\n\n          if (sizeAutoCapableChanged) {\n            if (sizeAutoCapable) {\n              if (_contentGlueElement) {\n                _contentGlueElement.show();\n              } else {\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n                _paddingElement.before(_contentGlueElement);\n              }\n\n              if (_sizeAutoObserverAdded) {\n                _sizeAutoObserverElement.show();\n              } else {\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n                _contentGlueElement.before(_sizeAutoObserverElement);\n\n                var oldSize = {\n                  w: -1,\n                  h: -1\n                };\n                setupResizeObserver(_sizeAutoObserverElement, function () {\n                  var newSize = {\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\n                  };\n\n                  if (checkCache(newSize, oldSize)) {\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                      update();\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                      update();\n                    }\n                  }\n\n                  oldSize = newSize;\n                });\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n              }\n            } else {\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n              if (_contentGlueElement) _contentGlueElement.hide();\n            }\n          } //if force, update all resizeObservers too\n\n\n          if (force) {\n            _sizeObserverElement.find('*').trigger(_strScroll);\n\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n          } //display hidden:\n\n\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n          var cssDirection = _hostElement.css('direction');\n\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n          var boxSizing = _hostElement.css('box-sizing');\n\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n          try {\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n          } catch (ex) {\n            return;\n          }\n\n          _isRTL = cssDirection === 'rtl';\n          _isBorderBox = boxSizing === 'border-box';\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n          var widthAutoResizeDetection = false;\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n          /*|| _isTextarea */\n          ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n            _contentGlueElement.css(_strWidth, _strAuto);\n\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n            if (!widthAutoResizeDetection) {\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            }\n          }\n\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n          : false;\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n          //we need the border only if border box and auto size\n\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n          var contentElementCSS = {};\n          var contentGlueElementCSS = {}; //funcs\n\n          var getHostSize = function getHostSize() {\n            //has to be clientSize because offsetSize respect borders\n            return {\n              w: _hostElementNative[LEXICON.cW],\n              h: _hostElementNative[LEXICON.cH]\n            };\n          };\n\n          var getViewportSize = function getViewportSize() {\n            //viewport size is padding container because it never has padding, margin and a border\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n            //if this happens add the difference to the viewportSize to compensate the rounding error\n            return {\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n            };\n          }; //set info for padding\n\n\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n          _borderX = border.l + border.r;\n          _borderY = border.t + border.b;\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n          _marginX = margin.l + margin.r;\n          _marginY = margin.t + margin.b;\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n          _textareaAutoWrappingCache = textareaAutoWrapping;\n          _cssDirectionCache = cssDirection;\n          _cssBoxSizingCache = boxSizing;\n          _widthAutoCache = widthAuto;\n          _heightAutoCache = heightAuto;\n          _cssPaddingCache = padding;\n          _cssBorderCache = border;\n          _cssMarginCache = margin; //IEFix direction changed\n\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n            var paddingElementCSS = {};\n            var textareaCSS = {};\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n            if (paddingAbsolute) {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n            } else {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _targetElement.css(textareaCSS);\n          } //viewport size is padding container because it never has padding, margin and a border.\n\n\n          _viewportSize = getViewportSize(); //update Textarea\n\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n          } : {};\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n            contentElementCSS[_strHeight] = _strAuto;\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strHeight] = _strHundredPercent;\n          }\n\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n            contentElementCSS[_strWidth] = _strAuto;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strWidth] = _strHundredPercent;\n            contentElementCSS[_strFloat] = _strEmpty;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n          }\n\n          if (widthAuto) {\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n            contentGlueElementCSS[_strWidth] = _strAuto;\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n            contentElementCSS[_strFloat] = isRTLRight;\n          } else {\n            contentGlueElementCSS[_strWidth] = _strEmpty;\n          }\n\n          if (heightAuto) {\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n          } else {\n            contentGlueElementCSS[_strHeight] = _strEmpty;\n          }\n\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n          contentElementCSS = {};\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n            var strOverflow = 'overflow';\n            var strOverflowX = strOverflow + '-x';\n            var strOverflowY = strOverflow + '-y';\n            var strHidden = 'hidden';\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n            if (!_nativeScrollbarStyling) {\n              var viewportElementResetCSS = {};\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n              _viewportElement.css(viewportElementResetCSS);\n            } //measure several sizes:\n\n\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n            var contentSize = {\n              //use clientSize because natively overlaidScrollbars add borders\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n            };\n            var scrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            }; //apply the correct viewport style and measure viewport size\n\n            if (!_nativeScrollbarStyling) {\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n              _viewportElement.css(viewportElementResetCSS);\n            }\n\n            _viewportSize = getViewportSize(); //measure and correct several sizes\n\n            var hostSize = getHostSize();\n            var hostAbsoluteRectSize = {\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n            };\n            var contentGlueSize = {\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n            };\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n            if (sizeAutoCapable) {\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n              if (contentGlueSize.c || heightAuto || widthAuto) {\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n                if (!_isTextarea) {\n                  contentSize = {\n                    //use clientSize because natively overlaidScrollbars add borders\n                    w: contentMeasureElement[LEXICON.cW],\n                    h: contentMeasureElement[LEXICON.cH]\n                  };\n                }\n              }\n\n              var textareaCoverCSS = {};\n\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var wh = scrollbarVars._w_h;\n                var strWH = scrollbarVars._width_height;\n                var autoSize = horizontal ? widthAuto : heightAuto;\n                var borderSize = horizontal ? _borderX : _borderY;\n                var paddingSize = horizontal ? _paddingX : _paddingY;\n                var marginSize = horizontal ? _marginX : _marginY;\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                  contentGlueElementCSS[strWH] -= 1;\n                } //make sure content glue size is at least 1\n\n\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n              };\n\n              setContentGlueElementCSSfunction(true);\n              setContentGlueElementCSSfunction(false);\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n              _contentGlueElement.css(contentGlueElementCSS);\n            }\n\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n            _contentElement.css(contentElementCSS);\n\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n            var contentScrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            };\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n            _viewportSize = getViewportSize();\n            hostSize = getHostSize();\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n            _hostSizeCache = hostSize;\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n            var previousOverflowAmount = _overflowAmountCache;\n            var overflowBehaviorIsVS = {};\n            var overflowBehaviorIsVH = {};\n            var overflowBehaviorIsS = {};\n            var overflowAmount = {};\n            var hasOverflow = {};\n            var hideOverflow = {};\n            var canScroll = {};\n\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xyI = scrollbarVarsInverted._x_y;\n              var xy = scrollbarVars._x_y;\n              var wh = scrollbarVars._w_h;\n              var widthHeight = scrollbarVars._width_height;\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n            };\n\n            setOverflowVariables(true);\n            setOverflowVariables(false);\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n            _overflowAmountCache = overflowAmount;\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n            _hasOverflowCache = hasOverflow;\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n              var borderDesign = 'px solid transparent';\n              var contentArrangeElementCSS = {};\n              var arrangeContent = {};\n              var arrangeChanged = force;\n              var setContentElementCSS;\n\n              if (hasOverflow.x || hasOverflow.y) {\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                _arrangeContentSizeCache = arrangeContent;\n              }\n\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n                setContentElementCSS = function setContentElementCSS(horizontal) {\n                  var scrollbarVars = getScrollbarVars(horizontal);\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                  var xy = scrollbarVars._x_y;\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                  } else {\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                    arrangeChanged = true;\n                  }\n                };\n\n                if (_nativeScrollbarStyling) {\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n                } else {\n                  setContentElementCSS(true);\n                  setContentElementCSS(false);\n                }\n              }\n\n              if (ignoreOverlayScrollbarHiding) {\n                arrangeContent.w = arrangeContent.h = _strEmpty;\n                arrangeChanged = true;\n              }\n\n              if (arrangeChanged && !_nativeScrollbarStyling) {\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n                if (!_contentArrangeElement) {\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                  _viewportElement.prepend(_contentArrangeElement);\n                }\n\n                _contentArrangeElement.css(contentArrangeElementCSS);\n              }\n\n              _contentElement.css(contentElementCSS);\n            }\n\n            var viewportElementCSS = {};\n            var paddingElementCSS = {};\n            var setViewportCSS;\n\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n              viewportElementCSS[isRTLRight] = _strEmpty;\n\n              setViewportCSS = function setViewportCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var XY = scrollbarVars._X_Y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n                var reset = function reset() {\n                  viewportElementCSS[strDirection] = _strEmpty;\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                };\n\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                    reset();\n                  } else {\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                  }\n                } else {\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\n                  reset();\n                }\n              };\n\n              setViewportCSS(true);\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n              // make viewport element greater in size (Firefox hide Scrollbars fix)\n              // because firefox starts hiding scrollbars on too small elements\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n              } else {\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n              }\n\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n                //only hide if is Textarea\n                if (_isTextarea && hideOverflowForceTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n                }\n              } else {\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                  //only un-hide if Textarea\n                  if (_isTextarea) {\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                  }\n\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n                }\n              }\n\n              _paddingElement.css(paddingElementCSS);\n\n              _viewportElement.css(viewportElementCSS);\n\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                var elementStyle = _contentElementNative[LEXICON.s];\n                elementStyle.webkitTransform = 'scale(1)';\n                elementStyle.display = 'run-in';\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n                elementStyle.webkitTransform = _strEmpty;\n              }\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\n\n            } //change to direction RTL and width auto Bugfix in Webkit\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n            contentElementCSS = {};\n\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n              if (_isRTL && widthAuto) {\n                var floatTmp = _contentElement.css(_strFloat);\n\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n                _contentElement.css(_strFloat, floatTmp);\n\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n              } else {\n                contentElementCSS[_strLeft] = _strEmpty;\n              }\n            }\n\n            _contentElement.css(contentElementCSS); //handle scroll position\n\n\n            if (_isTextarea && contentSizeChanged) {\n              var textareaInfo = getTextareaInfo();\n\n              if (textareaInfo) {\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                var cursorRow = textareaInfo._cursorRow;\n                var cursorCol = textareaInfo._cursorColumn;\n                var widestRow = textareaInfo._widestRow;\n                var lastRow = textareaInfo._rows;\n                var lastCol = textareaInfo._columns;\n                var cursorPos = textareaInfo._cursorPosition;\n                var cursorMax = textareaInfo._cursorMax;\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n                var textareaScrollAmount = {\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                };\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n              }\n\n              _textareaInfoCache = textareaInfo;\n            }\n\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n            if (widthAuto) _hostElement[_strScrollLeft](0);\n            if (heightAuto) _hostElement[_strScrollTop](0);\n\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n              showY = showY === undefined$1 ? showX : showY;\n              refreshScrollbarAppearance(true, showX, canScroll.x);\n              refreshScrollbarAppearance(false, showY, canScroll.y);\n            }; //manage class name which indicates scrollable overflow\n\n\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n            if (cssDirectionChanged && !_isBody) {\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n            if (resizeChanged) {\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n              if (ignoreOverlayScrollbarHiding) {\n                if (ignoreOverlayScrollbarHidingChanged) {\n                  removeClass(_hostElement, _classNameHostScrolling);\n\n                  if (ignoreOverlayScrollbarHiding) {\n                    refreshScrollbarsVisibility(false);\n                  }\n                }\n              } else if (scrollbarsVisibilityAuto) {\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n              } else if (scrollbarsVisibilityVisible) {\n                refreshScrollbarsVisibility(true);\n              } else if (scrollbarsVisibilityHidden) {\n                refreshScrollbarsVisibility(false);\n              }\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n            } //manage scrollbars handle length & offset - don't remove!\n\n\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n              refreshScrollbarHandleLength(true);\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleLength(false);\n              refreshScrollbarHandleOffset(false);\n            } //manage interactivity\n\n\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n            dispatchCallback('onDirectionChanged', {\n              isRTL: _isRTL,\n              dir: cssDirection\n            }, cssDirectionChanged);\n            dispatchCallback('onHostSizeChanged', {\n              width: _hostSizeCache.w,\n              height: _hostSizeCache.h\n            }, hostSizeChanged);\n            dispatchCallback('onContentSizeChanged', {\n              width: _contentScrollSizeCache.w,\n              height: _contentScrollSizeCache.h\n            }, contentSizeChanged);\n            dispatchCallback('onOverflowChanged', {\n              x: hasOverflow.x,\n              y: hasOverflow.y,\n              xScrollable: hideOverflow.xs,\n              yScrollable: hideOverflow.ys,\n              clipped: hideOverflow.x || hideOverflow.y\n            }, hasOverflow.c || hideOverflow.c);\n            dispatchCallback('onOverflowAmountChanged', {\n              x: overflowAmount.x,\n              y: overflowAmount.y\n            }, overflowAmount.c);\n          } //fix body min size\n\n\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n            _bodyMinSizeCache.c = false;\n          }\n\n          if (_initialized && changedOptions.updateOnLoad) {\n            updateElementsOnLoad();\n          } //freezeResizeObserver(_sizeObserverElement, false);\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n          dispatchCallback('onUpdated', {\n            forced: force\n          });\n        }\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\n\n\n        function updateElementsOnLoad() {\n          if (!_isTextarea) {\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n                // if element doesn't have a updateOnLoadCallback applied\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                  _updateOnLoadElms.push(el);\n\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n                }\n              });\n            });\n          }\n        } //==== Options ====//\n\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\n\n\n        function setOptions(newOptions) {\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n          return validatedOpts._prepared;\n        } //==== Structure ====//\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupStructureDOM(destroy) {\n          var strParent = 'parent';\n          var classNameResizeObserverHost = 'os-resize-observer-host';\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n          var adoptAttrsMap = {};\n\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n            each(adoptAttrsMap, function (key, value) {\n              if (type(value) == TYPES.s) {\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n              }\n            });\n          };\n\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n          //to prevent adopting generated class names\n\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n            each(adoptAttrs, function (i, v) {\n              if (type(v) == TYPES.s) {\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n              }\n            });\n          }\n\n          if (!destroy) {\n            if (_isTextarea) {\n              if (!_currentPreparedOptions.sizeAutoCapable) {\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n              }\n\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\n            }\n\n            if (!_domExists) {\n              //add the correct class to the target element\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n              if (_isTextarea) {\n                _contentElement.prepend(_textareaCoverElement);\n\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n            _sizeObserverElementNative = _sizeObserverElement[0];\n            _hostElementNative = _hostElement[0];\n            _paddingElementNative = _paddingElement[0];\n            _viewportElementNative = _viewportElement[0];\n            _contentElementNative = _contentElement[0];\n            updateViewportAttrsFromTarget();\n          } else {\n            if (_domExists && _initialized) {\n              //clear size observer\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n                if (elm) {\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n                }\n              }); //add classes to the host element which was removed previously to match the expected DOM\n\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n            } else {\n              //remove size observer\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n              _contentElement.contents().unwrap().unwrap().unwrap();\n\n              if (_isTextarea) {\n                _targetElement.unwrap();\n\n                remove(_hostElement);\n                remove(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n          }\n        }\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\n\n\n        function setupStructureEvents() {\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n          33, 34, //page up, page down\n          37, 38, 39, 40, //left, up, right, down arrows\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n          ];\n          var textareaKeyDownKeyCodesList = [];\n          var textareaUpdateIntervalID;\n          var scrollStopTimeoutId;\n          var scrollStopDelay = 175;\n          var strFocus = 'focus';\n\n          function updateTextarea(doClearInterval) {\n            textareaUpdate();\n\n            _base.update(_strAuto);\n\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n          }\n\n          function textareaOnScroll(event) {\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n            _targetElement[_strScrollTop](0);\n\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n            return false;\n          }\n\n          function textareaOnDrop(event) {\n            setTimeout(function () {\n              if (!_destroyed) updateTextarea();\n            }, 50);\n          }\n\n          function textareaOnFocus() {\n            _textareaHasFocus = true;\n            addClass(_hostElement, strFocus);\n          }\n\n          function textareaOnFocusout() {\n            _textareaHasFocus = false;\n            textareaKeyDownKeyCodesList = [];\n            removeClass(_hostElement, strFocus);\n            updateTextarea(true);\n          }\n\n          function textareaOnKeyDown(event) {\n            var keyCode = event.keyCode;\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n                updateTextarea();\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n              }\n\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n            }\n          }\n\n          function textareaOnKeyUp(event) {\n            var keyCode = event.keyCode;\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n            }\n          }\n\n          function contentOnTransitionEnd(event) {\n            if (_autoUpdateCache === true) return;\n            event = event.originalEvent || event;\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n          }\n\n          function viewportOnScroll(event) {\n            if (!_sleeping) {\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStart', event);\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n              if (!_scrollbarsHandlesDefineScrollPos) {\n                refreshScrollbarHandleOffset(true);\n                refreshScrollbarHandleOffset(false);\n              }\n\n              dispatchCallback('onScroll', event);\n              scrollStopTimeoutId = setTimeout(function () {\n                if (!_destroyed) {\n                  //OnScrollStop:\n                  clearTimeout(scrollStopTimeoutId);\n                  scrollStopTimeoutId = undefined$1;\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                  dispatchCallback('onScrollStop', event);\n                }\n              }, scrollStopDelay);\n            }\n          }\n\n          if (_isTextarea) {\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\n            } else {\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n            }\n\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n          } else {\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n          }\n\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n        } //==== Scrollbars ====//\n\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarsDOM(destroy) {\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n            if (!_domExists && !destroy) {\n              scrollbar.append(track);\n              track.append(handle);\n            }\n\n            return {\n              _scrollbar: scrollbar,\n              _track: track,\n              _handle: handle\n            };\n          };\n\n          function resetScrollbarDOM(isHorizontal) {\n            var scrollbarVars = getScrollbarVars(isHorizontal);\n            var scrollbar = scrollbarVars._scrollbar;\n            var track = scrollbarVars._track;\n            var handle = scrollbarVars._handle;\n\n            if (_domExists && _initialized) {\n              each([scrollbar, track, handle], function (i, elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              });\n            } else {\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n            }\n          }\n\n          var horizontalElements;\n          var verticalElements;\n\n          if (!destroy) {\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\n            verticalElements = selectOrGenerateScrollbarDOM();\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\n            _scrollbarVerticalElement = verticalElements._scrollbar;\n            _scrollbarVerticalTrackElement = verticalElements._track;\n            _scrollbarVerticalHandleElement = verticalElements._handle;\n\n            if (!_domExists) {\n              _paddingElement.after(_scrollbarVerticalElement);\n\n              _paddingElement.after(_scrollbarHorizontalElement);\n            }\n          } else {\n            resetScrollbarDOM(true);\n            resetScrollbarDOM();\n          }\n        }\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\n\n\n        function setupScrollbarEvents(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var xy = scrollbarVars._x_y;\n          var XY = scrollbarVars._X_Y;\n          var scroll = _strScroll + scrollbarVars._Left_Top;\n          var strActive = 'active';\n          var strSnapHandle = 'snapHandle';\n          var strClickEvent = 'click';\n          var scrollDurationFactor = 1;\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n          var trackTimeout;\n          var mouseDownScroll;\n          var mouseDownOffset;\n          var mouseDownInvertedScale;\n\n          function getPointerPosition(event) {\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n          }\n\n          function getPreparedScrollbarsOption(name) {\n            return _currentPreparedOptions.scrollbars[name];\n          }\n\n          function increaseTrackScrollAmount() {\n            scrollDurationFactor = 0.5;\n          }\n\n          function decreaseTrackScrollAmount() {\n            scrollDurationFactor = 1;\n          }\n\n          function stopClickEventPropagation(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          function documentKeyDown(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n          }\n\n          function documentKeyUp(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var trackLength = scrollbarVarsInfo._trackLength;\n              var handleLength = scrollbarVarsInfo._handleLength;\n              var scrollRange = scrollbarVarsInfo._maxScroll;\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n              var scrollDelta = scrollRange * scrollDeltaPercent;\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n            } else documentMouseTouchUp(event);\n          }\n\n          function documentMouseTouchUp(event) {\n            event = event || event.originalEvent;\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n                _capture: true\n              });\n            });\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n            _scrollbarsHandlesDefineScrollPos = false;\n            removeClass(_bodyElement, _classNameDragging);\n            removeClass(scrollbarVars._handle, strActive);\n            removeClass(scrollbarVars._track, strActive);\n            removeClass(scrollbarVars._scrollbar, strActive);\n            mouseDownScroll = undefined$1;\n            mouseDownOffset = undefined$1;\n            mouseDownInvertedScale = 1;\n            decreaseTrackScrollAmount();\n\n            if (trackTimeout !== undefined$1) {\n              _base.scrollStop();\n\n              clearTimeout(trackTimeout);\n              trackTimeout = undefined$1;\n            }\n\n            if (event) {\n              var rect = _hostElementNative[LEXICON.bCR]();\n\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n              if (!mouseInsideHost) hostOnMouseLeave();\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n            }\n          }\n\n          function onHandleMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n          }\n\n          function onHandleMouseTouchDownAction(event) {\n            mouseDownScroll = _viewportElement[scroll]();\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = getPointerPosition(event);\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._handle, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n                _capture: true\n              });\n            });\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n\n          function onTrackMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n              var scrollBaseDuration = 270 * handleToViewportRatio;\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n              var ctrlKey = event.ctrlKey;\n              var instantScroll = event.shiftKey;\n              var instantScrollTransition = instantScroll && ctrlKey;\n              var isFirstIteration = true;\n              var easing = 'linear';\n              var decreaseScroll;\n              var finishedCondition;\n\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n              };\n\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\n                scrollActionFinsished();\n                onHandleMouseTouchDownAction(event);\n              };\n\n              var scrollAction = function scrollAction() {\n                if (!_destroyed) {\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\n                  var trackLength = scrollbarVarsInfo._trackLength;\n                  var handleLength = scrollbarVarsInfo._handleLength;\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\n                  var currScroll = scrollbarVarsInfo._currentScroll;\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                  var scrollObj = {};\n                  var animationObj = {\n                    easing: easing,\n                    step: function step(now) {\n                      if (_scrollbarsHandlesDefineScrollPos) {\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                        refreshScrollbarHandleOffset(isHorizontal, now);\n                      }\n                    }\n                  };\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                  if (instantScroll) {\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                    if (instantScrollTransition) {\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                      //and the animation stops at the correct point\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                      _viewportElement[scroll](currScroll);\n\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                      scrollObj[xy] = instantScrollPosition;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: 130,\n                        complete: scrollActionInstantFinished\n                      }));\n                    } else scrollActionInstantFinished();\n                  } else {\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                    if (finishedCondition) {\n                      clearTimeout(trackTimeout);\n\n                      _base.scrollStop();\n\n                      trackTimeout = undefined$1;\n                      scrollActionFinsished(true);\n                    } else {\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: scrollDuration\n                      }));\n                    }\n\n                    isFirstIteration = false;\n                  }\n                }\n              };\n\n              if (ctrlKey) increaseTrackScrollAmount();\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n              addClass(_bodyElement, _classNameDragging);\n              addClass(scrollbarVars._track, strActive);\n              addClass(scrollbarVars._scrollbar, strActive);\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n              scrollAction();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          }\n\n          function onTrackMouseTouchEnter(event) {\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n            _scrollbarsHandleHovered = true;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n          }\n\n          function onTrackMouseTouchLeave(event) {\n            _scrollbarsHandleHovered = false;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n\n          function onScrollbarMouseTouchDown(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n          if (_supportTransition) {\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\n              refreshScrollbarHandleLength(isHorizontal);\n              refreshScrollbarHandleOffset(isHorizontal);\n            });\n          }\n        }\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\n\n\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n        }\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\n\n\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n          if (shallBeVisible) {\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n          } else {\n            var anyActive;\n            var strActive = 'active';\n\n            var hide = function hide() {\n              if (!_scrollbarsHandleHovered && !_destroyed) {\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n              }\n            };\n\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n          }\n        }\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\n\n\n        function refreshScrollbarHandleLength(isHorizontal) {\n          var handleCSS = {};\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var digit = 1000000; //get and apply intended handle length\n\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\n        }\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\n\n\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n          var transition = type(scrollOrTransition) == TYPES.b;\n          var transitionDuration = 250;\n          var isRTLisHorizontal = _isRTL && isHorizontal;\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var strTranslateBrace = 'translate(';\n\n          var strTransform = VENDORS._cssProperty('transform');\n\n          var strTransition = VENDORS._cssProperty('transition');\n\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n          var handleLength = scrollbarVarsInfo._handleLength;\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n          var handleTrackDiff = trackLength - handleLength;\n          var handleCSS = {};\n          var transformOffset;\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n          // because its a bit behind during the small delay when content size updates\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n          var getScrollRatio = function getScrollRatio(base) {\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n          };\n\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\n            var offset = handleTrackDiff * scrollRatio;\n            offset = isNaN(offset) ? 0 : offset;\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n            offset = MATH.max(0, offset);\n            return offset;\n          };\n\n          var scrollRatio = getScrollRatio(nativeScroll);\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\n          scrollbarVarsInfo._maxScroll = maxScroll;\n          scrollbarVarsInfo._currentScroll = nativeScroll;\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n          if (_supportTransform) {\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n          if (!nativeOverlayScrollbarsAreActive()) {\n            scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n            if (_supportTransform && _supportTransition && transition) {\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n              });\n            }\n          }\n\n          scrollbarVarsInfo._handleOffset = handleOffset;\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n          scrollbarVarsInfo._trackLength = trackLength;\n        }\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\n\n\n        function refreshScrollbarsInteractive(isTrack, value) {\n          var action = value ? 'removeClass' : 'addClass';\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n          element1[action](className);\n          element2[action](className);\n        }\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\n\n\n        function getScrollbarVars(isHorizontal) {\n          return {\n            _width_height: isHorizontal ? _strWidth : _strHeight,\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\n            _left_top: isHorizontal ? _strLeft : _strTop,\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\n            _x_y: isHorizontal ? _strX : _strY,\n            _X_Y: isHorizontal ? 'X' : 'Y',\n            _w_h: isHorizontal ? 'w' : 'h',\n            _l_t: isHorizontal ? 'l' : 't',\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n          };\n        } //==== Scrollbar Corner ====//\n\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarCornerDOM(destroy) {\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n          if (!destroy) {\n            if (!_domExists) {\n              _hostElement.append(_scrollbarCornerElement);\n            }\n          } else {\n            if (_domExists && _initialized) {\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            } else {\n              remove(_scrollbarCornerElement);\n            }\n          }\n        }\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\n\n\n        function setupScrollbarCornerEvents() {\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var mouseDownPosition = {};\n          var mouseDownSize = {};\n          var mouseDownInvertedScale = {};\n          var reconnectMutationObserver;\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var pageOffset = getCoordinates(event);\n              var hostElementCSS = {};\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n              _hostElement.css(hostElementCSS);\n\n              COMPATIBILITY.stpP(event);\n            } else {\n              documentMouseTouchUp(event);\n            }\n          }\n\n          function documentMouseTouchUp(event) {\n            var eventIsTrusted = event !== undefined$1;\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n            removeClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n            if (eventIsTrusted) {\n              if (reconnectMutationObserver) connectMutationObservers();\n\n              _base.update(_strAuto);\n            }\n\n            reconnectMutationObserver = false;\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function getCoordinates(event) {\n            return _msieVersion && insideIFrame ? {\n              x: event.screenX,\n              y: event.screenY\n            } : COMPATIBILITY.page(event);\n          }\n\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\n              if (_mutationObserversConnected) {\n                reconnectMutationObserver = true;\n                disconnectMutationObservers();\n              }\n\n              mouseDownPosition = getCoordinates(event);\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n              mouseDownInvertedScale = getHostElementInvertedScale();\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n              addClass(_bodyElement, _classNameDragging);\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          });\n        } //==== Utils ====//\n\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\n\n\n        function dispatchCallback(name, args, dependent) {\n          if (dependent === false) return;\n\n          if (_initialized) {\n            var callback = _currentPreparedOptions.callbacks[name];\n            var extensionOnName = name;\n            var ext;\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n            if (type(callback) == TYPES.f) callback.call(_base, args);\n            each(_extensions, function () {\n              ext = this;\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n            });\n          } else if (!_destroyed) _callbacksInitQeueue.push({\n            n: name,\n            a: args\n          });\n        }\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\n\n\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n          prefix = prefix || _strEmpty;\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n          targetCSSObject[prefix + _strTop] = values[0];\n          targetCSSObject[prefix + _strRight] = values[1];\n          targetCSSObject[prefix + _strBottom] = values[2];\n          targetCSSObject[prefix + _strLeft] = values[3];\n        }\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\n\n\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n          suffix = suffix || _strEmpty;\n          prefix = prefix || _strEmpty;\n          return {\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n          };\n        }\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\n\n\n        function getCSSTransitionString(element) {\n          var transitionStr = VENDORS._cssProperty('transition');\n\n          var assembledValue = element.css(transitionStr);\n          if (assembledValue) return assembledValue;\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n          var regExpMain = new RegExp(regExpString);\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n          var properties = 'property duration timing-function delay'.split(' ');\n          var result = [];\n          var strResult;\n          var valueArray;\n          var i = 0;\n          var j;\n\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\n            strResult = [];\n            if (!str.match(regExpValidate)) return str;\n\n            while (str.match(regExpMain)) {\n              strResult.push(RegExp.$1);\n              str = str.replace(regExpMain, _strEmpty);\n            }\n\n            return strResult;\n          };\n\n          for (; i < properties[LEXICON.l]; i++) {\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n            }\n          }\n\n          return result.join(', ');\n        }\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\n\n\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n          var i;\n          var split;\n          var appendix;\n\n          var appendClasses = function appendClasses(classes, condition) {\n            appendix = '';\n\n            if (condition && _typeof(classes) == TYPES.s) {\n              split = classes.split(_strSpace);\n\n              for (i = 0; i < split[LEXICON.l]; i++) {\n                appendix += '|' + split[i] + '$';\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n            }\n\n            return appendix;\n          };\n\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n        }\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\n\n\n        function getHostElementInvertedScale() {\n          var rect = _paddingElementNative[LEXICON.bCR]();\n\n          return {\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n          };\n        }\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\n\n\n        function isHTMLElement(o) {\n          var strOwnerDocument = 'ownerDocument';\n          var strHTMLElement = 'HTMLElement';\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\n        }\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\n\n\n        function getArrayDifferences(a1, a2) {\n          var a = [];\n          var diff = [];\n          var i;\n          var k;\n\n          for (i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n          }\n\n          for (i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n          }\n\n          for (k in a) {\n            diff.push(k);\n          }\n\n          return diff;\n        }\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\n\n\n        function parseToZeroOrNumber(value, toFloat) {\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n          return isNaN(num) ? 0 : num;\n        }\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\n\n\n        function getTextareaInfo() {\n          //read needed values\n          var textareaCursorPosition = _targetElementNative.selectionStart;\n          if (textareaCursorPosition === undefined$1) return;\n\n          var textareaValue = _targetElement.val();\n\n          var textareaLength = textareaValue[LEXICON.l];\n          var textareaRowSplit = textareaValue.split('\\n');\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n          var widestRow = 0;\n          var textareaLastCol = 0;\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n          var rowCols;\n          var i; //get widest Row and the last column of the textarea\n\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n            rowCols = textareaRowSplit[i][LEXICON.l];\n\n            if (rowCols > textareaLastCol) {\n              widestRow = i + 1;\n              textareaLastCol = rowCols;\n            }\n          }\n\n          return {\n            _cursorRow: cursorRow,\n            //cursorRow\n            _cursorColumn: cursorCol,\n            //cursorCol\n            _rows: textareaLastRow,\n            //rows\n            _columns: textareaLastCol,\n            //cols\n            _widestRow: widestRow,\n            //wRow\n            _cursorPosition: textareaCursorPosition,\n            //pos\n            _cursorMax: textareaLength //max\n\n          };\n        }\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\n\n\n        function nativeOverlayScrollbarsAreActive() {\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n        }\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\n\n\n        function getContentMeasureElement() {\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n        }\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\n\n\n        function generateDiv(classesOrAttrs, content) {\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n            var key;\n            var attrs = _strEmpty;\n\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n              for (key in classesOrAttrs) {\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n              }\n            }\n\n            return attrs;\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n        }\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\n\n\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n        }\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\n\n\n        function getObjectPropVal(obj, path) {\n          var splits = path.split(_strDot);\n          var i = 0;\n          var val;\n\n          for (; i < splits.length; i++) {\n            if (!obj[LEXICON.hOP](splits[i])) return;\n            val = obj[splits[i]];\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\n          }\n\n          return val;\n        }\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\n\n\n        function setObjectPropVal(obj, path, val) {\n          var splits = path.split(_strDot);\n          var splitsLength = splits.length;\n          var i = 0;\n          var extendObj = {};\n          var extendObjRoot = extendObj;\n\n          for (; i < splitsLength; i++) {\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n          }\n\n          FRAMEWORK.extend(obj, extendObjRoot, true);\n        }\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\n\n\n        function eachUpdateOnLoad(action) {\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n            each(updateOnLoad, action);\n          }\n        } //==== Utils Cache ====//\n\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\n\n\n        function checkCache(current, cache, force) {\n          if (force) return force;\n\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n            for (var prop in current) {\n              if (prop !== 'c') {\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                  if (checkCache(current[prop], cache[prop])) return true;\n                } else {\n                  return true;\n                }\n              }\n            }\n          } else {\n            return current !== cache;\n          }\n\n          return false;\n        } //==== Shortcuts ====//\n\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\n\n\n        function extendDeep() {\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n        }\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\n\n\n        function addClass(el, classes) {\n          return _frameworkProto.addClass.call(el, classes);\n        }\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\n\n\n        function removeClass(el, classes) {\n          return _frameworkProto.removeClass.call(el, classes);\n        }\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\n\n\n        function addRemoveClass(el, classes, doAdd) {\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\n        }\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\n\n\n        function remove(el) {\n          return _frameworkProto.remove.call(el);\n        }\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\n\n\n        function findFirst(el, selector) {\n          return _frameworkProto.find.call(el, selector).eq(0);\n        } //==== API ====//\n\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\n\n\n        _base.sleep = function () {\n          _sleeping = true;\n        };\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\n\n\n        _base.update = function (force) {\n          if (_destroyed) return;\n          var attrsChanged;\n          var contentSizeC;\n          var isString = type(force) == TYPES.s;\n          var doUpdateAuto;\n          var mutHost;\n          var mutContent;\n\n          if (isString) {\n            if (force === _strAuto) {\n              attrsChanged = meaningfulAttrsChanged();\n              contentSizeC = updateAutoContentSizeChanged();\n              doUpdateAuto = attrsChanged || contentSizeC;\n\n              if (doUpdateAuto) {\n                update({\n                  _contentSizeChanged: contentSizeC,\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\n                });\n              }\n            } else if (force === _strSync) {\n              if (_mutationObserversConnected) {\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n              } else {\n                mutHost = _base.update(_strAuto);\n              }\n            } else if (force === 'zoom') {\n              update({\n                _hostSizeChanged: true,\n                _contentSizeChanged: true\n              });\n            }\n          } else {\n            force = _sleeping || force;\n            _sleeping = false;\n            if (!_base.update(_strSync) || force) update({\n              _force: force\n            });\n          }\n\n          updateElementsOnLoad();\n          return doUpdateAuto || mutHost || mutContent;\n        };\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\n\n\n        _base.options = function (newOptions, value) {\n          var option = {};\n          var changedOps; //return current options if newOptions are undefined or empty\n\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n            if (type(newOptions) == TYPES.s) {\n              if (arguments.length > 1) {\n                setObjectPropVal(option, newOptions, value);\n                changedOps = setOptions(option);\n              } else return getObjectPropVal(_currentOptions, newOptions);\n            } else return _currentOptions;\n          } else {\n            changedOps = setOptions(newOptions);\n          }\n\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\n            update({\n              _changedOptions: changedOps\n            });\n          }\n        };\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\n\n\n        _base.destroy = function () {\n          if (_destroyed) return; //remove this instance from auto update loop\n\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n          disconnectMutationObservers(); //remove all resize observers\n\n          setupResizeObserver(_sizeObserverElement);\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n          for (var extName in _extensions) {\n            _base.removeExt(extName);\n          } //remove all 'destroy' events\n\n\n          while (_destroyEvents[LEXICON.l] > 0) {\n            _destroyEvents.pop()();\n          } //remove all events from host element\n\n\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n          if (_contentGlueElement) remove(_contentGlueElement);\n          if (_contentArrangeElement) remove(_contentArrangeElement);\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n          setupScrollbarsDOM(true);\n          setupScrollbarCornerDOM(true);\n          setupStructureDOM(true); //remove all generated image load events\n\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n          }\n\n          _updateOnLoadElms = undefined$1;\n          _destroyed = true;\n          _sleeping = true; //remove this instance from the instances list\n\n          INSTANCES(pluginTargetElement, 0);\n          dispatchCallback('onDestroyed'); //remove all properties and methods\n          //for (var property in _base)\n          //    delete _base[property];\n          //_base = undefined;\n        };\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\n\n\n        _base.scroll = function (coordinates, duration, easing, complete) {\n          if (arguments.length === 0 || coordinates === undefined$1) {\n            var infoX = _scrollHorizontalInfo;\n            var infoY = _scrollVerticalInfo;\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n            var scrollX = infoX._currentScroll;\n            var scrollXRatio = infoX._currentScrollRatio;\n            var maxScrollX = infoX._maxScroll;\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n            scrollX *= normalizeNegate ? -1 : 1;\n            maxScrollX *= normalizeNegate ? -1 : 1;\n            return {\n              position: {\n                x: scrollX,\n                y: infoY._currentScroll\n              },\n              ratio: {\n                x: scrollXRatio,\n                y: infoY._currentScrollRatio\n              },\n              max: {\n                x: maxScrollX,\n                y: infoY._maxScroll\n              },\n              handleOffset: {\n                x: infoX._handleOffset,\n                y: infoY._handleOffset\n              },\n              handleLength: {\n                x: infoX._handleLength,\n                y: infoY._handleLength\n              },\n              handleLengthRatio: {\n                x: infoX._handleLengthRatio,\n                y: infoY._handleLengthRatio\n              },\n              trackLength: {\n                x: infoX._trackLength,\n                y: infoY._trackLength\n              },\n              snappedHandleOffset: {\n                x: infoX._snappedHandleOffset,\n                y: infoY._snappedHandleOffset\n              },\n              isRTL: _isRTL,\n              isRTLNormalized: _normalizeRTLCache\n            };\n          }\n\n          _base.update(_strSync);\n\n          var normalizeRTL = _normalizeRTLCache;\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\n          var durationIsObject = type(duration) == TYPES.o;\n          var completeCallback = durationIsObject ? duration.complete : complete;\n          var i;\n          var finalScroll = {};\n          var specialEasing = {};\n          var doScrollLeft;\n          var doScrollTop;\n          var animationOptions;\n          var strEnd = 'end';\n          var strBegin = 'begin';\n          var strCenter = 'center';\n          var strNearest = 'nearest';\n          var strAlways = 'always';\n          var strNever = 'never';\n          var strIfNeeded = 'ifneeded';\n          var strLength = LEXICON.l;\n          var settingsAxis;\n          var settingsScroll;\n          var settingsBlock;\n          var settingsMargin;\n          var finalElement;\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n          var updateScrollbarInfos = function updateScrollbarInfos() {\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\n          };\n\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\n            updateScrollbarInfos();\n            completeCallback();\n          };\n\n          function checkSettingsStringValue(currValue, allowedValues) {\n            for (i = 0; i < allowedValues[strLength]; i++) {\n              if (currValue === allowedValues[i]) return true;\n            }\n\n            return false;\n          }\n\n          function getRawScroll(isX, coordinates) {\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n              //decides RTL normalization \"hack\" with .n\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n              for (i = 0; i < coordinateProps[strLength]; i++) {\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n              }\n            }\n          }\n\n          function getFinalScroll(isX, rawScroll) {\n            var isString = type(rawScroll) == TYPES.s;\n            var operator;\n            var amount;\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n            var currScroll = scrollInfo._currentScroll;\n            var maxScroll = scrollInfo._maxScroll;\n            var mult = ' * ';\n            var finalValue;\n            var isRTLisX = _isRTL && isX;\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n            var strReplace = 'replace';\n            var evalFunc = eval;\n            var possibleOperator;\n\n            if (isString) {\n              //check operator\n              if (rawScroll[strLength] > 2) {\n                possibleOperator = rawScroll.substr(0, 2);\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n              } //calculate units and shortcuts\n\n\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n              [strReplace](/</g, 0) //'<'   = 0%\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n            } else {\n              amount = rawScroll;\n            }\n\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n              switch (operator) {\n                case '+=':\n                  finalValue = operatorCurrScroll + amount;\n                  break;\n\n                case '-=':\n                  finalValue = operatorCurrScroll - amount;\n                  break;\n\n                case '*=':\n                  finalValue = operatorCurrScroll * amount;\n                  break;\n\n                case '/=':\n                  finalValue = operatorCurrScroll / amount;\n                  break;\n\n                default:\n                  finalValue = amount;\n                  break;\n              }\n\n              finalValue = invert ? maxScroll - finalValue : finalValue;\n              finalValue *= negate ? -1 : 1;\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n            }\n\n            return finalValue === currScroll ? undefined$1 : finalValue;\n          }\n\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n            var resultDefault = [defaultValue, defaultValue];\n            var valueType = type(value);\n            var valueArrLength;\n            var valueArrItem; //value can be [ string, or array of two strings ]\n\n            if (valueType == valueInternalType) {\n              value = [value, value];\n            } else if (valueType == TYPES.a) {\n              valueArrLength = value[strLength];\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n                if (valueArrLength === 1) value[1] = defaultValue;\n\n                for (i = 0; i < valueArrLength; i++) {\n                  valueArrItem = value[i];\n\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                    value = resultDefault;\n                    break;\n                  }\n                }\n              }\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n            return {\n              x: value[0],\n              y: value[1]\n            };\n          }\n\n          function generateMargin(marginTopRightBottomLeftArray) {\n            var result = [];\n            var currValue;\n            var currValueType;\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n              if (i === valueDirections[strLength]) break;\n              currValue = marginTopRightBottomLeftArray[i];\n              currValueType = type(currValue);\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n            }\n\n            return result;\n          }\n\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n            //get settings\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\n            var marginDefault = [0, 0, 0, 0];\n            var marginType = type(margin);\n            var marginLength;\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n            if (finalElement[strLength] > 0) {\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n                marginLength = margin[strLength];\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n              settingsMargin = margin;\n              var viewportScroll = {\n                l: _scrollHorizontalInfo._currentScroll,\n                t: _scrollVerticalInfo._currentScroll\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n              var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n              var elementOffset = finalElement.offset();\n              var doNotScroll = {\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\n                y: settingsScroll.y == strNever || settingsAxis == _strX\n              };\n              elementOffset[_strTop] -= settingsMargin[0];\n              elementOffset[_strLeft] -= settingsMargin[3];\n              var elementScrollCoordinates = {\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n              };\n\n              if (_isRTL) {\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n              } //measuring is required\n\n\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                var measuringElm = finalElement[0];\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                  width: measuringElm[LEXICON.oW],\n                  height: measuringElm[LEXICON.oH]\n                };\n                var elementSize = {\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                };\n\n                var finalizeBlock = function finalizeBlock(isX) {\n                  var vars = getScrollbarVars(isX);\n                  var wh = vars._w_h;\n                  var lt = vars._left_top;\n                  var xy = vars._x_y;\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\n                  var scrollNever = settingsScroll[xy] == strNever;\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                  var vpSize = _viewportSize[wh];\n                  var vpOffset = viewportOffset[lt];\n                  var elSize = elementSize[wh];\n                  var elOffset = elementOffset[lt];\n                  var divide = blockIsCenter ? 2 : 1;\n                  var elementCenterOffset = elOffset + elSize / 2;\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                    if (blockIsNearest || scrollIfNeeded) {\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                    }\n\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                  }\n                };\n\n                finalizeBlock(true);\n                finalizeBlock(false);\n              }\n\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\n              coordinates = elementScrollCoordinates;\n            }\n          }\n\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\n\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n            if (durationIsObject) {\n              duration.complete = proxyCompleteCallback;\n\n              _viewportElement.animate(finalScroll, duration);\n            } else {\n              animationOptions = {\n                duration: duration,\n                complete: proxyCompleteCallback\n              };\n\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                animationOptions.specialEasing = specialEasing;\n              } else {\n                animationOptions.easing = easing;\n              }\n\n              _viewportElement.animate(finalScroll, animationOptions);\n            }\n          } else {\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n            updateScrollbarInfos();\n          }\n        };\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\n\n\n        _base.scrollStop = function (param1, param2, param3) {\n          _viewportElement.stop(param1, param2, param3);\n\n          return _base;\n        };\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\n\n\n        _base.getElements = function (elementName) {\n          var obj = {\n            target: _targetElementNative,\n            host: _hostElementNative,\n            padding: _paddingElementNative,\n            viewport: _viewportElementNative,\n            content: _contentElementNative,\n            scrollbarHorizontal: {\n              scrollbar: _scrollbarHorizontalElement[0],\n              track: _scrollbarHorizontalTrackElement[0],\n              handle: _scrollbarHorizontalHandleElement[0]\n            },\n            scrollbarVertical: {\n              scrollbar: _scrollbarVerticalElement[0],\n              track: _scrollbarVerticalTrackElement[0],\n              handle: _scrollbarVerticalHandleElement[0]\n            },\n            scrollbarCorner: _scrollbarCornerElement[0]\n          };\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n        };\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\n\n\n        _base.getState = function (stateProperty) {\n          function prepare(obj) {\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\n            var extended = extendDeep({}, obj);\n\n            var changePropertyName = function changePropertyName(from, to) {\n              if (extended[LEXICON.hOP](from)) {\n                extended[to] = extended[from];\n                delete extended[from];\n              }\n            };\n\n            changePropertyName('w', _strWidth); //change w to width\n\n            changePropertyName('h', _strHeight); //change h to height\n\n            delete extended.c; //delete c (the 'changed' prop)\n\n            return extended;\n          }\n\n          var obj = {\n            destroyed: !!prepare(_destroyed),\n            sleeping: !!prepare(_sleeping),\n            autoUpdate: prepare(!_mutationObserversConnected),\n            widthAuto: prepare(_widthAutoCache),\n            heightAuto: prepare(_heightAutoCache),\n            padding: prepare(_cssPaddingCache),\n            overflowAmount: prepare(_overflowAmountCache),\n            hideOverflow: prepare(_hideOverflowCache),\n            hasOverflow: prepare(_hasOverflowCache),\n            contentScrollSize: prepare(_contentScrollSizeCache),\n            viewportSize: prepare(_viewportSize),\n            hostSize: prepare(_hostSizeCache),\n            documentMixed: prepare(_documentMixed)\n          };\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n        };\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\n\n\n        _base.ext = function (extName) {\n          var result;\n\n          var privateMethods = _extensionsPrivateMethods.split(' ');\n\n          var i = 0;\n\n          if (type(extName) == TYPES.s) {\n            if (_extensions[LEXICON.hOP](extName)) {\n              result = extendDeep({}, _extensions[extName]);\n\n              for (; i < privateMethods.length; i++) {\n                delete result[privateMethods[i]];\n              }\n            }\n          } else {\n            result = {};\n\n            for (i in _extensions) {\n              result[i] = extendDeep({}, _base.ext(i));\n            }\n          }\n\n          return result;\n        };\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\n\n\n        _base.addExt = function (extName, extensionOptions) {\n          var registeredExtensionObj = _plugin.extension(extName);\n\n          var instance;\n          var instanceAdded;\n          var instanceContract;\n          var contractResult;\n          var contractFulfilled = true;\n\n          if (registeredExtensionObj) {\n            if (!_extensions[LEXICON.hOP](extName)) {\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n              if (instance) {\n                instanceContract = instance.contract;\n\n                if (type(instanceContract) == TYPES.f) {\n                  contractResult = instanceContract(window);\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                }\n\n                if (contractFulfilled) {\n                  _extensions[extName] = instance;\n                  instanceAdded = instance.added;\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                  return _base.ext(extName);\n                }\n              }\n            } else return _base.ext(extName);\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n        };\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\n\n\n        _base.removeExt = function (extName) {\n          var instance = _extensions[extName];\n          var instanceRemoved;\n\n          if (instance) {\n            delete _extensions[extName];\n            instanceRemoved = instance.removed;\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n            return true;\n          }\n\n          return false;\n        };\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\n\n\n        function construct(targetElement, options, extensions) {\n          _defaultOptions = globals.defaultOptions;\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n          setOptions(extendDeep({}, _defaultOptions, options));\n          _cssCalc = globals.cssCalc;\n          _msieVersion = globals.msie;\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\n          _supportTransition = globals.supportTransition;\n          _supportTransform = globals.supportTransform;\n          _supportPassiveEvents = globals.supportPassiveEvents;\n          _supportResizeObserver = globals.supportResizeObserver;\n          _supportMutationObserver = globals.supportMutationObserver;\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\n          _documentElementNative = _documentElement[0];\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n          _windowElementNative = _windowElement[0];\n          _htmlElement = findFirst(_documentElement, 'html');\n          _bodyElement = findFirst(_htmlElement, 'body');\n          _targetElement = FRAMEWORK(targetElement);\n          _targetElementNative = _targetElement[0];\n          _isTextarea = _targetElement.is('textarea');\n          _isBody = _targetElement.is('body');\n          _documentMixed = _documentElementNative !== document;\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\n\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n          var initBodyScroll;\n\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n            dispatchCallback('onInitializationWithdrawn');\n\n            if (_domExists) {\n              setupStructureDOM(true);\n              setupScrollbarsDOM(true);\n              setupScrollbarCornerDOM(true);\n            }\n\n            _destroyed = true;\n            _sleeping = true;\n            return _base;\n          }\n\n          if (_isBody) {\n            initBodyScroll = {};\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n              _viewportElement.removeAttr(LEXICON.ti);\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n            };\n          } //build OverlayScrollbars DOM\n\n\n          setupStructureDOM();\n          setupScrollbarsDOM();\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n          setupStructureEvents();\n          setupScrollbarEvents(true);\n          setupScrollbarEvents(false);\n          setupScrollbarCornerEvents(); //create mutation observers\n\n          createMutationObservers(); //build resize observer for the host element\n\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n          if (_isBody) {\n            //apply the body scroll to handle it right in the update method\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\n              //set a tabindex to make the viewportElement focusable\n              _viewportElement.attr(LEXICON.ti, '-1');\n\n              _viewportElementNative.focus();\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\n\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n            }\n          } //update for the first time & initialize cache\n\n\n          _base.update(_strAuto); //the plugin is initialized now!\n\n\n          _initialized = true;\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n          each(_callbacksInitQeueue, function (index, value) {\n            dispatchCallback(value.n, value.a);\n          });\n          _callbacksInitQeueue = []; //add extensions\n\n          if (type(extensions) == TYPES.s) extensions = [extensions];\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n            _base.addExt(value);\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n            _base.addExt(key, value);\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n          setTimeout(function () {\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n          }, 333);\n          return _base;\n        }\n\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n          INSTANCES(pluginTargetElement, _base);\n        }\n\n        return _base;\n      }\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\n\n\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var arr = [];\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n        var inst;\n        var result; //pluginTargetElements is null or undefined\n\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\n\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n        initOverlayScrollbarsStatics();\n\n        if (pluginTargetElements[LEXICON.l] > 0) {\n          if (optsIsPlainObj) {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = v;\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n            });\n          } else {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = INSTANCES(v);\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\n            });\n          }\n\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n        }\n\n        return result;\n      };\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\n\n\n      _plugin.globals = function () {\n        initOverlayScrollbarsStatics();\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n        delete globals['msie'];\n        return globals;\n      };\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\n\n\n      _plugin.defaultOptions = function (newDefaultOptions) {\n        initOverlayScrollbarsStatics();\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n      };\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\n\n\n      _plugin.valid = function (osInstance) {\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n      };\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\n\n\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n        var argLen = arguments[LEXICON.l];\n        var i = 0;\n\n        if (argLen < 1 || !extNameTypeString) {\n          //return a copy of all extension objects\n          return FRAMEWORK.extend(true, {\n            length: _pluginsExtensions[LEXICON.l]\n          }, _pluginsExtensions);\n        } else if (extNameTypeString) {\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\n            //register extension\n            _pluginsExtensions.push({\n              name: extensionName,\n              extensionFactory: extension,\n              defaultOptions: defaultOptions\n            });\n          } else {\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n              if (_pluginsExtensions[i].name === extensionName) {\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n              }\n            }\n          }\n        }\n      };\n\n      return _plugin;\n    }();\n\n    if (JQUERY && JQUERY.fn) {\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\n        var _elements = this;\n\n        if (JQUERY.isPlainObject(options)) {\n          JQUERY.each(_elements, function () {\n            PLUGIN(this, options, extensions);\n          });\n          return _elements;\n        } else return PLUGIN(_elements, options);\n      };\n    }\n\n    return PLUGIN;\n  });\n})(OverlayScrollbars$1);\n\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\n\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\n  var _a$options = _a.options,\n      options = _a$options === void 0 ? {} : _a$options,\n      extensions = _a.extensions,\n      className = _a.className,\n      children = _a.children,\n      rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = useRef();\n  var osInstance = useRef();\n  useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), React__default.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), React__default.createElement(\"div\", {\n    className: \"os-padding\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}