{"ast":null,"code":"import _regeneratorRuntime from \"/Users/raulmelo/Documents/projetos/design-system/storybook-wyz/node_modules/@babel/runtime/regenerator/index.js\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nimport memoize from 'memoizerific';\nimport mapValues from 'lodash/mapValues';\nimport pick from 'lodash/pick';\nimport global from 'global';\nimport { SynchronousPromise } from 'synchronous-promise';\nimport { StoryIndexStore } from './StoryIndexStore';\nimport { ArgsStore } from './ArgsStore';\nimport { GlobalsStore } from './GlobalsStore';\nimport { processCSFFile, prepareStory, normalizeProjectAnnotations } from './csf';\nimport { HooksContext } from './hooks'; // TODO -- what are reasonable values for these?\n\nvar CSF_CACHE_SIZE = 1000;\nvar STORY_CACHE_SIZE = 10000;\nexport var StoryStore = /*#__PURE__*/function () {\n  function StoryStore() {\n    var _this = this;\n\n    _classCallCheck(this, StoryStore);\n\n    this.storyIndex = void 0;\n    this.importFn = void 0;\n    this.projectAnnotations = void 0;\n    this.globals = void 0;\n    this.args = void 0;\n    this.hooks = void 0;\n    this.cachedCSFFiles = void 0;\n    this.processCSFFileWithCache = void 0;\n    this.prepareStoryWithCache = void 0;\n    this.initializationPromise = void 0;\n    this.resolveInitializationPromise = void 0;\n\n    this.getStoriesJsonData = function () {\n      var value = _this.getSetStoriesPayload();\n\n      var allowedParameters = ['fileName', 'docsOnly', 'framework', '__id', '__isArgsStory'];\n      var stories = mapValues(value.stories, function (story) {\n        var _global$FEATURES;\n\n        return Object.assign({}, pick(story, ['id', 'name', 'title']), {\n          importPath: _this.storyIndex.stories[story.id].importPath\n        }, !((_global$FEATURES = global.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7) && {\n          kind: story.title,\n          story: story.name,\n          parameters: Object.assign({}, pick(story.parameters, allowedParameters), {\n            fileName: _this.storyIndex.stories[story.id].importPath\n          })\n        });\n      });\n      return {\n        v: 3,\n        stories: stories\n      };\n    };\n\n    this.globals = new GlobalsStore();\n    this.args = new ArgsStore();\n    this.hooks = {}; // We use a cache for these two functions for two reasons:\n    //  1. For performance\n    //  2. To ensure that when the same story is prepared with the same inputs you get the same output\n\n    this.processCSFFileWithCache = memoize(CSF_CACHE_SIZE)(processCSFFile);\n    this.prepareStoryWithCache = memoize(STORY_CACHE_SIZE)(prepareStory); // We cannot call `loadStory()` until we've been initialized properly. But we can wait for it.\n\n    this.initializationPromise = new SynchronousPromise(function (resolve) {\n      _this.resolveInitializationPromise = resolve;\n    });\n  }\n\n  _createClass(StoryStore, [{\n    key: \"setProjectAnnotations\",\n    value: function setProjectAnnotations(projectAnnotations) {\n      // By changing `this.projectAnnotations, we implicitly invalidate the `prepareStoryWithCache`\n      this.projectAnnotations = normalizeProjectAnnotations(projectAnnotations);\n      var globals = projectAnnotations.globals,\n          globalTypes = projectAnnotations.globalTypes;\n      this.globals.set({\n        globals: globals,\n        globalTypes: globalTypes\n      });\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize(_ref) {\n      var storyIndex = _ref.storyIndex,\n          importFn = _ref.importFn,\n          _ref$cache = _ref.cache,\n          cache = _ref$cache === void 0 ? false : _ref$cache;\n      this.storyIndex = new StoryIndexStore(storyIndex);\n      this.importFn = importFn; // We don't need the cache to be loaded to call `loadStory`, we just need the index ready\n\n      this.resolveInitializationPromise();\n      return cache ? this.cacheAllCSFFiles() : SynchronousPromise.resolve();\n    } // This means that one of the CSF files has changed.\n    // If the `importFn` has changed, we will invalidate both caches.\n    // If the `storyIndex` data has changed, we may or may not invalidate the caches, depending\n    // on whether we've loaded the relevant files yet.\n\n  }, {\n    key: \"onStoriesChanged\",\n    value: function () {\n      var _onStoriesChanged = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n        var importFn, storyIndex;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                importFn = _ref2.importFn, storyIndex = _ref2.storyIndex;\n                if (importFn) this.importFn = importFn;\n                if (storyIndex) this.storyIndex.stories = storyIndex.stories;\n\n                if (!this.cachedCSFFiles) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 6;\n                return this.cacheAllCSFFiles();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onStoriesChanged(_x) {\n        return _onStoriesChanged.apply(this, arguments);\n      }\n\n      return onStoriesChanged;\n    }() // To load a single CSF file to service a story we need to look up the importPath in the index\n\n  }, {\n    key: \"loadCSFFileByStoryId\",\n    value: function loadCSFFileByStoryId(storyId) {\n      var _this2 = this;\n\n      var _this$storyIndex$stor = this.storyIndex.storyIdToEntry(storyId),\n          importPath = _this$storyIndex$stor.importPath,\n          title = _this$storyIndex$stor.title;\n\n      return this.importFn(importPath).then(function (moduleExports) {\n        return (// We pass the title in here as it may have been generated by autoTitle on the server.\n          _this2.processCSFFileWithCache(moduleExports, importPath, title)\n        );\n      });\n    }\n  }, {\n    key: \"loadAllCSFFiles\",\n    value: function loadAllCSFFiles() {\n      var _this3 = this;\n\n      var importPaths = {};\n      Object.entries(this.storyIndex.stories).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            storyId = _ref4[0],\n            importPath = _ref4[1].importPath;\n\n        importPaths[importPath] = storyId;\n      });\n      var csfFilePromiseList = Object.entries(importPaths).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            importPath = _ref6[0],\n            storyId = _ref6[1];\n\n        return _this3.loadCSFFileByStoryId(storyId).then(function (csfFile) {\n          return {\n            importPath: importPath,\n            csfFile: csfFile\n          };\n        });\n      });\n      return SynchronousPromise.all(csfFilePromiseList).then(function (list) {\n        return list.reduce(function (acc, _ref7) {\n          var importPath = _ref7.importPath,\n              csfFile = _ref7.csfFile;\n          acc[importPath] = csfFile;\n          return acc;\n        }, {});\n      });\n    }\n  }, {\n    key: \"cacheAllCSFFiles\",\n    value: function cacheAllCSFFiles() {\n      var _this4 = this;\n\n      return this.initializationPromise.then(function () {\n        return _this4.loadAllCSFFiles().then(function (csfFiles) {\n          _this4.cachedCSFFiles = csfFiles;\n        });\n      });\n    } // Load the CSF file for a story and prepare the story from it and the project annotations.\n\n  }, {\n    key: \"loadStory\",\n    value: function () {\n      var _loadStory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref8) {\n        var storyId, csfFile;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                storyId = _ref8.storyId;\n                _context2.next = 3;\n                return this.initializationPromise;\n\n              case 3:\n                _context2.next = 5;\n                return this.loadCSFFileByStoryId(storyId);\n\n              case 5:\n                csfFile = _context2.sent;\n                return _context2.abrupt(\"return\", this.storyFromCSFFile({\n                  storyId: storyId,\n                  csfFile: csfFile\n                }));\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadStory(_x2) {\n        return _loadStory.apply(this, arguments);\n      }\n\n      return loadStory;\n    }() // This function is synchronous for convenience -- often times if you have a CSF file already\n    // it is easier not to have to await `loadStory`.\n\n  }, {\n    key: \"storyFromCSFFile\",\n    value: function storyFromCSFFile(_ref9) {\n      var storyId = _ref9.storyId,\n          csfFile = _ref9.csfFile;\n      var storyAnnotations = csfFile.stories[storyId];\n\n      if (!storyAnnotations) {\n        throw new Error(\"Didn't find '\".concat(storyId, \"' in CSF file, this is unexpected\"));\n      }\n\n      var componentAnnotations = csfFile.meta;\n      var story = this.prepareStoryWithCache(storyAnnotations, componentAnnotations, this.projectAnnotations);\n      this.args.setInitial(story);\n      this.hooks[story.id] = this.hooks[story.id] || new HooksContext();\n      return story;\n    } // If we have a CSF file we can get all the stories from it synchronously\n\n  }, {\n    key: \"componentStoriesFromCSFFile\",\n    value: function componentStoriesFromCSFFile(_ref10) {\n      var _this5 = this;\n\n      var csfFile = _ref10.csfFile;\n      return Object.keys(this.storyIndex.stories).filter(function (storyId) {\n        return !!csfFile.stories[storyId];\n      }).map(function (storyId) {\n        return _this5.storyFromCSFFile({\n          storyId: storyId,\n          csfFile: csfFile\n        });\n      });\n    } // A prepared story does not include args, globals or hooks. These are stored in the story store\n    // and updated separtely to the (immutable) story.\n\n  }, {\n    key: \"getStoryContext\",\n    value: function getStoryContext(story) {\n      return Object.assign({}, story, {\n        args: this.args.get(story.id),\n        globals: this.globals.get(),\n        hooks: this.hooks[story.id]\n      });\n    }\n  }, {\n    key: \"cleanupStory\",\n    value: function cleanupStory(story) {\n      this.hooks[story.id].clean();\n    }\n  }, {\n    key: \"extract\",\n    value: function extract() {\n      var _this6 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeDocsOnly: false\n      };\n\n      if (!this.cachedCSFFiles) {\n        throw new Error('Cannot call extract() unless you call cacheAllCSFFiles() first.');\n      }\n\n      return Object.entries(this.storyIndex.stories).reduce(function (acc, _ref11) {\n        var _ref12 = _slicedToArray(_ref11, 2),\n            storyId = _ref12[0],\n            importPath = _ref12[1].importPath;\n\n        var csfFile = _this6.cachedCSFFiles[importPath];\n\n        var story = _this6.storyFromCSFFile({\n          storyId: storyId,\n          csfFile: csfFile\n        });\n\n        if (!options.includeDocsOnly && story.parameters.docsOnly) {\n          return acc;\n        }\n\n        acc[storyId] = Object.entries(story).reduce(function (storyAcc, _ref13) {\n          var _ref14 = _slicedToArray(_ref13, 2),\n              key = _ref14[0],\n              value = _ref14[1];\n\n          if (typeof value === 'function') {\n            return storyAcc;\n          }\n\n          if (Array.isArray(value)) {\n            return Object.assign(storyAcc, _defineProperty({}, key, value.slice().sort()));\n          }\n\n          return Object.assign(storyAcc, _defineProperty({}, key, value));\n        }, {\n          args: story.initialArgs\n        });\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"getSetStoriesPayload\",\n    value: function getSetStoriesPayload() {\n      var stories = this.extract({\n        includeDocsOnly: true\n      });\n      var kindParameters = Object.values(stories).reduce(function (acc, _ref15) {\n        var title = _ref15.title;\n        acc[title] = {};\n        return acc;\n      }, {});\n      return {\n        v: 2,\n        globals: this.globals.get(),\n        globalParameters: {},\n        kindParameters: kindParameters,\n        stories: stories\n      };\n    }\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      var _this7 = this;\n\n      return Object.values(this.extract()).map(function (_ref16) {\n        var id = _ref16.id;\n        return _this7.fromId(id);\n      });\n    }\n  }, {\n    key: \"fromId\",\n    value: function fromId(storyId) {\n      var _this8 = this;\n\n      if (!this.cachedCSFFiles) {\n        throw new Error('Cannot call fromId/raw() unless you call cacheAllCSFFiles() first.');\n      }\n\n      var importPath;\n\n      try {\n        var _this$storyIndex$stor2 = this.storyIndex.storyIdToEntry(storyId);\n\n        importPath = _this$storyIndex$stor2.importPath;\n      } catch (err) {\n        return null;\n      }\n\n      var csfFile = this.cachedCSFFiles[importPath];\n      var story = this.storyFromCSFFile({\n        storyId: storyId,\n        csfFile: csfFile\n      });\n      return Object.assign({}, story, {\n        storyFn: function storyFn(update) {\n          var context = Object.assign({}, _this8.getStoryContext(story), {\n            viewMode: 'story'\n          });\n          return story.unboundStoryFn(Object.assign({}, context, update));\n        }\n      });\n    }\n  }]);\n\n  return StoryStore;\n}();","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","err","isArray","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","memoize","mapValues","pick","global","SynchronousPromise","StoryIndexStore","ArgsStore","GlobalsStore","processCSFFile","prepareStory","normalizeProjectAnnotations","HooksContext","CSF_CACHE_SIZE","STORY_CACHE_SIZE","StoryStore","_this","storyIndex","importFn","projectAnnotations","globals","hooks","cachedCSFFiles","processCSFFileWithCache","prepareStoryWithCache","initializationPromise","resolveInitializationPromise","getStoriesJsonData","getSetStoriesPayload","allowedParameters","stories","story","_global$FEATURES","assign","importPath","id","FEATURES","breakingChangesV7","kind","title","parameters","fileName","v","setProjectAnnotations","globalTypes","set","initialize","_ref","_ref$cache","cache","cacheAllCSFFiles","_onStoriesChanged","mark","_callee","_ref2","wrap","_callee$","_context","prev","stop","onStoriesChanged","_x","loadCSFFileByStoryId","storyId","_this2","_this$storyIndex$stor","storyIdToEntry","moduleExports","loadAllCSFFiles","_this3","importPaths","entries","forEach","_ref3","_ref4","csfFilePromiseList","map","_ref5","_ref6","csfFile","all","list","reduce","acc","_ref7","_this4","csfFiles","_loadStory","_callee2","_ref8","_callee2$","_context2","sent","abrupt","storyFromCSFFile","loadStory","_x2","_ref9","storyAnnotations","Error","concat","componentAnnotations","meta","setInitial","componentStoriesFromCSFFile","_ref10","_this5","keys","filter","getStoryContext","get","cleanupStory","clean","extract","_this6","options","includeDocsOnly","_ref11","_ref12","docsOnly","storyAcc","_ref13","_ref14","sort","initialArgs","kindParameters","values","_ref15","globalParameters","raw","_this7","_ref16","fromId","_this8","_this$storyIndex$stor2","storyFn","update","context","viewMode","unboundStoryFn"],"sources":["/Users/raulmelo/Documents/projetos/design-system/storybook-wyz/node_modules/@storybook/store/dist/esm/StoryStore.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport memoize from 'memoizerific';\nimport mapValues from 'lodash/mapValues';\nimport pick from 'lodash/pick';\nimport global from 'global';\nimport { SynchronousPromise } from 'synchronous-promise';\nimport { StoryIndexStore } from './StoryIndexStore';\nimport { ArgsStore } from './ArgsStore';\nimport { GlobalsStore } from './GlobalsStore';\nimport { processCSFFile, prepareStory, normalizeProjectAnnotations } from './csf';\nimport { HooksContext } from './hooks'; // TODO -- what are reasonable values for these?\n\nvar CSF_CACHE_SIZE = 1000;\nvar STORY_CACHE_SIZE = 10000;\nexport var StoryStore = /*#__PURE__*/function () {\n  function StoryStore() {\n    var _this = this;\n\n    _classCallCheck(this, StoryStore);\n\n    this.storyIndex = void 0;\n    this.importFn = void 0;\n    this.projectAnnotations = void 0;\n    this.globals = void 0;\n    this.args = void 0;\n    this.hooks = void 0;\n    this.cachedCSFFiles = void 0;\n    this.processCSFFileWithCache = void 0;\n    this.prepareStoryWithCache = void 0;\n    this.initializationPromise = void 0;\n    this.resolveInitializationPromise = void 0;\n\n    this.getStoriesJsonData = function () {\n      var value = _this.getSetStoriesPayload();\n\n      var allowedParameters = ['fileName', 'docsOnly', 'framework', '__id', '__isArgsStory'];\n      var stories = mapValues(value.stories, function (story) {\n        var _global$FEATURES;\n\n        return Object.assign({}, pick(story, ['id', 'name', 'title']), {\n          importPath: _this.storyIndex.stories[story.id].importPath\n        }, !((_global$FEATURES = global.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7) && {\n          kind: story.title,\n          story: story.name,\n          parameters: Object.assign({}, pick(story.parameters, allowedParameters), {\n            fileName: _this.storyIndex.stories[story.id].importPath\n          })\n        });\n      });\n      return {\n        v: 3,\n        stories: stories\n      };\n    };\n\n    this.globals = new GlobalsStore();\n    this.args = new ArgsStore();\n    this.hooks = {}; // We use a cache for these two functions for two reasons:\n    //  1. For performance\n    //  2. To ensure that when the same story is prepared with the same inputs you get the same output\n\n    this.processCSFFileWithCache = memoize(CSF_CACHE_SIZE)(processCSFFile);\n    this.prepareStoryWithCache = memoize(STORY_CACHE_SIZE)(prepareStory); // We cannot call `loadStory()` until we've been initialized properly. But we can wait for it.\n\n    this.initializationPromise = new SynchronousPromise(function (resolve) {\n      _this.resolveInitializationPromise = resolve;\n    });\n  }\n\n  _createClass(StoryStore, [{\n    key: \"setProjectAnnotations\",\n    value: function setProjectAnnotations(projectAnnotations) {\n      // By changing `this.projectAnnotations, we implicitly invalidate the `prepareStoryWithCache`\n      this.projectAnnotations = normalizeProjectAnnotations(projectAnnotations);\n      var globals = projectAnnotations.globals,\n          globalTypes = projectAnnotations.globalTypes;\n      this.globals.set({\n        globals: globals,\n        globalTypes: globalTypes\n      });\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize(_ref) {\n      var storyIndex = _ref.storyIndex,\n          importFn = _ref.importFn,\n          _ref$cache = _ref.cache,\n          cache = _ref$cache === void 0 ? false : _ref$cache;\n      this.storyIndex = new StoryIndexStore(storyIndex);\n      this.importFn = importFn; // We don't need the cache to be loaded to call `loadStory`, we just need the index ready\n\n      this.resolveInitializationPromise();\n      return cache ? this.cacheAllCSFFiles() : SynchronousPromise.resolve();\n    } // This means that one of the CSF files has changed.\n    // If the `importFn` has changed, we will invalidate both caches.\n    // If the `storyIndex` data has changed, we may or may not invalidate the caches, depending\n    // on whether we've loaded the relevant files yet.\n\n  }, {\n    key: \"onStoriesChanged\",\n    value: function () {\n      var _onStoriesChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {\n        var importFn, storyIndex;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                importFn = _ref2.importFn, storyIndex = _ref2.storyIndex;\n                if (importFn) this.importFn = importFn;\n                if (storyIndex) this.storyIndex.stories = storyIndex.stories;\n\n                if (!this.cachedCSFFiles) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 6;\n                return this.cacheAllCSFFiles();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onStoriesChanged(_x) {\n        return _onStoriesChanged.apply(this, arguments);\n      }\n\n      return onStoriesChanged;\n    }() // To load a single CSF file to service a story we need to look up the importPath in the index\n\n  }, {\n    key: \"loadCSFFileByStoryId\",\n    value: function loadCSFFileByStoryId(storyId) {\n      var _this2 = this;\n\n      var _this$storyIndex$stor = this.storyIndex.storyIdToEntry(storyId),\n          importPath = _this$storyIndex$stor.importPath,\n          title = _this$storyIndex$stor.title;\n\n      return this.importFn(importPath).then(function (moduleExports) {\n        return (// We pass the title in here as it may have been generated by autoTitle on the server.\n          _this2.processCSFFileWithCache(moduleExports, importPath, title)\n        );\n      });\n    }\n  }, {\n    key: \"loadAllCSFFiles\",\n    value: function loadAllCSFFiles() {\n      var _this3 = this;\n\n      var importPaths = {};\n      Object.entries(this.storyIndex.stories).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            storyId = _ref4[0],\n            importPath = _ref4[1].importPath;\n\n        importPaths[importPath] = storyId;\n      });\n      var csfFilePromiseList = Object.entries(importPaths).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            importPath = _ref6[0],\n            storyId = _ref6[1];\n\n        return _this3.loadCSFFileByStoryId(storyId).then(function (csfFile) {\n          return {\n            importPath: importPath,\n            csfFile: csfFile\n          };\n        });\n      });\n      return SynchronousPromise.all(csfFilePromiseList).then(function (list) {\n        return list.reduce(function (acc, _ref7) {\n          var importPath = _ref7.importPath,\n              csfFile = _ref7.csfFile;\n          acc[importPath] = csfFile;\n          return acc;\n        }, {});\n      });\n    }\n  }, {\n    key: \"cacheAllCSFFiles\",\n    value: function cacheAllCSFFiles() {\n      var _this4 = this;\n\n      return this.initializationPromise.then(function () {\n        return _this4.loadAllCSFFiles().then(function (csfFiles) {\n          _this4.cachedCSFFiles = csfFiles;\n        });\n      });\n    } // Load the CSF file for a story and prepare the story from it and the project annotations.\n\n  }, {\n    key: \"loadStory\",\n    value: function () {\n      var _loadStory = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref8) {\n        var storyId, csfFile;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                storyId = _ref8.storyId;\n                _context2.next = 3;\n                return this.initializationPromise;\n\n              case 3:\n                _context2.next = 5;\n                return this.loadCSFFileByStoryId(storyId);\n\n              case 5:\n                csfFile = _context2.sent;\n                return _context2.abrupt(\"return\", this.storyFromCSFFile({\n                  storyId: storyId,\n                  csfFile: csfFile\n                }));\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadStory(_x2) {\n        return _loadStory.apply(this, arguments);\n      }\n\n      return loadStory;\n    }() // This function is synchronous for convenience -- often times if you have a CSF file already\n    // it is easier not to have to await `loadStory`.\n\n  }, {\n    key: \"storyFromCSFFile\",\n    value: function storyFromCSFFile(_ref9) {\n      var storyId = _ref9.storyId,\n          csfFile = _ref9.csfFile;\n      var storyAnnotations = csfFile.stories[storyId];\n\n      if (!storyAnnotations) {\n        throw new Error(\"Didn't find '\".concat(storyId, \"' in CSF file, this is unexpected\"));\n      }\n\n      var componentAnnotations = csfFile.meta;\n      var story = this.prepareStoryWithCache(storyAnnotations, componentAnnotations, this.projectAnnotations);\n      this.args.setInitial(story);\n      this.hooks[story.id] = this.hooks[story.id] || new HooksContext();\n      return story;\n    } // If we have a CSF file we can get all the stories from it synchronously\n\n  }, {\n    key: \"componentStoriesFromCSFFile\",\n    value: function componentStoriesFromCSFFile(_ref10) {\n      var _this5 = this;\n\n      var csfFile = _ref10.csfFile;\n      return Object.keys(this.storyIndex.stories).filter(function (storyId) {\n        return !!csfFile.stories[storyId];\n      }).map(function (storyId) {\n        return _this5.storyFromCSFFile({\n          storyId: storyId,\n          csfFile: csfFile\n        });\n      });\n    } // A prepared story does not include args, globals or hooks. These are stored in the story store\n    // and updated separtely to the (immutable) story.\n\n  }, {\n    key: \"getStoryContext\",\n    value: function getStoryContext(story) {\n      return Object.assign({}, story, {\n        args: this.args.get(story.id),\n        globals: this.globals.get(),\n        hooks: this.hooks[story.id]\n      });\n    }\n  }, {\n    key: \"cleanupStory\",\n    value: function cleanupStory(story) {\n      this.hooks[story.id].clean();\n    }\n  }, {\n    key: \"extract\",\n    value: function extract() {\n      var _this6 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeDocsOnly: false\n      };\n\n      if (!this.cachedCSFFiles) {\n        throw new Error('Cannot call extract() unless you call cacheAllCSFFiles() first.');\n      }\n\n      return Object.entries(this.storyIndex.stories).reduce(function (acc, _ref11) {\n        var _ref12 = _slicedToArray(_ref11, 2),\n            storyId = _ref12[0],\n            importPath = _ref12[1].importPath;\n\n        var csfFile = _this6.cachedCSFFiles[importPath];\n\n        var story = _this6.storyFromCSFFile({\n          storyId: storyId,\n          csfFile: csfFile\n        });\n\n        if (!options.includeDocsOnly && story.parameters.docsOnly) {\n          return acc;\n        }\n\n        acc[storyId] = Object.entries(story).reduce(function (storyAcc, _ref13) {\n          var _ref14 = _slicedToArray(_ref13, 2),\n              key = _ref14[0],\n              value = _ref14[1];\n\n          if (typeof value === 'function') {\n            return storyAcc;\n          }\n\n          if (Array.isArray(value)) {\n            return Object.assign(storyAcc, _defineProperty({}, key, value.slice().sort()));\n          }\n\n          return Object.assign(storyAcc, _defineProperty({}, key, value));\n        }, {\n          args: story.initialArgs\n        });\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"getSetStoriesPayload\",\n    value: function getSetStoriesPayload() {\n      var stories = this.extract({\n        includeDocsOnly: true\n      });\n      var kindParameters = Object.values(stories).reduce(function (acc, _ref15) {\n        var title = _ref15.title;\n        acc[title] = {};\n        return acc;\n      }, {});\n      return {\n        v: 2,\n        globals: this.globals.get(),\n        globalParameters: {},\n        kindParameters: kindParameters,\n        stories: stories\n      };\n    }\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      var _this7 = this;\n\n      return Object.values(this.extract()).map(function (_ref16) {\n        var id = _ref16.id;\n        return _this7.fromId(id);\n      });\n    }\n  }, {\n    key: \"fromId\",\n    value: function fromId(storyId) {\n      var _this8 = this;\n\n      if (!this.cachedCSFFiles) {\n        throw new Error('Cannot call fromId/raw() unless you call cacheAllCSFFiles() first.');\n      }\n\n      var importPath;\n\n      try {\n        var _this$storyIndex$stor2 = this.storyIndex.storyIdToEntry(storyId);\n\n        importPath = _this$storyIndex$stor2.importPath;\n      } catch (err) {\n        return null;\n      }\n\n      var csfFile = this.cachedCSFFiles[importPath];\n      var story = this.storyFromCSFFile({\n        storyId: storyId,\n        csfFile: csfFile\n      });\n      return Object.assign({}, story, {\n        storyFn: function storyFn(update) {\n          var context = Object.assign({}, _this8.getStoryContext(story), {\n            viewMode: 'story'\n          });\n          return story.unboundStoryFn(Object.assign({}, context, update));\n        }\n      });\n    }\n  }]);\n\n  return StoryStore;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module"}