{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $asyncIterator = GetIntrinsic('%Symbol.asyncIterator%', true);\n\nvar inspect = require('object-inspect');\n\nvar hasSymbols = require('has-symbols')();\n\nvar getIteratorMethod = require('../helpers/getIteratorMethod');\n\nvar AdvanceStringIndex = require('./AdvanceStringIndex');\n\nvar Call = require('./Call');\n\nvar GetMethod = require('./GetMethod');\n\nvar IsArray = require('./IsArray');\n\nvar Type = require('./Type'); // https://262.ecma-international.org/9.0/#sec-getiterator\n\n\nmodule.exports = function GetIterator(obj, hint, method) {\n  var actualHint = hint;\n\n  if (arguments.length < 2) {\n    actualHint = 'sync';\n  }\n\n  if (actualHint !== 'sync' && actualHint !== 'async') {\n    throw new $TypeError(\"Assertion failed: `hint` must be one of 'sync' or 'async', got \" + inspect(hint));\n  }\n\n  var actualMethod = method;\n\n  if (arguments.length < 3) {\n    if (actualHint === 'async') {\n      if (hasSymbols && $asyncIterator) {\n        actualMethod = GetMethod(obj, $asyncIterator);\n      }\n\n      if (actualMethod === undefined) {\n        throw new $TypeError(\"async from sync iterators aren't currently supported\");\n      }\n    } else {\n      actualMethod = getIteratorMethod({\n        AdvanceStringIndex: AdvanceStringIndex,\n        GetMethod: GetMethod,\n        IsArray: IsArray\n      }, obj);\n    }\n  }\n\n  var iterator = Call(actualMethod, obj);\n\n  if (Type(iterator) !== 'Object') {\n    throw new $TypeError('iterator must return an object');\n  }\n\n  return iterator; // TODO: This should return an IteratorRecord\n\n  /*\n  var nextMethod = GetV(iterator, 'next');\n  return {\n  \t'[[Iterator]]': iterator,\n  \t'[[NextMethod]]': nextMethod,\n  \t'[[Done]]': false\n  };\n  */\n};","map":{"version":3,"names":["GetIntrinsic","require","$TypeError","$asyncIterator","inspect","hasSymbols","getIteratorMethod","AdvanceStringIndex","Call","GetMethod","IsArray","Type","module","exports","GetIterator","obj","hint","method","actualHint","arguments","length","actualMethod","undefined","iterator"],"sources":["/Users/raulmelo/Documents/projetos/design-system/storybook-wyz/node_modules/es-abstract/2021/GetIterator.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $asyncIterator = GetIntrinsic('%Symbol.asyncIterator%', true);\n\nvar inspect = require('object-inspect');\nvar hasSymbols = require('has-symbols')();\n\nvar getIteratorMethod = require('../helpers/getIteratorMethod');\nvar AdvanceStringIndex = require('./AdvanceStringIndex');\nvar Call = require('./Call');\nvar GetMethod = require('./GetMethod');\nvar IsArray = require('./IsArray');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/9.0/#sec-getiterator\nmodule.exports = function GetIterator(obj, hint, method) {\n\tvar actualHint = hint;\n\tif (arguments.length < 2) {\n\t\tactualHint = 'sync';\n\t}\n\tif (actualHint !== 'sync' && actualHint !== 'async') {\n\t\tthrow new $TypeError(\"Assertion failed: `hint` must be one of 'sync' or 'async', got \" + inspect(hint));\n\t}\n\n\tvar actualMethod = method;\n\tif (arguments.length < 3) {\n\t\tif (actualHint === 'async') {\n\t\t\tif (hasSymbols && $asyncIterator) {\n\t\t\t\tactualMethod = GetMethod(obj, $asyncIterator);\n\t\t\t}\n\t\t\tif (actualMethod === undefined) {\n\t\t\t\tthrow new $TypeError(\"async from sync iterators aren't currently supported\");\n\t\t\t}\n\t\t} else {\n\t\t\tactualMethod = getIteratorMethod(\n\t\t\t\t{\n\t\t\t\t\tAdvanceStringIndex: AdvanceStringIndex,\n\t\t\t\t\tGetMethod: GetMethod,\n\t\t\t\t\tIsArray: IsArray\n\t\t\t\t},\n\t\t\t\tobj\n\t\t\t);\n\t\t}\n\t}\n\tvar iterator = Call(actualMethod, obj);\n\tif (Type(iterator) !== 'Object') {\n\t\tthrow new $TypeError('iterator must return an object');\n\t}\n\n\treturn iterator;\n\n\t// TODO: This should return an IteratorRecord\n\t/*\n\tvar nextMethod = GetV(iterator, 'next');\n\treturn {\n\t\t'[[Iterator]]': iterator,\n\t\t'[[NextMethod]]': nextMethod,\n\t\t'[[Done]]': false\n\t};\n\t*/\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;AACA,IAAIG,cAAc,GAAGH,YAAY,CAAC,wBAAD,EAA2B,IAA3B,CAAjC;;AAEA,IAAII,OAAO,GAAGH,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAII,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAAP,EAAjB;;AAEA,IAAIK,iBAAiB,GAAGL,OAAO,CAAC,8BAAD,CAA/B;;AACA,IAAIM,kBAAkB,GAAGN,OAAO,CAAC,sBAAD,CAAhC;;AACA,IAAIO,IAAI,GAAGP,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIQ,SAAS,GAAGR,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIS,OAAO,GAAGT,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIU,IAAI,GAAGV,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AACAW,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,MAAhC,EAAwC;EACxD,IAAIC,UAAU,GAAGF,IAAjB;;EACA,IAAIG,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;IACzBF,UAAU,GAAG,MAAb;EACA;;EACD,IAAIA,UAAU,KAAK,MAAf,IAAyBA,UAAU,KAAK,OAA5C,EAAqD;IACpD,MAAM,IAAIhB,UAAJ,CAAe,oEAAoEE,OAAO,CAACY,IAAD,CAA1F,CAAN;EACA;;EAED,IAAIK,YAAY,GAAGJ,MAAnB;;EACA,IAAIE,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;IACzB,IAAIF,UAAU,KAAK,OAAnB,EAA4B;MAC3B,IAAIb,UAAU,IAAIF,cAAlB,EAAkC;QACjCkB,YAAY,GAAGZ,SAAS,CAACM,GAAD,EAAMZ,cAAN,CAAxB;MACA;;MACD,IAAIkB,YAAY,KAAKC,SAArB,EAAgC;QAC/B,MAAM,IAAIpB,UAAJ,CAAe,sDAAf,CAAN;MACA;IACD,CAPD,MAOO;MACNmB,YAAY,GAAGf,iBAAiB,CAC/B;QACCC,kBAAkB,EAAEA,kBADrB;QAECE,SAAS,EAAEA,SAFZ;QAGCC,OAAO,EAAEA;MAHV,CAD+B,EAM/BK,GAN+B,CAAhC;IAQA;EACD;;EACD,IAAIQ,QAAQ,GAAGf,IAAI,CAACa,YAAD,EAAeN,GAAf,CAAnB;;EACA,IAAIJ,IAAI,CAACY,QAAD,CAAJ,KAAmB,QAAvB,EAAiC;IAChC,MAAM,IAAIrB,UAAJ,CAAe,gCAAf,CAAN;EACA;;EAED,OAAOqB,QAAP,CAlCwD,CAoCxD;;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CA7CD"},"metadata":{},"sourceType":"script"}